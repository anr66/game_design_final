<?xml version="1.0"?>
<doc>
	<assembly>
		<name>UnityEditor</name>
	</assembly>
	<members>
		<member name="T:UnityEditor.ArrayUtility">
			<summary>Helpers for builtin arrays.</summary>
		</member>
		<member name="M:UnityEditor.ArrayUtility.Add(T[]&,T)">
			<summary>Appends item to the end of array.</summary>
		</member>
		<member name="M:UnityEditor.ArrayUtility.ArrayEquals(T[],T[])">
			<summary>Compares two arrays.</summary>
		</member>
		<member name="M:UnityEditor.ArrayUtility.ArrayReferenceEquals(T[],T[])">
			<summary>Compares two array references.</summary>
		</member>
		<member name="M:UnityEditor.ArrayUtility.AddRange(T[]&,T[])">
			<summary>Appends items to the end of array.</summary>
		</member>
		<member name="M:UnityEditor.ArrayUtility.Insert(T[]&,System.Int32,T)">
			<summary>Inserts item item at position index.</summary>
		</member>
		<member name="M:UnityEditor.ArrayUtility.Remove(T[]&,T)">
			<summary>Removes item from array.</summary>
		</member>
		<member name="M:UnityEditor.ArrayUtility.FindIndex(T[],System.Predicate`1<T>)">
			<summary>Find the index of the first element that satisfies the predicate.</summary>
		</member>
		<member name="M:UnityEditor.ArrayUtility.IndexOf(T[],T)">
			<summary>Index of first element with value value.</summary>
		</member>
		<member name="M:UnityEditor.ArrayUtility.LastIndexOf(T[],T)">
			<summary>Index of the last element with value value.</summary>
		</member>
		<member name="M:UnityEditor.ArrayUtility.RemoveAt(T[]&,System.Int32)">
			<summary>Remove element at position index.</summary>
		</member>
		<member name="M:UnityEditor.ArrayUtility.Contains(T[],T)">
			<summary>Determines if the array contains the item.</summary>
		</member>
		<member name="M:UnityEditor.ArrayUtility.Clear(T[]&)">
			<summary>Clears the array.</summary>
		</member>
		<member name="T:UnityEditor.AssemblyReloadEvents">
			<summary>This class has event dispatchers for assembly reload events.</summary>
		</member>
		<member name="T:UnityEditor.AssemblyReloadEvents.AssemblyReloadCallback">
			<summary>Delegate used for assembly reload events.</summary>
		</member>
		<member name="T:UnityEditor.AssetDeleteResult">
			<summary>Result of Asset delete operation</summary>
		</member>
		<member name="T:UnityEditor.AssetMoveResult">
			<summary>Result of Asset move</summary>
		</member>
		<member name="T:UnityEditor.AssetPostprocessor">
			<summary>AssetPostprocessor lets you hook into the import pipeline and run scripts prior or after importing assets.</summary>
		</member>
		<member name="P:UnityEditor.AssetPostprocessor.assetPath">
			<summary>The path name of the asset being imported.</summary>
		</member>
		<member name="P:UnityEditor.AssetPostprocessor.context">
			<summary>The import context.</summary>
		</member>
		<member name="P:UnityEditor.AssetPostprocessor.assetImporter">
			<summary>Reference to the asset importer.</summary>
		</member>
		<member name="M:UnityEditor.AssetPostprocessor.LogWarning(System.String)">
			<summary>Logs an import warning to the console.</summary>
		</member>
		<member name="M:UnityEditor.AssetPostprocessor.LogWarning(System.String,UnityEngine.Object)">
			<summary>Logs an import warning to the console.</summary>
		</member>
		<member name="M:UnityEditor.AssetPostprocessor.LogError(System.String)">
			<summary>Logs an import error message to the console.</summary>
		</member>
		<member name="M:UnityEditor.AssetPostprocessor.LogError(System.String,UnityEngine.Object)">
			<summary>Logs an import error message to the console.</summary>
		</member>
		<member name="M:UnityEditor.AssetPostprocessor.GetVersion()">
			<summary>Returns the version of the asset postprocessor.</summary>
		</member>
		<member name="M:UnityEditor.AssetPostprocessor.GetPostprocessOrder()">
			<summary>Override the order in which importers are processed.</summary>
		</member>
		<member name="T:UnityEditor.BuildOptions">
			<summary>Building options. Multiple options can be combined together.</summary>
		</member>
		<member name="T:UnityEditor.BuildAssetBundleOptions">
			<summary>Asset Bundle building options.</summary>
		</member>
		<member name="T:UnityEditor.AssetBundleBuild">
			<summary>AssetBundle building map entry.</summary>
		</member>
		<member name="F:UnityEditor.AssetBundleBuild.assetBundleName">
			<summary>AssetBundle name.</summary>
		</member>
		<member name="F:UnityEditor.AssetBundleBuild.assetBundleVariant">
			<summary>AssetBundle variant.</summary>
		</member>
		<member name="F:UnityEditor.AssetBundleBuild.assetNames">
			<summary>Asset names which belong to the given AssetBundle.</summary>
		</member>
		<member name="T:UnityEditor.BuildPlayerWindow">
			<summary>The default build settings window.</summary>
		</member>
		<member name="F:UnityEditor.AssetBundleBuild.addressableNames">
			<summary>Addressable name used to load an asset.</summary>
		</member>
		<member name="M:UnityEditor.BuildPlayerWindow.ShowBuildPlayerWindow()">
			<summary>Open the build settings window.</summary>
		</member>
		<member name="T:UnityEditor.BuildPlayerOptions">
			<summary>Provide various options to control the behavior of BuildPipeline.BuildPlayer.</summary>
		</member>
		<member name="T:UnityEditor.AudioImporterSampleSettings">
			<summary>This structure contains a collection of settings used to define how an AudioClip should be imported.This  structure is used with the AudioImporter to define how the AudioClip should be imported and treated during loading within the Scene.</summary>
		</member>
		<member name="P:UnityEditor.BuildPlayerOptions.scenes">
			<summary>The Scenes to be included in the build. If empty, the currently open Scene will be built. Paths are relative to the project folder (Assets/MyLevels/MyScene.unity).</summary>
		</member>
		<member name="M:UnityEditor.BuildPlayerWindow.RegisterGetBuildPlayerOptionsHandler(System.Func`2<UnityEditor.BuildPlayerOptions,UnityEditor.BuildPlayerOptions>)">
			<summary>Register a delegate method to calculate BuildPlayerOptions that are passed to the build player handler. Registering a null value will restore default behavior, which is the equivalent of calling BuildPlayerWindow.DefaultBuildMethods.GetBuildPlayerOptions.</summary>
		</member>
		<member name="F:UnityEditor.AudioImporterSampleSettings.loadType">
			<summary>LoadType defines how the imported AudioClip data should be loaded.</summary>
		</member>
		<member name="P:UnityEditor.BuildPlayerOptions.locationPathName">
			<summary>The path where the application will be built.</summary>
		</member>
		<member name="T:UnityEditor.BuildTarget">
			<summary>Target build platform.</summary>
		</member>
		<member name="F:UnityEditor.AudioImporterSampleSettings.sampleRateSetting">
			<summary>Defines how the sample rate is modified (if at all) of the importer audio file.</summary>
		</member>
		<member name="P:UnityEditor.BuildPlayerOptions.assetBundleManifestPath">
			<summary>The path to an manifest file describing all of the asset bundles used in the build (optional).</summary>
		</member>
		<member name="F:UnityEditor.AudioImporterSampleSettings.sampleRateOverride">
			<summary>Target sample rate to convert to when samplerateSetting is set to OverrideSampleRate.</summary>
		</member>
		<member name="P:UnityEditor.BuildPlayerOptions.targetGroup">
			<summary>The BuildTargetGroup to build.</summary>
		</member>
		<member name="P:UnityEditor.BuildPlayerOptions.target">
			<summary>The BuildTarget to build.</summary>
		</member>
		<member name="P:UnityEditor.BuildPlayerOptions.options">
			<summary>Additional BuildOptions, like whether to run the built player.</summary>
		</member>
		<member name="T:UnityEditor.BuildPipeline">
			<summary>Lets you programmatically build players or AssetBundles which can be loaded from the web.</summary>
		</member>
		<member name="P:UnityEditor.BuildPipeline.isBuildingPlayer">
			<summary>Is a player currently being built?</summary>
		</member>
		<member name="T:UnityEditor.AudioSampleRateSetting">
			<summary>The sample rate setting used within the AudioImporter. This defines the sample rate conversion of audio on import.</summary>
		</member>
		<member name="M:UnityEditor.BuildPipeline.PushAssetDependencies()">
			<summary>Lets you manage cross-references and dependencies between different asset bundles and player builds.</summary>
		</member>
		<member name="T:UnityEditor.AudioImporter">
			<summary>Audio importer lets you modify AudioClip import settings from editor scripts.</summary>
		</member>
		<member name="T:UnityEditor.BuildPlayerWindow.BuildMethodException">
			<summary>Exceptions used to indicate abort or failure in the callbacks registered via BuildPlayerWindow.RegisterBuildPlayerHandler and BuildPlayerWindow.RegisterGetBuildPlayerOptionsHandler.</summary>
		</member>
		<member name="M:UnityEditor.BuildPipeline.PopAssetDependencies()">
			<summary>Lets you manage cross-references and dependencies between different asset bundles and player builds.</summary>
		</member>
		<member name="P:UnityEditor.AudioImporter.defaultSampleSettings">
			<summary>The default sample settings for the AudioClip importer.</summary>
		</member>
		<member name="T:UnityEditor.BuildPlayerWindow.DefaultBuildMethods">
			<summary>Default build methods for the BuildPlayerWindow.</summary>
		</member>
		<member name="M:UnityEditor.BuildPipeline.BuildPlayer(UnityEditor.EditorBuildSettingsScene[],System.String,UnityEditor.BuildTarget,UnityEditor.BuildOptions)">
			<summary>Builds a player.</summary>
		</member>
		<member name="P:UnityEditor.AudioImporter.forceToMono">
			<summary>Force audioclips to mono?</summary>
		</member>
		<member name="M:UnityEditor.BuildPipeline.BuildPlayer(System.String[],System.String,UnityEditor.BuildTarget,UnityEditor.BuildOptions)">
			<summary>Builds a player.</summary>
		</member>
		<member name="M:UnityEditor.BuildPipeline.BuildPlayer(UnityEditor.BuildPlayerOptions)">
			<summary>Builds a player.</summary>
		</member>
		<member name="P:UnityEditor.AudioImporter.ambisonic">
			<summary>When this flag is set, the audio clip will be treated as being ambisonic.</summary>
		</member>
		<member name="T:UnityEditor.CallbackOrderAttribute">
			<summary>Base class for Attributes that require a callback index.</summary>
		</member>
		<member name="M:UnityEditor.BuildPipeline.BuildStreamedSceneAssetBundle(System.String[],System.String,UnityEditor.BuildTarget,UnityEditor.BuildOptions)">
			<summary>Builds one or more Scenes and all their dependencies into a compressed asset bundle.</summary>
		</member>
		<member name="P:UnityEditor.AudioImporter.loadInBackground">
			<summary>Corresponding to the "Load In Background" flag in the AudioClip inspector, when this flag is set, the loading of the clip will happen delayed without blocking the main thread.</summary>
		</member>
		<member name="M:UnityEditor.BuildPipeline.BuildStreamedSceneAssetBundle(System.String[],System.String,UnityEditor.BuildTarget)">
			<summary>Builds one or more Scenes and all their dependencies into a compressed asset bundle.</summary>
		</member>
		<member name="M:UnityEditor.BuildPipeline.BuildStreamedSceneAssetBundle(System.String[],System.String,UnityEditor.BuildTarget,System.UInt32&,UnityEditor.BuildOptions)">
			<summary>Builds one or more Scenes and all their dependencies into a compressed asset bundle.</summary>
		</member>
		<member name="P:UnityEditor.AudioImporter.preloadAudioData">
			<summary>Preloads audio data of the clip when the clip asset is loaded. When this flag is off, scripts have to call AudioClip.LoadAudioData() to load the data before the clip can be played. Properties like length, channels and format are available before the audio data has been loaded.</summary>
		</member>
		<member name="M:UnityEditor.BuildPipeline.BuildStreamedSceneAssetBundle(System.String[],System.String,UnityEditor.BuildTargetGroup,UnityEditor.BuildTarget,System.UInt32&,UnityEditor.BuildOptions)">
			<summary>Builds one or more Scenes and all their dependencies into a compressed asset bundle.</summary>
		</member>
		<member name="M:UnityEditor.BuildPipeline.BuildStreamedSceneAssetBundle(System.String[],System.String,UnityEditor.BuildTarget,System.UInt32&)">
			<summary>Builds one or more Scenes and all their dependencies into a compressed asset bundle.</summary>
		</member>
		<member name="P:UnityEditor.AudioImporter.compressionBitrate">
			<summary>Compression bitrate.</summary>
		</member>
		<member name="T:UnityEditor.DefaultAsset">
			<summary>DefaultAsset is used for assets that do not have a specific type (yet).</summary>
		</member>
		<member name="M:UnityEditor.BuildPipeline.BuildAssetBundle(UnityEngine.Object,UnityEngine.Object[],System.String,UnityEditor.BuildAssetBundleOptions,UnityEditor.BuildTarget)">
			<summary>Builds an asset bundle.</summary>
		</member>
		<member name="M:UnityEditor.BuildPipeline.BuildAssetBundle(UnityEngine.Object,UnityEngine.Object[],System.String,System.UInt32&,UnityEditor.BuildAssetBundleOptions,UnityEditor.BuildTarget)">
			<summary>Builds an asset bundle.</summary>
		</member>
		<member name="M:UnityEditor.BuildPipeline.BuildAssetBundle(UnityEngine.Object,UnityEngine.Object[],System.String,System.UInt32&,UnityEditor.BuildAssetBundleOptions,UnityEditor.BuildTargetGroup,UnityEditor.BuildTarget)">
			<summary>Builds an asset bundle.</summary>
		</member>
		<member name="T:UnityEditor.DragAndDropVisualMode">
			<summary>Visual indication mode for Drag &amp; Drop operation.</summary>
		</member>
		<member name="M:UnityEditor.AudioImporter.ContainsSampleSettingsOverride(System.String)">
			<summary>Returns whether a given build target has its sample settings currently overridden.</summary>
		</member>
		<member name="M:UnityEditor.BuildPipeline.BuildAssetBundleExplicitAssetNames(UnityEngine.Object[],System.String[],System.String,UnityEditor.BuildAssetBundleOptions,UnityEditor.BuildTarget)">
			<summary>Builds an asset bundle, with custom names for the assets.</summary>
		</member>
		<member name="M:UnityEditor.BuildPipeline.BuildAssetBundleExplicitAssetNames(UnityEngine.Object[],System.String[],System.String,System.UInt32&,UnityEditor.BuildAssetBundleOptions,UnityEditor.BuildTarget)">
			<summary>Builds an asset bundle, with custom names for the assets.</summary>
		</member>
		<member name="T:UnityEditor.DragAndDrop">
			<summary>Editor drag &amp; drop operations.</summary>
		</member>
		<member name="M:UnityEditor.AudioImporter.GetOverrideSampleSettings(System.String)">
			<summary>Return the current override settings for the given platform.</summary>
		</member>
		<member name="M:UnityEditor.BuildPipeline.BuildAssetBundleExplicitAssetNames(UnityEngine.Object[],System.String[],System.String,System.UInt32&,UnityEditor.BuildAssetBundleOptions,UnityEditor.BuildTargetGroup,UnityEditor.BuildTarget)">
			<summary>Builds an asset bundle, with custom names for the assets.</summary>
		</member>
		<member name="P:UnityEditor.DragAndDrop.objectReferences">
			<summary>References to objects being dragged.</summary>
		</member>
		<member name="P:UnityEditor.DragAndDrop.paths">
			<summary>The file names being dragged.</summary>
		</member>
		<member name="M:UnityEditor.BuildPlayerWindow.RegisterBuildPlayerHandler(System.Action`1<UnityEditor.BuildPlayerOptions>)">
			<summary>Register a delegate to intercept or override the build process executed with the "Build" and "Build and Run" buttons. Registering a null value will restore default behavior, which is the equivalent of calling BuildPlayerWindow.DefaultBuildMethods.BuildPlayer.</summary>
		</member>
		<member name="P:UnityEditor.DragAndDrop.activeControlID">
			<summary>Get or set ID of currently active drag and drop control.</summary>
		</member>
		<member name="P:UnityEditor.DragAndDrop.visualMode">
			<summary>The visual indication of the drag.</summary>
		</member>
		<member name="T:UnityEditor.EditorApplication">
			<summary>Main Application class.</summary>
		</member>
		<member name="M:UnityEditor.DragAndDrop.PrepareStartDrag()">
			<summary>Clears drag &amp; drop data.</summary>
		</member>
		<member name="F:UnityEditor.EditorApplication.ProjectWindowItemCallback UnityEditor.EditorApplication.projectWindowItemOnGUI">
			<summary>Delegate for OnGUI events for every visible list item in the ProjectWindow.</summary>
		</member>
		<member name="M:UnityEditor.DragAndDrop.StartDrag(System.String)">
			<summary>Start a drag operation.</summary>
		</member>
		<member name="F:UnityEditor.EditorApplication.HierarchyWindowItemCallback UnityEditor.EditorApplication.hierarchyWindowItemOnGUI">
			<summary>Delegate for OnGUI events for every visible list item in the HierarchyWindow.</summary>
		</member>
		<member name="T:UnityEditor.LightmapEditorSettings.FilterType">
			<summary>The available filter kernels for the Progressive Lightmapper.</summary>
		</member>
		<member name="M:UnityEditor.DragAndDrop.GetGenericData(System.String)">
			<summary>Get data associated with current drag and drop operation.</summary>
		</member>
		<member name="F:UnityEditor.EditorApplication.CallbackFunction UnityEditor.EditorApplication.update">
			<summary>Delegate for generic updates.</summary>
		</member>
		<member name="T:UnityEditor.LightmapBakeQuality">
			<summary>Bake quality setting for LightmapEditorSettings.</summary>
		</member>
		<member name="M:UnityEditor.DragAndDrop.SetGenericData(System.String,System.Object)">
			<summary>Set data associated with current drag and drop operation.</summary>
		</member>
		<member name="F:UnityEditor.EditorApplication.CallbackFunction UnityEditor.EditorApplication.delayCall">
			<summary>Delegate which is called once after all inspectors update.</summary>
		</member>
		<member name="T:UnityEditor.LightmapParameters">
			<summary>A collection of parameters that impact lightmap and realtime GI computations.</summary>
		</member>
		<member name="F:UnityEditor.EditorApplication.CallbackFunction UnityEditor.EditorApplication.hierarchyWindowChanged">
			<summary>A callback to be raised when an object in the hierarchy changes.Each time an object is (or a group of objects are) created, renamed, parented, unparented or destroyed this callback is raised.</summary>
		</member>
		<member name="M:UnityEditor.DragAndDrop.AcceptDrag()">
			<summary>Accept a drag operation.</summary>
		</member>
		<member name="P:UnityEditor.LightmapParameters.resolution">
			<summary>The texel resolution per meter used for realtime lightmaps. This value is multiplied by LightmapEditorSettings.resolution.</summary>
		</member>
		<member name="F:UnityEditor.EditorApplication.CallbackFunction UnityEditor.EditorApplication.projectWindowChanged">
			<summary>Callback raised whenever the state of the Project window changes.</summary>
		</member>
		<member name="T:UnityEditor.GizmoType">
			<summary>Determines how a gizmo is drawn or picked in the Unity editor.</summary>
		</member>
		<member name="P:UnityEditor.LightmapParameters.clusterResolution">
			<summary>Controls the resolution at which Enlighten stores and can transfer input light.</summary>
		</member>
		<member name="F:UnityEditor.EditorApplication.CallbackFunction UnityEditor.EditorApplication.searchChanged">
			<summary>Callback raised whenever the contents of a window's search box are changed.</summary>
		</member>
		<member name="P:UnityEditor.LightmapParameters.irradianceBudget">
			<summary>The amount of data used for realtime GI texels. Specifies how detailed view of the Scene a texel has. Small values mean more averaged out lighting.</summary>
		</member>
		<member name="T:UnityEditor.DrawGizmo">
			<summary>The DrawGizmo attribute allows you to supply a gizmo renderer for any Component.</summary>
		</member>
		<member name="F:UnityEditor.EditorApplication.CallbackFunction UnityEditor.EditorApplication.modifierKeysChanged">
			<summary>Delegate for changed keyboard modifier keys.</summary>
		</member>
		<member name="P:UnityEditor.LightmapParameters.irradianceQuality">
			<summary>The number of rays to cast for computing irradiance form factors.</summary>
		</member>
		<member name="T:UnityEditor.EditorApplication.CallbackFunction">
			<summary>Delegate to be called from EditorApplication callbacks.</summary>
		</member>
		<member name="F:UnityEditor.EditorApplication.CallbackFunction UnityEditor.EditorApplication.playmodeStateChanged">
			<summary>Event that is raised whenever the Editor's play mode state changes.</summary>
		</member>
		<member name="P:UnityEditor.LightmapParameters.backFaceTolerance">
			<summary>The percentage of rays shot from a ray origin that must hit front faces to be considered usable.</summary>
		</member>
		<member name="T:UnityEditor.EditorApplication.SerializedPropertyCallbackFunction">
			<summary>Delegate to be called from EditorApplication contextual inspector callbacks.</summary>
		</member>
		<member name="F:UnityEditor.EditorApplication.SerializedPropertyCallbackFunction UnityEditor.EditorApplication.contextualPropertyMenu">
			<summary>Callback raised whenever the user contex-clicks on a property in an Inspector.</summary>
		</member>
		<member name="P:UnityEditor.LightmapParameters.modellingTolerance">
			<summary>Maximum size of gaps that can be ignored for GI (multiplier on pixel size).</summary>
		</member>
		<member name="P:UnityEditor.LightmapParameters.stitchEdges">
			<summary>Whether pairs of edges should be stitched together.</summary>
		</member>
		<member name="T:UnityEditor.PlayModeStateChange">
			<summary>Enumeration specifying a change in the Editor's play mode state.See Also: PauseState, EditorApplication.playModeStateChanged, EditorApplication.isPlaying.</summary>
		</member>
		<member name="P:UnityEditor.EditorApplication.isPlaying">
			<summary>Is editor currently in play mode?</summary>
		</member>
		<member name="P:UnityEditor.LightmapParameters.systemTag">
			<summary>System tag is an integer identifier. It lets you force an object into a different Enlighten system even though all the other parameters are the same.</summary>
		</member>
		<member name="P:UnityEditor.EditorApplication.isPlayingOrWillChangePlaymode">
			<summary>Is editor either currently in play mode, or about to switch to it? (Read Only)</summary>
		</member>
		<member name="T:UnityEditor.PauseState">
			<summary>Enumeration specifying the current pause state of the Editor.See Also: PlayModeStateChange, EditorApplication.pauseStateChanged, EditorApplication.isPaused.</summary>
		</member>
		<member name="P:UnityEditor.LightmapParameters.isTransparent">
			<summary>If enabled, the object appears transparent during GlobalIllumination lighting calculations.</summary>
		</member>
		<member name="P:UnityEditor.EditorApplication.isPaused">
			<summary>Is editor currently paused?</summary>
		</member>
		<member name="P:UnityEditor.LightmapParameters.blurRadius">
			<summary>The radius (in texels) of the post-processing filter that blurs baked direct lighting.</summary>
		</member>
		<member name="T:UnityEditor.InitializeOnLoadAttribute">
			<summary>Allow an editor class to be initialized when Unity loads without action from the user.</summary>
		</member>
		<member name="P:UnityEditor.EditorApplication.isCompiling">
			<summary>Is editor currently compiling scripts? (Read Only)</summary>
		</member>
		<member name="P:UnityEditor.LightmapParameters.directLightQuality">
			<summary>The number of rays used for lights with an area. Allows for accurate soft shadowing.</summary>
		</member>
		<member name="P:UnityEditor.EditorApplication.isUpdating">
			<summary>True if the Editor is currently refreshing the AssetDatabase.</summary>
		</member>
		<member name="T:UnityEditor.InitializeOnLoadMethodAttribute">
			<summary>Allow an editor class method to be initialized when Unity loads without action from the user.</summary>
		</member>
		<member name="P:UnityEditor.LightmapParameters.antiAliasingSamples">
			<summary>The maximum number of times to supersample a texel to reduce aliasing.</summary>
		</member>
		<member name="P:UnityEditor.EditorApplication.isRemoteConnected">
			<summary>Is editor currently connected to Unity Remote 4 client app.</summary>
		</member>
		<member name="T:UnityEditor.EditorBuildSettingsScene">
			<summary>This class is used for entries in the Scenes list, as displayed in the Build Settings window. This class contains the Scene path of a Scene and an enabled flag that indicates wether the Scene is enabled in the BuildSettings window or not.You can use this class in combination with EditorBuildSettings.scenes to populate the list of Scenes included in the build via script. This is useful when creating custom editor scripts to automate your build pipeline.See EditorBuildSettings.scenes for an example script.</summary>
		</member>
		<member name="P:UnityEditor.LightmapParameters.bakedLightmapTag">
			<summary>BakedLightmapTag is an integer that affects the assignment to baked lightmaps. Objects with different values for bakedLightmapTag are guaranteed to not be assigned to the same lightmap even if the other baking parameters are the same.</summary>
		</member>
		<member name="P:UnityEditor.EditorApplication.scriptingRuntimeVersion">
			<summary>Returns the scripting runtime version currently used by the Editor.</summary>
		</member>
		<member name="P:UnityEditor.LightmapParameters.limitLightmapCount">
			<summary>If enabled, objects sharing the same lightmap parameters will be packed into LightmapParameters.maxLightmapCount lightmaps.</summary>
		</member>
		<member name="P:UnityEditor.EditorBuildSettingsScene.enabled">
			<summary>Whether this Scene is enabled in the Build Settings window or not. See EditorBuildSettings.scenes for an example of how to use this class.See Also: EditorBuildSettingsScene, EditorBuildSettings.scenes.</summary>
		</member>
		<member name="P:UnityEditor.EditorApplication.applicationContentsPath">
			<summary>Path to the Unity editor contents folder. (Read Only)</summary>
		</member>
		<member name="P:UnityEditor.EditorBuildSettingsScene.path">
			<summary>The file path of the Scene as listed in the Editor Build Settings Scene list. See EditorBuildSettings.scenes for an example of how to use this class.See Also: EditorBuildSettingsScene, EditorBuildSettings.scenes.</summary>
		</member>
		<member name="P:UnityEditor.LightmapParameters.maxLightmapCount">
			<summary>The maximum number of lightmaps that will be created for objects sharing the same lightmap parameters. This property is ignored if LightmapParameters.limitLightmapCount is false.</summary>
		</member>
		<member name="P:UnityEditor.EditorApplication.applicationPath">
			<summary>Returns the path to the Unity editor application. (Read Only)</summary>
		</member>
		<member name="P:UnityEditor.EditorApplication.isTemporaryProject">
			<summary>Returns true if the current project was created as a temporary project.</summary>
		</member>
		<member name="T:UnityEditor.EditorBuildSettings">
			<summary>This class allows you to modify the Editor Build Settings via script. See EditorBuildSettings.scenes for an example of how to use this class.See Also: EditorBuildSettingsScene, EditorBuildSettings.scenes.</summary>
		</member>
		<member name="P:UnityEditor.EditorApplication.timeSinceStartup">
			<summary>The time since the editor was started. (Read Only)</summary>
		</member>
		<member name="P:UnityEditor.EditorBuildSettings.scenes">
			<summary></summary>
		</member>
		<member name="P:UnityEditor.EditorApplication.isSceneDirty">
			<summary>Is true if the currently open Scene in the editor contains unsaved modifications.</summary>
		</member>
		<member name="T:UnityEditor.Lightmapping">
			<summary>Allows to control the lightmapping job.</summary>
		</member>
		<member name="M:UnityEditor.EditorBuildSettings.RemoveConfigObject(System.String)">
			<summary>Remove a config object reference by name.</summary>
		</member>
		<member name="P:UnityEditor.EditorApplication.currentScene">
			<summary>The path of the Scene that the user has currently open (Will be an empty string if no Scene is currently open). (Read Only)</summary>
		</member>
		<member name="F:UnityEditor.Lightmapping.OnCompletedFunction UnityEditor.Lightmapping.completed">
			<summary>Delegate which is called when bake job is completed.</summary>
		</member>
		<member name="M:UnityEditor.EditorBuildSettings.GetConfigObjectNames()">
			<summary>Return a string array containing the names of all stored config object references.</summary>
		</member>
		<member name="M:UnityEditor.EditorApplication.LoadLevelInPlayMode(System.String)">
			<summary>Load the given level in play mode.</summary>
		</member>
		<member name="P:UnityEditor.Lightmapping.GIWorkflowMode UnityEditor.Lightmapping.giWorkflowMode">
			<summary>The lightmap baking workflow mode used. Iterative mode is default, but you can switch to on demand mode which bakes only when the user presses the bake button.</summary>
		</member>
		<member name="M:UnityEditor.EditorBuildSettings.AddConfigObject(System.String,UnityEngine.Object,System.Boolean)">
			<summary>Store a reference to a config object by name.  The object must be an asset in the project, otherwise it will not be saved when the editor is restarted or scripts are reloaded.  To avoid name conflicts with other packages, it is recommended that names are qualified by a namespace, i.e. "company.package.name".</summary>
		</member>
		<member name="M:UnityEditor.EditorApplication.LoadLevelAdditiveInPlayMode(System.String)">
			<summary>Load the given level additively in play mode.</summary>
		</member>
		<member name="P:UnityEditor.Lightmapping.realtimeGI">
			<summary>Is realtime GI enabled?</summary>
		</member>
		<member name="M:UnityEditor.EditorBuildSettings.TryGetConfigObject(System.String,T&)">
			<summary>Retrieve a config object reference by name.</summary>
		</member>
		<member name="M:UnityEditor.EditorApplication.LoadLevelAsyncInPlayMode(System.String)">
			<summary>Load the given level in play mode asynchronously.</summary>
		</member>
		<member name="T:UnityEditor.EditorGUI">
			<summary>These work pretty much like the normal GUI functions - and also have matching implementations in EditorGUILayout.</summary>
		</member>
		<member name="P:UnityEditor.Lightmapping.bakedGI">
			<summary>Is baked GI enabled?</summary>
		</member>
		<member name="M:UnityEditor.EditorApplication.LoadLevelAdditiveAsyncInPlayMode(System.String)">
			<summary>Load the given level additively in play mode asynchronously</summary>
		</member>
		<member name="P:UnityEditor.Lightmapping.indirectOutputScale">
			<summary>Scale for indirect lighting.</summary>
		</member>
		<member name="P:UnityEditor.Lightmapping.bounceBoost">
			<summary>Boost the albedo.</summary>
		</member>
		<member name="P:UnityEditor.Lightmapping.isRunning">
			<summary>Returns true when the bake job is running, false otherwise (Read Only).</summary>
		</member>
		<member name="P:UnityEditor.Lightmapping.buildProgress">
			<summary>Returns the current lightmapping build progress or 0 if Lightmapping.isRunning is false.</summary>
		</member>
		<member name="P:UnityEditor.Lightmapping.lightingDataAsset">
			<summary>The lighting data asset used by the active Scene.</summary>
		</member>
		<member name="M:UnityEditor.Lightmapping.ClearDiskCache()">
			<summary>Clears the cache used by lightmaps, reflection probes and default reflection.</summary>
		</member>
		<member name="M:UnityEditor.Lightmapping.BakeAsync()">
			<summary>Starts an asynchronous bake job.</summary>
		</member>
		<member name="M:UnityEditor.Lightmapping.Bake()">
			<summary>Starts a synchronous bake job.</summary>
		</member>
		<member name="M:UnityEditor.Lightmapping.Cancel()">
			<summary>Cancels the currently running asynchronous bake job.</summary>
		</member>
		<member name="M:UnityEditor.Lightmapping.ForceStop()">
			<summary>Force the Progressive Path Tracer to stop baking and use the computed results as they are.</summary>
		</member>
		<member name="M:UnityEditor.Lightmapping.Clear()">
			<summary>Deletes all runtime data for the currently loaded Scenes.</summary>
		</member>
		<member name="M:UnityEditor.Lightmapping.ClearLightingDataAsset()">
			<summary>For the currently loaded Scenes, this method deletes the Lighting Data Asset and any linked lightmaps and Reflection Probe assets.</summary>
		</member>
		<member name="M:UnityEditor.Lightmapping.Tetrahedralize(UnityEngine.Vector3[],System.Int32[]&,UnityEngine.Vector3[]&)">
			<summary>Calculates a Delaunay Tetrahedralization of the 'positions' point set - the same way the lightmapper.</summary>
		</member>
		<member name="M:UnityEditor.Lightmapping.BakeReflectionProbe(UnityEngine.ReflectionProbe,System.String)">
			<summary>Starts a synchronous bake job for the probe.</summary>
		</member>
		<member name="M:UnityEditor.Lightmapping.GetTerrainGIChunks(UnityEngine.Terrain,System.Int32&,System.Int32&)">
			<summary>Get how many chunks the terrain is divided into for GI baking.</summary>
		</member>
		<member name="M:UnityEditor.Lightmapping.BakeMultipleScenes(System.String[])">
			<summary>Bakes an array of Scenes.</summary>
		</member>
		<member name="M:UnityEditor.Lightmapping.BakeSelectedAsync()">
			<summary>Starts an asynchronous bake job for the selected objects.</summary>
		</member>
		<member name="M:UnityEditor.Lightmapping.BakeSelected()">
			<summary>Starts a synchronous bake job for the selected objects.</summary>
		</member>
		<member name="M:UnityEditor.Lightmapping.BakeLightProbesOnlyAsync()">
			<summary>Starts an asynchronous bake job, but only bakes light probes.</summary>
		</member>
		<member name="M:UnityEditor.Lightmapping.BakeLightProbesOnly()">
			<summary>Starts a synchronous bake job, but only bakes light probes.</summary>
		</member>
		<member name="T:UnityEditor.Lightmapping.GIWorkflowMode">
			<summary>Workflow mode for lightmap baking. Default is Iterative.</summary>
		</member>
		<member name="T:UnityEditor.BuildTargetGroup">
			<summary>Build target group.</summary>
		</member>
		<member name="T:UnityEditor.Lightmapping.OnStartedFunction">
			<summary>Delegate used by Lightmapping.started callback.</summary>
		</member>
		<member name="T:UnityEditor.Lightmapping.OnCompletedFunction">
			<summary>Delegate used by Lightmapping.completed callback.</summary>
		</member>
		<member name="F:UnityEditor.BuildTargetGroup.iPhone">
			<summary>OBSOLETE: Use iOS. Apple iOS target.</summary>
		</member>
		<member name="T:UnityEditor.ColorPickerHDRConfig">
			<summary>Used as input to ColorField to configure the HDR color ranges in the ColorPicker.</summary>
		</member>
		<member name="T:UnityEditor.Experimental.Lightmapping">
			<summary>Allows to control the lightmapping job.</summary>
		</member>
		<member name="T:UnityEditor.Experimental.Networking.PlayerConnection.EditorGUI">
			<summary>These work pretty much like the normal GUI functions - and also have matching implementations in EditorGUILayout.</summary>
		</member>
		<member name="F:UnityEditor.ColorPickerHDRConfig.minBrightness">
			<summary>Minimum allowed color component value when using the ColorPicker.</summary>
		</member>
		<member name="T:UnityEditor.Experimental.Networking.PlayerConnection.EditorGUILayout">
			<summary>Auto laid out version of EditorGUI.</summary>
		</member>
		<member name="T:UnityEditor.EditorGUILayout">
			<summary>Auto laid out version of EditorGUI.</summary>
		</member>
		<member name="F:UnityEditor.ColorPickerHDRConfig.maxBrightness">
			<summary>Maximum allowed color component value when using the ColorPicker.</summary>
		</member>
		<member name="T:UnityEditor.EditorStyles">
			<summary>Common GUIStyles used for EditorGUI controls.</summary>
		</member>
		<member name="F:UnityEditor.ColorPickerHDRConfig.minExposureValue">
			<summary>Minimum exposure value allowed in the Color Picker.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.Foldout(System.Boolean,System.String)">
			<summary>Make a label with a foldout arrow to the left of it.</summary>
		</member>
		<member name="F:UnityEditor.ColorPickerHDRConfig.maxExposureValue">
			<summary>Maximum exposure value allowed in the Color Picker.</summary>
		</member>
		<member name="P:UnityEditor.EditorStyles.label">
			<summary>Style used for the labelled on all EditorGUI overloads that take a prefix label.</summary>
		</member>
		<member name="P:UnityEditor.EditorStyles.miniLabel">
			<summary>Style for label with small font.</summary>
		</member>
		<member name="P:UnityEditor.EditorStyles.largeLabel">
			<summary>Style for label with large font.</summary>
		</member>
		<member name="P:UnityEditor.EditorStyles.boldLabel">
			<summary>Style for bold label.</summary>
		</member>
		<member name="T:UnityEditor.LightingDataAsset">
			<summary>The lighting data asset used by the active Scene.</summary>
		</member>
		<member name="M:UnityEditor.AudioImporter.SetOverrideSampleSettings(System.String,UnityEditor.AudioImporterSampleSettings)">
			<summary>Sets the override sample settings for the given platform.</summary>
		</member>
		<member name="P:UnityEditor.EditorStyles.miniBoldLabel">
			<summary>Style for mini bold label.</summary>
		</member>
		<member name="M:UnityEditor.AudioImporter.ClearSampleSettingOverride(System.String)">
			<summary>Clears the sample settings override for the given platform.</summary>
		</member>
		<member name="T:UnityEditor.LightmapEditorSettings">
			<summary>Various settings for the bake.</summary>
		</member>
		<member name="M:UnityEditor.BuildPipeline.BuildAssetBundles(System.String,UnityEditor.BuildAssetBundleOptions,UnityEditor.BuildTarget)">
			<summary>Build all AssetBundles specified in the editor.</summary>
		</member>
		<member name="P:UnityEditor.EditorStyles.centeredGreyMiniLabel">
			<summary>Style for label with small font which is centered and grey.</summary>
		</member>
		<member name="M:UnityEditor.BuildPipeline.BuildAssetBundles(System.String,UnityEditor.BuildAssetBundleOptions,UnityEditor.BuildTargetGroup,UnityEditor.BuildTarget)">
			<summary>Build all AssetBundles specified in the editor.</summary>
		</member>
		<member name="M:UnityEditor.BuildPipeline.BuildAssetBundles(System.String,UnityEditor.AssetBundleBuild[],UnityEditor.BuildAssetBundleOptions,UnityEditor.BuildTarget)">
			<summary>Build all AssetBundles specified in the editor.</summary>
		</member>
		<member name="P:UnityEditor.EditorStyles.wordWrappedMiniLabel">
			<summary>Style for word wrapped mini label.</summary>
		</member>
		<member name="P:UnityEditor.LightmapEditorSettings.Lightmapper UnityEditor.LightmapEditorSettings.lightmapper">
			<summary>Determines which backend to use for baking lightmaps.</summary>
		</member>
		<member name="M:UnityEditor.BuildPipeline.BuildAssetBundles(System.String,UnityEditor.AssetBundleBuild[],UnityEditor.BuildAssetBundleOptions,UnityEditor.BuildTargetGroup,UnityEditor.BuildTarget)">
			<summary>Build all AssetBundles specified in the editor.</summary>
		</member>
		<member name="P:UnityEditor.EditorStyles.wordWrappedLabel">
			<summary>Style for word wrapped label.</summary>
		</member>
		<member name="P:UnityEditor.LightmapEditorSettings.lightmapsMode">
			<summary>NonDirectional or CombinedDirectional lightmaps rendering mode.</summary>
		</member>
		<member name="M:UnityEditor.BuildPipeline.GetCRCForAssetBundle(System.String,System.UInt32&)">
			<summary>Extract the crc checksum for the given AssetBundle.</summary>
		</member>
		<member name="T:UnityEditor.MovieImporter">
			<summary>AssetImporter for importing MovieTextures.</summary>
		</member>
		<member name="P:UnityEditor.EditorStyles.whiteLabel">
			<summary>Style for white label.</summary>
		</member>
		<member name="P:UnityEditor.LightmapEditorSettings.mixedBakeMode">
			<summary>Indicates the Mixed mode that is used to bake the LightmapBakeType.Mixed lights, irrelevant for realtime and baked lights.</summary>
		</member>
		<member name="M:UnityEditor.BuildPipeline.GetHashForAssetBundle(System.String,UnityEngine.Hash128&)">
			<summary>Extract the hash for the given AssetBundle.</summary>
		</member>
		<member name="P:UnityEditor.MovieImporter.quality">
			<summary>Quality setting to use when importing the movie. This is a float value from 0 to 1.</summary>
		</member>
		<member name="P:UnityEditor.EditorStyles.whiteMiniLabel">
			<summary>Style for white mini label.</summary>
		</member>
		<member name="M:UnityEditor.BuildPipeline.IsBuildTargetSupported(UnityEditor.BuildTargetGroup,UnityEditor.BuildTarget)">
			<summary>Returns true if the specified build target is currently available in the Editor.</summary>
		</member>
		<member name="P:UnityEditor.LightmapEditorSettings.Sampling UnityEditor.LightmapEditorSettings.sampling">
			<summary>Determines which sampling strategy to use for baking lightmaps with the Progressive Lightmapper.</summary>
		</member>
		<member name="P:UnityEditor.MovieImporter.linearTexture">
			<summary>Is the movie texture storing non-color data?</summary>
		</member>
		<member name="P:UnityEditor.EditorStyles.whiteLargeLabel">
			<summary>Style for white large label.</summary>
		</member>
		<member name="P:UnityEditor.LightmapEditorSettings.directSampleCount">
			<summary>Specifies the number of samples the Progressive lightmapper uses for direct lighting calculations. The default value is 32. The minimum value is 1.</summary>
		</member>
		<member name="M:UnityEditor.BuildPipeline.GetPlaybackEngineDirectory(UnityEditor.BuildTarget,UnityEditor.BuildOptions)">
			<summary>Returns the path of a player directory. For ex., Editor\Data\PlaybackEngines\AndroidPlayer.In some cases the player directory path can be affected by BuildOptions.Development.</summary>
		</member>
		<member name="P:UnityEditor.MovieImporter.duration">
			<summary>Duration of the Movie to be imported in seconds.</summary>
		</member>
		<member name="P:UnityEditor.EditorStyles.whiteBoldLabel">
			<summary>Style for white bold label.</summary>
		</member>
		<member name="M:UnityEditor.BuildPipeline.GetPlaybackEngineDirectory(UnityEditor.BuildTargetGroup,UnityEditor.BuildTarget,UnityEditor.BuildOptions)">
			<summary>Returns the path of a player directory. For ex., Editor\Data\PlaybackEngines\AndroidPlayer.In some cases the player directory path can be affected by BuildOptions.Development.</summary>
		</member>
		<member name="P:UnityEditor.LightmapEditorSettings.indirectSampleCount">
			<summary>Specifies the number of samples the Progressive lightmapper uses for indirect lighting calculations. The default value is 500. The minimum value is 10.</summary>
		</member>
		<member name="P:UnityEditor.EditorStyles.radioButton">
			<summary>Style used for a radio button.</summary>
		</member>
		<member name="T:UnityEditor.PluginImporter">
			<summary>Represents plugin importer.</summary>
		</member>
		<member name="P:UnityEditor.LightmapEditorSettings.bounces">
			<summary>Specifies the maximum number of bounces the lightmapper computes for indirect light. The default value is one. The range is 0 to 4.</summary>
		</member>
		<member name="P:UnityEditor.EditorStyles.miniButton">
			<summary>Style used for a standalone small button.</summary>
		</member>
		<member name="T:UnityEditor.MouseCursor">
			<summary>Custom mouse cursor shapes used with EditorGUIUtility.AddCursorRect.</summary>
		</member>
		<member name="T:UnityEditor.MessageType">
			<summary>User message types.</summary>
		</member>
		<member name="M:UnityEditor.EditorApplication.OpenProject(System.String,System.String[])">
			<summary>Open another project.</summary>
		</member>
		<member name="M:UnityEditor.EditorApplication.SaveAssets()">
			<summary>Saves all serializable assets that have not yet been written to disk (eg. Materials).</summary>
		</member>
		<member name="T:UnityEditor.EditorSkin">
			<summary>Enum that selects which skin to return from EditorGUIUtility.GetBuiltinSkin.</summary>
		</member>
		<member name="M:UnityEditor.EditorApplication.EnterPlaymode()">
			<summary>Switches the editor to Play mode.</summary>
		</member>
		<member name="P:UnityEditor.EditorGUI.showMixedValue">
			<summary>Makes the following controls give the appearance of editing multiple different values.</summary>
		</member>
		<member name="M:UnityEditor.EditorApplication.ExitPlaymode()">
			<summary>Switches the editor to Edit mode.</summary>
		</member>
		<member name="P:UnityEditor.EditorGUI.actionKey">
			<summary>Is the platform-dependent "action" modifier key held down? (Read Only)</summary>
		</member>
		<member name="M:UnityEditor.EditorApplication.Step()">
			<summary>Perform a single frame step.</summary>
		</member>
		<member name="P:UnityEditor.EditorGUI.indentLevel">
			<summary>The indent level of the field labels.</summary>
		</member>
		<member name="M:UnityEditor.EditorApplication.LockReloadAssemblies()">
			<summary>Prevents loading of assemblies when it is inconvenient.</summary>
		</member>
		<member name="M:UnityEditor.EditorApplication.UnlockReloadAssemblies()">
			<summary>Must be called after LockReloadAssemblies, to reenable loading of assemblies.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.FocusTextInControl(System.String)">
			<summary>Move keyboard focus to a named text field and begin editing of the content.</summary>
		</member>
		<member name="M:UnityEditor.EditorApplication.ExecuteMenuItem(System.String)">
			<summary>Invokes the menu item in the specified path.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.BeginDisabledGroup(System.Boolean)">
			<summary>Create a group of controls that can be disabled.</summary>
		</member>
		<member name="M:UnityEditor.EditorApplication.SetTemporaryProjectKeepPath(System.String)">
			<summary>Sets the path that Unity should store the current temporary project at, when the project is closed.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.EndDisabledGroup()">
			<summary>Ends a disabled group started with BeginDisabledGroup.</summary>
		</member>
		<member name="M:UnityEditor.EditorApplication.Exit(System.Int32)">
			<summary>Exit the Unity editor application.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.BeginChangeCheck()">
			<summary>Check if any control was changed inside a block of code.</summary>
		</member>
		<member name="M:UnityEditor.EditorApplication.QueuePlayerLoopUpdate()">
			<summary>Normally, a player loop update will occur in the editor when the Scene has been modified. This method allows you to queue a player loop update regardless of whether the Scene has been modified.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.EndChangeCheck()">
			<summary>Ends a change check started with BeginChangeCheck ().</summary>
		</member>
		<member name="M:UnityEditor.EditorApplication.Beep()">
			<summary>Plays system beep sound.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.DropShadowLabel(UnityEngine.Rect,System.String)">
			<summary>Draws a label with a drop shadow.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.DropShadowLabel(UnityEngine.Rect,UnityEngine.GUIContent)">
			<summary>Draws a label with a drop shadow.</summary>
		</member>
		<member name="M:UnityEditor.EditorApplication.RepaintProjectWindow()">
			<summary>Can be used to ensure repaint of the ProjectWindow.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.DropShadowLabel(UnityEngine.Rect,System.String,UnityEngine.GUIStyle)">
			<summary>Draws a label with a drop shadow.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.DropShadowLabel(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.GUIStyle)">
			<summary>Draws a label with a drop shadow.</summary>
		</member>
		<member name="M:UnityEditor.EditorApplication.RepaintHierarchyWindow()">
			<summary>Can be used to ensure repaint of the HierarchyWindow.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.Toggle(UnityEngine.Rect,System.Boolean)">
			<summary>Makes a toggle.</summary>
		</member>
		<member name="M:UnityEditor.EditorApplication.DirtyHierarchyWindowSorting()">
			<summary>Set the hierarchy sorting method as dirty.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.Toggle(UnityEngine.Rect,System.String,System.Boolean)">
			<summary>Makes a toggle.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.Toggle(UnityEngine.Rect,System.Boolean,UnityEngine.GUIStyle)">
			<summary>Makes a toggle.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.Toggle(UnityEngine.Rect,System.String,System.Boolean,UnityEngine.GUIStyle)">
			<summary>Makes a toggle.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.Toggle(UnityEngine.Rect,UnityEngine.GUIContent,System.Boolean)">
			<summary>Makes a toggle.</summary>
		</member>
		<member name="M:UnityEditor.EditorApplication.NewScene()">
			<summary>Create a new Scene.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.Toggle(UnityEngine.Rect,UnityEngine.GUIContent,System.Boolean,UnityEngine.GUIStyle)">
			<summary>Makes a toggle.</summary>
		</member>
		<member name="M:UnityEditor.EditorApplication.NewEmptyScene()">
			<summary>Create a new absolutely empty Scene.</summary>
		</member>
		<member name="M:UnityEditor.EditorApplication.OpenScene(System.String)">
			<summary>Opens the Scene at path.</summary>
		</member>
		<member name="M:UnityEditor.EditorApplication.OpenSceneAdditive(System.String)">
			<summary>Opens the Scene at path additively.</summary>
		</member>
		<member name="M:UnityEditor.EditorApplication.SaveScene()">
			<summary>Save the open Scene.</summary>
		</member>
		<member name="M:UnityEditor.EditorApplication.SaveScene(System.String)">
			<summary>Save the open Scene.</summary>
		</member>
		<member name="M:UnityEditor.EditorApplication.SaveScene(System.String,System.Boolean)">
			<summary>Save the open Scene.</summary>
		</member>
		<member name="M:UnityEditor.EditorApplication.SaveCurrentSceneIfUserWantsTo()">
			<summary>Ask the user if they want to save the open Scene.</summary>
		</member>
		<member name="M:UnityEditor.EditorApplication.MarkSceneDirty()">
			<summary>Explicitly mark the current opened Scene as modified.</summary>
		</member>
		<member name="T:UnityEditor.EditorApplication.ProjectWindowItemCallback">
			<summary>Delegate to be called for every visible list item in the ProjectWindow on every OnGUI event.</summary>
		</member>
		<member name="T:UnityEditor.EditorApplication.HierarchyWindowItemCallback">
			<summary>Delegate to be called for every visible list item in the HierarchyWindow on every OnGUI event.</summary>
		</member>
		<member name="T:UnityEditor.SessionState">
			<summary>SessionState is a Key-Value Store intended for storing and retrieving Editor session state that should survive assembly reloading.</summary>
		</member>
		<member name="M:UnityEditor.SessionState.SetBool(System.String,System.Boolean)">
			<summary>Store a Boolean value.</summary>
		</member>
		<member name="M:UnityEditor.SessionState.GetBool(System.String,System.Boolean)">
			<summary>Retrieve a Boolean value.</summary>
		</member>
		<member name="M:UnityEditor.SessionState.EraseBool(System.String)">
			<summary>Erase a Boolean entry in the key-value store.</summary>
		</member>
		<member name="M:UnityEditor.SessionState.SetFloat(System.String,System.Single)">
			<summary>Store a Float value.</summary>
		</member>
		<member name="M:UnityEditor.SessionState.GetFloat(System.String,System.Single)">
			<summary>Retrieve a Float value.</summary>
		</member>
		<member name="M:UnityEditor.SessionState.EraseFloat(System.String)">
			<summary>Erase a Float entry in the key-value store.</summary>
		</member>
		<member name="T:UnityEditor.PlatformIcon">
			<summary>Icon slot container.</summary>
		</member>
		<member name="M:UnityEditor.SessionState.SetInt(System.String,System.Int32)">
			<summary>Store an Integer value.</summary>
		</member>
		<member name="M:UnityEditor.SessionState.GetInt(System.String,System.Int32)">
			<summary>Retrieve an Integer value.</summary>
		</member>
		<member name="M:UnityEditor.SessionState.EraseInt(System.String)">
			<summary>Erase an Integer entry in the key-value store.</summary>
		</member>
		<member name="F:UnityEditor.BuildTarget.iPhone">
			<summary>OBSOLETE: Use iOS. Build an iOS player.</summary>
		</member>
		<member name="M:UnityEditor.SessionState.SetString(System.String,System.String)">
			<summary>Store a String value.</summary>
		</member>
		<member name="M:UnityEditor.SessionState.GetString(System.String,System.String)">
			<summary>Retrieve a String value.</summary>
		</member>
		<member name="T:UnityEditor.SpritePackerMode">
			<summary>Sprite Packer mode for the current project.</summary>
		</member>
		<member name="M:UnityEditor.SessionState.EraseString(System.String)">
			<summary>Erase a String entry in the key-value store.</summary>
		</member>
		<member name="P:UnityEditor.PlatformIcon.layerCount">
			<summary>The number of texture layers the icon slot currently contains.</summary>
		</member>
		<member name="M:UnityEditor.SessionState.SetVector3(System.String,UnityEngine.Vector3)">
			<summary>Store a Vector3.</summary>
		</member>
		<member name="P:UnityEditor.PlatformIcon.maxLayerCount">
			<summary>The maximum number of texture layers required by the icon slot.</summary>
		</member>
		<member name="T:UnityEditor.PS4BuildSubtarget">
			<summary>Type of build to generate.</summary>
		</member>
		<member name="M:UnityEditor.SessionState.GetVector3(System.String,UnityEngine.Vector3)">
			<summary>Retrieve a Vector3.</summary>
		</member>
		<member name="P:UnityEditor.PlatformIcon.minLayerCount">
			<summary>The minimum number of texture layers required by the icon slot.</summary>
		</member>
		<member name="M:UnityEditor.SessionState.EraseVector3(System.String)">
			<summary>Erase a Vector3 entry in the key-value store.</summary>
		</member>
		<member name="T:UnityEditor.XboxBuildSubtarget">
			<summary>Target Xbox build type.</summary>
		</member>
		<member name="P:UnityEditor.PlatformIcon.width">
			<summary>The width of the icon in pixels.</summary>
		</member>
		<member name="T:UnityEditor.Experimental.Networking.PlayerConnection.EditorGUIUtility">
			<summary>Miscellaneous helper stuff for EditorGUI.</summary>
		</member>
		<member name="M:UnityEditor.SessionState.EraseIntArray(System.String)">
			<summary>Erase an Integer array entry in the key-value store.</summary>
		</member>
		<member name="T:UnityEditor.MobileTextureSubtarget">
			<summary>Compressed texture format for target build platform.</summary>
		</member>
		<member name="P:UnityEditor.PlatformIcon.height">
			<summary>The height of the icon in pixels.</summary>
		</member>
		<member name="M:UnityEditor.SessionState.SetIntArray(System.String,System.Int32[])">
			<summary>Store an Integer array.</summary>
		</member>
		<member name="T:UnityEditor.PrefabUtility">
			<summary>Utility class for any Prefab related operations.</summary>
		</member>
		<member name="P:UnityEditor.PlatformIcon.kind">
			<summary>The PlatformIconKind is specific to the target platform.</summary>
		</member>
		<member name="T:UnityEditor.AndroidETC2Fallback">
			<summary>This enumeration has values for different qualities to decompress ETC2 textures on Android devices that don't support the ETC2 texture format.</summary>
		</member>
		<member name="T:UnityEditor.WSASubtarget">
			<summary>Target device type for a Windows Store application to run on.</summary>
		</member>
		<member name="P:UnityEditor.PluginImporter.isPreloaded">
			<summary>Is a native plugin loaded during startup or on demand?</summary>
		</member>
		<member name="P:UnityEditor.LightmapEditorSettings.prioritizeView">
			<summary>Specifies whether the Progressive lightmapper should prioritize baking texels within the Scene view. The default value is true.</summary>
		</member>
		<member name="P:UnityEditor.PluginImporter.isNativePlugin">
			<summary>Is plugin native or managed? Note: C++ libraries with CLR support are treated as native plugins, because Unity cannot load such libraries. You can still access them via P/Invoke.</summary>
		</member>
		<member name="P:UnityEditor.LightmapEditorSettings.FilterMode UnityEditor.LightmapEditorSettings.filteringMode">
			<summary>Specifies the method used by the Progressive lightmapper to reduce noise in baked lightmaps.</summary>
		</member>
		<member name="P:UnityEditor.LightmapEditorSettings.DenoiserType UnityEditor.LightmapEditorSettings.denoiserTypeDirect">
			<summary>The type of denoising applied to the direct light for the lightmap.</summary>
		</member>
		<member name="P:UnityEditor.EditorStyles.miniButtonLeft">
			<summary>Style used for the leftmost button in a horizontal button group.</summary>
		</member>
		<member name="T:UnityEditor.WSAUWPBuildType">
			<summary>Determines the output build type when building to Universal Windows Platform.</summary>
		</member>
		<member name="M:UnityEditor.PluginImporter.GetImporters(System.String)">
			<summary>Returns all plugin importers for specfied platform.</summary>
		</member>
		<member name="M:UnityEditor.PluginImporter.GetImporters(UnityEditor.BuildTarget)">
			<summary>Returns all plugin importers for specfied platform.</summary>
		</member>
		<member name="P:UnityEditor.LightmapEditorSettings.DenoiserType UnityEditor.LightmapEditorSettings.denoiserTypeIndirect">
			<summary>The type of denoising applied to the indirect light for the lightmap.</summary>
		</member>
		<member name="M:UnityEditor.PluginImporter.GetImporters(System.String,System.String)">
			<summary>Returns all plugin importers for specfied platform.</summary>
		</member>
		<member name="P:UnityEditor.EditorStyles.miniButtonMid">
			<summary>Style used for the middle buttons in a horizontal group.</summary>
		</member>
		<member name="T:UnityEditor.WSABuildType">
			<summary>Build configurations for Windows Store Visual Studio solutions.</summary>
		</member>
		<member name="M:UnityEditor.PluginImporter.GetImporters(UnityEditor.BuildTargetGroup,UnityEditor.BuildTarget)">
			<summary>Returns all plugin importers for specfied platform.</summary>
		</member>
		<member name="P:UnityEditor.EditorStyles.miniButtonRight">
			<summary>Style used for the rightmost button in a horizontal group.</summary>
		</member>
		<member name="P:UnityEditor.LightmapEditorSettings.DenoiserType UnityEditor.LightmapEditorSettings.denoiserTypeAO">
			<summary>The type of denoising applied to the ambient occlusion for the lightmap.</summary>
		</member>
		<member name="T:UnityEditor.iOSBuildType">
			<summary>Build configurations for the generated Xcode project.</summary>
		</member>
		<member name="M:UnityEditor.PluginImporter.ClearSettings()">
			<summary>Clear all plugin settings and set the compatability with Any Platform to true.</summary>
		</member>
		<member name="P:UnityEditor.EditorStyles.miniPullDown">
			<summary>Style used for the drop-down controls.</summary>
		</member>
		<member name="P:UnityEditor.LightmapEditorSettings.FilterType UnityEditor.LightmapEditorSettings.filterTypeDirect">
			<summary>Configure a filter kernel for the direct light target.</summary>
		</member>
		<member name="T:UnityEditor.AndroidBuildSystem">
			<summary>Type of Android build system.</summary>
		</member>
		<member name="M:UnityEditor.PluginImporter.SetCompatibleWithAnyPlatform(System.Boolean)">
			<summary>Sets compatibility with Any Platform.</summary>
		</member>
		<member name="P:UnityEditor.LightmapEditorSettings.FilterType UnityEditor.LightmapEditorSettings.filterTypeIndirect">
			<summary>Configure a filter kernel for the indirect light target.</summary>
		</member>
		<member name="M:UnityEditor.PluginImporter.GetCompatibleWithAnyPlatform()">
			<summary>Checks whether a plugin is flagged as being compatible with Any Platform.</summary>
		</member>
		<member name="T:UnityEditor.AndroidBuildType">
			<summary>Build configurations for the generated project.</summary>
		</member>
		<member name="P:UnityEditor.LightmapEditorSettings.FilterType UnityEditor.LightmapEditorSettings.filterTypeAO">
			<summary>Configure a filter kernel for the ambient occlusion target.</summary>
		</member>
		<member name="M:UnityEditor.PluginImporter.SetExcludeFromAnyPlatform(System.String,System.Boolean)">
			<summary>Exclude platform from compatible platforms when Any Platform is set to true.</summary>
		</member>
		<member name="T:UnityEditor.AndroidMinification">
			<summary>How to minify the java code of your binary.</summary>
		</member>
		<member name="P:UnityEditor.LightmapEditorSettings.filteringGaussRadiusDirect">
			<summary>Specifies the radius the Progressive lightmapper uses to filter for direct light stored in the lightmap when using Gaussian filter. The default value is one. The value range is 0 to 5.</summary>
		</member>
		<member name="T:UnityEditor.EditorGUIUtility">
			<summary>Miscellaneous helper stuff for EditorGUI.</summary>
		</member>
		<member name="P:UnityEditor.EditorStyles.textField">
			<summary>Style used for EditorGUI.TextField.</summary>
		</member>
		<member name="M:UnityEditor.PluginImporter.GetExcludeFromAnyPlatform(System.String)">
			<summary>Is platform excluded when Any Platform set to true.</summary>
		</member>
		<member name="M:UnityEditor.PluginImporter.SetIncludeInBuildDelegate(UnityEditor.PluginImporter.IncludeInBuildDelegate)">
			<summary>Setting the delegate function to be called by ShouldIncludeInBuild.</summary>
		</member>
		<member name="M:UnityEditor.PluginImporter.SetExcludeFromAnyPlatform(UnityEditor.BuildTarget,System.Boolean)">
			<summary>Exclude platform from compatible platforms when Any Platform is set to true.</summary>
		</member>
		<member name="M:UnityEditor.PluginImporter.GetExcludeFromAnyPlatform(UnityEditor.BuildTarget)">
			<summary>Is platform excluded when Any Platform set to true.</summary>
		</member>
		<member name="M:UnityEditor.PluginImporter.SetExcludeEditorFromAnyPlatform(System.Boolean)">
			<summary>Exclude Editor from compatible platforms when Any Platform is set to true.</summary>
		</member>
		<member name="M:UnityEditor.PluginImporter.GetExcludeEditorFromAnyPlatform()">
			<summary>Is Editor excluded when Any Platform is set to true.</summary>
		</member>
		<member name="M:UnityEditor.PluginImporter.SetCompatibleWithEditor(System.Boolean)">
			<summary>Sets compatibility with any editor.</summary>
		</member>
		<member name="M:UnityEditor.PluginImporter.SetCompatibleWithEditor(UnityEditor.BuildTargetGroup,UnityEditor.BuildTarget,System.Boolean)">
			<summary>Sets compatibility with any editor.</summary>
		</member>
		<member name="M:UnityEditor.PluginImporter.GetCompatibleWithEditor()">
			<summary>Is plugin compatible with editor.</summary>
		</member>
		<member name="M:UnityEditor.PluginImporter.GetCompatibleWithEditor(System.String,System.String)">
			<summary>Is plugin compatible with editor.</summary>
		</member>
		<member name="M:UnityEditor.PluginImporter.GetIsOverridable()">
			<summary>Identifies whether or not this plugin will be overridden if a plugin of the same name is placed in your project folder.</summary>
		</member>
		<member name="P:UnityEditor.EditorStyles.textArea">
			<summary>Style used for EditorGUI.TextArea.</summary>
		</member>
		<member name="P:UnityEditor.EditorStyles.miniTextField">
			<summary>Smaller text field.</summary>
		</member>
		<member name="P:UnityEditor.EditorStyles.numberField">
			<summary>Style used for field editors for numbers.</summary>
		</member>
		<member name="P:UnityEditor.EditorStyles.popup">
			<summary>Style used for EditorGUI.Popup, EditorGUI.EnumPopup,.</summary>
		</member>
		<member name="M:UnityEditor.PluginImporter.ShouldIncludeInBuild()">
			<summary>Identifies whether or not this plugin should be included in the current build target.</summary>
		</member>
		<member name="P:UnityEditor.EditorStyles.objectField">
			<summary>Style used for headings for object fields.</summary>
		</member>
		<member name="M:UnityEditor.PluginImporter.SetCompatibleWithPlatform(UnityEditor.BuildTarget,System.Boolean)">
			<summary>Sets compatibility with the specified platform.</summary>
		</member>
		<member name="M:UnityEditor.PluginImporter.SetCompatibleWithPlatform(UnityEditor.BuildTargetGroup,UnityEditor.BuildTarget,System.Boolean)">
			<summary>Sets compatibility with the specified platform.</summary>
		</member>
		<member name="P:UnityEditor.EditorStyles.objectFieldThumb">
			<summary>Style used for headings for the Select button in object fields.</summary>
		</member>
		<member name="M:UnityEditor.PluginImporter.GetCompatibleWithPlatform(UnityEditor.BuildTarget)">
			<summary>Is plugin compatible with specified platform.</summary>
		</member>
		<member name="P:UnityEditor.EditorStyles.objectFieldMiniThumb">
			<summary>Style used for object fields that have a thumbnail (e.g Textures).</summary>
		</member>
		<member name="P:UnityEditor.EditorStyles.colorField">
			<summary>Style used for headings for Color fields.</summary>
		</member>
		<member name="M:UnityEditor.SessionState.GetIntArray(System.String,System.Int32[])">
			<summary>Retrieve an Integer array.</summary>
		</member>
		<member name="T:UnityEditor.EditorPrefs">
			<summary>Stores and accesses Unity editor preferences.</summary>
		</member>
		<member name="M:UnityEditor.EditorPrefs.SetInt(System.String,System.Int32)">
			<summary>Sets the value of the preference identified by key as an integer.</summary>
		</member>
		<member name="M:UnityEditor.EditorPrefs.GetInt(System.String,System.Int32)">
			<summary>Returns the value corresponding to key in the preference file if it exists.</summary>
		</member>
		<member name="M:UnityEditor.EditorPrefs.GetInt(System.String)">
			<summary>Returns the value corresponding to key in the preference file if it exists.</summary>
		</member>
		<member name="M:UnityEditor.EditorPrefs.SetFloat(System.String,System.Single)">
			<summary>Sets the float value of the preference identified by key.</summary>
		</member>
		<member name="M:UnityEditor.EditorPrefs.GetFloat(System.String,System.Single)">
			<summary>Returns the float value corresponding to key if it exists in the preference file.</summary>
		</member>
		<member name="M:UnityEditor.EditorPrefs.GetFloat(System.String)">
			<summary>Returns the float value corresponding to key if it exists in the preference file.</summary>
		</member>
		<member name="M:UnityEditor.EditorPrefs.SetString(System.String,System.String)">
			<summary>Sets the value of the preference identified by key. Note that EditorPrefs does not support null strings and will store an empty string instead.</summary>
		</member>
		<member name="M:UnityEditor.EditorPrefs.GetString(System.String,System.String)">
			<summary>Returns the value corresponding to key in the preference file if it exists.</summary>
		</member>
		<member name="M:UnityEditor.EditorPrefs.GetString(System.String)">
			<summary>Returns the value corresponding to key in the preference file if it exists.</summary>
		</member>
		<member name="M:UnityEditor.EditorPrefs.SetBool(System.String,System.Boolean)">
			<summary>Sets the value of the preference identified by key.</summary>
		</member>
		<member name="M:UnityEditor.EditorPrefs.GetBool(System.String,System.Boolean)">
			<summary>Returns the value corresponding to key in the preference file if it exists.</summary>
		</member>
		<member name="M:UnityEditor.EditorPrefs.GetBool(System.String)">
			<summary>Returns the value corresponding to key in the preference file if it exists.</summary>
		</member>
		<member name="M:UnityEditor.EditorPrefs.HasKey(System.String)">
			<summary>Returns true if key exists in the preferences file.</summary>
		</member>
		<member name="M:UnityEditor.EditorPrefs.DeleteKey(System.String)">
			<summary>Removes key and its corresponding value from the preferences.</summary>
		</member>
		<member name="M:UnityEditor.EditorPrefs.DeleteAll()">
			<summary>Removes all keys and values from the preferences. Use with caution.</summary>
		</member>
		<member name="T:UnityEditor.EditorUtility">
			<summary>Editor utility functions.</summary>
		</member>
		<member name="P:UnityEditor.EditorUtility.scriptCompilationFailed">
			<summary>True if there are any compilation error messages in the log.</summary>
		</member>
		<member name="M:UnityEditor.EditorUtility.OpenFilePanel(System.String,System.String,System.String)">
			<summary>Displays the "open file" dialog and returns the selected path name.</summary>
		</member>
		<member name="M:UnityEditor.EditorUtility.OpenFilePanelWithFilters(System.String,System.String,System.String[])">
			<summary>Displays the "open file" dialog and returns the selected path name.</summary>
		</member>
		<member name="M:UnityEditor.EditorUtility.DisplayDialog(System.String,System.String,System.String,System.String)">
			<summary>Displays a modal dialog.</summary>
		</member>
		<member name="M:UnityEditor.EditorUtility.DisplayDialog(System.String,System.String,System.String)">
			<summary>Displays a modal dialog.</summary>
		</member>
		<member name="P:UnityEditor.LightmapEditorSettings.filteringGaussRadiusIndirect">
			<summary>Specifies the radius the Progressive lightmapper used to filter for indirect light stored in the lightmap when using Gaussian filter. The default value is 5. The value range is 0 to 5.</summary>
		</member>
		<member name="P:UnityEditor.EditorGUIUtility.whiteTexture">
			<summary>Get a white texture.</summary>
		</member>
		<member name="M:UnityEditor.EditorUtility.DisplayDialogComplex(System.String,System.String,System.String,System.String,System.String)">
			<summary>Displays a modal dialog with three buttons.</summary>
		</member>
		<member name="P:UnityEditor.LightmapEditorSettings.filteringGaussRadiusAO">
			<summary>Specifies the radius the Progressive lightmapper uses to filter for ambient occlusion in the lightmap when using Gaussian filter. The default value is 2. The value range is 0 to 5.</summary>
		</member>
		<member name="P:UnityEditor.EditorStyles.layerMaskField">
			<summary>Style used for headings for Layer masks.</summary>
		</member>
		<member name="M:UnityEditor.PluginImporter.GetCompatibleWithPlatform(UnityEditor.BuildTargetGroup,UnityEditor.BuildTarget)">
			<summary>Is plugin compatible with specified platform.</summary>
		</member>
		<member name="M:UnityEditor.EditorUtility.OpenFolderPanel(System.String,System.String,System.String)">
			<summary>Displays the "open folder" dialog and returns the selected path name.</summary>
		</member>
		<member name="P:UnityEditor.EditorGUIUtility.systemCopyBuffer">
			<summary>The system copy buffer.</summary>
		</member>
		<member name="M:UnityEditor.PluginImporter.SetCompatibleWithPlatform(System.String,System.Boolean)">
			<summary>Sets compatibility with the specified platform.</summary>
		</member>
		<member name="P:UnityEditor.LightmapEditorSettings.filteringAtrousPositionSigmaDirect">
			<summary>Specifies the threshold the Progressive lightmapper uses to filter direct light stored in the lightmap when using A-Trous filter. The default value is 0.5. The value range is 0 to 2.</summary>
		</member>
		<member name="M:UnityEditor.PluginImporter.GetCompatibleWithPlatform(System.String)">
			<summary>Is plugin compatible with specified platform.</summary>
		</member>
		<member name="M:UnityEditor.EditorUtility.SaveFolderPanel(System.String,System.String,System.String)">
			<summary>Displays the "save folder" dialog and returns the selected path name.</summary>
		</member>
		<member name="P:UnityEditor.EditorGUIUtility.pixelsPerPoint">
			<summary>The scale of GUI points relative to screen pixels for the current viewThis value is the number of screen pixels per point of interface space. For instance, 2.0 on retina displays. Note that the value may differ from one view to the next if the views are on monitors with different UI scales.</summary>
		</member>
		<member name="M:UnityEditor.PluginImporter.SetCompatibleWithPlatform(System.String,System.String,System.Boolean)">
			<summary>Sets compatibility with the specified platform.</summary>
		</member>
		<member name="P:UnityEditor.LightmapEditorSettings.filteringAtrousPositionSigmaIndirect">
			<summary>Specifies the threshold the Progressive lightmapper uses to filter indirect light stored in the lightmap when using A-Trous filter. The default value is 2. The value range is 0 to 2.</summary>
		</member>
		<member name="M:UnityEditor.PluginImporter.GetCompatibleWithPlatform(System.String,System.String)">
			<summary>Is plugin compatible with specified platform.</summary>
		</member>
		<member name="M:UnityEditor.EditorUtility.IsPersistent(UnityEngine.Object)">
			<summary>Determines if an object is stored on disk.</summary>
		</member>
		<member name="P:UnityEditor.EditorGUIUtility.singleLineHeight">
			<summary>Get the height used for a single Editor control such as a one-line EditorGUI.TextField or EditorGUI.Popup.</summary>
		</member>
		<member name="M:UnityEditor.PluginImporter.SetPlatformData(UnityEditor.BuildTarget,System.String,System.String)">
			<summary>Sets platform specific data.</summary>
		</member>
		<member name="P:UnityEditor.LightmapEditorSettings.filteringAtrousPositionSigmaAO">
			<summary>Specifies the threshold the Progressive lightmapper uses to filter ambient occlusion stored in the lightmap when using A-Trous filter. The default value is 1. The value range is 0 to 2.</summary>
		</member>
		<member name="M:UnityEditor.EditorUtility.SaveFilePanel(System.String,System.String,System.String,System.String)">
			<summary>Displays the "save file" dialog and returns the selected path name.</summary>
		</member>
		<member name="P:UnityEditor.EditorGUIUtility.standardVerticalSpacing">
			<summary>Get the height used by default for vertical spacing between controls.</summary>
		</member>
		<member name="M:UnityEditor.PluginImporter.GetPlatformData(UnityEditor.BuildTarget,System.String)">
			<summary>Get platform specific data.</summary>
		</member>
		<member name="M:UnityEditor.EditorUtility.NaturalCompare(System.String,System.String)">
			<summary>Human-like sorting.</summary>
		</member>
		<member name="P:UnityEditor.LightmapEditorSettings.maxAtlasSize">
			<summary>The maximum size of an individual lightmap texture.</summary>
		</member>
		<member name="M:UnityEditor.PluginImporter.SetPlatformData(System.String,System.String,System.String)">
			<summary>Sets platform specific data.</summary>
		</member>
		<member name="P:UnityEditor.EditorGUIUtility.isProSkin">
			<summary>Is the user currently using the pro skin? (Read Only)</summary>
		</member>
		<member name="P:UnityEditor.EditorStyles.toggle">
			<summary>Style used for headings for EditorGUI.Toggle.</summary>
		</member>
		<member name="M:UnityEditor.PluginImporter.GetPlatformData(System.String,System.String)">
			<summary>Get platform specific data.</summary>
		</member>
		<member name="M:UnityEditor.EditorUtility.InstanceIDToObject(System.Int32)">
			<summary>Translates an instance ID to a reference to an object.</summary>
		</member>
		<member name="P:UnityEditor.LightmapEditorSettings.realtimeResolution">
			<summary>Lightmap resolution in texels per world unit. Defines the resolution of Realtime GI if enabled. If Baked GI is enabled, this defines the resolution used for indirect lighting. Higher resolution may take a long time to bake.</summary>
		</member>
		<member name="F:UnityEditor.AudioImporterSampleSettings.compressionFormat">
			<summary>CompressionFormat defines the compression type that the audio file is encoded to. Different compression types have different performance and audio artifact characteristics.</summary>
		</member>
		<member name="M:UnityEditor.PluginImporter.SetEditorData(System.String,System.String)">
			<summary>Sets editor specific data.</summary>
		</member>
		<member name="P:UnityEditor.EditorGUIUtility.editingTextField">
			<summary>Is a text field currently editing text?</summary>
		</member>
		<member name="P:UnityEditor.EditorStyles.foldout">
			<summary>Style used for headings for EditorGUI.Foldout.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.Foldout(System.Boolean,System.String,UnityEngine.GUIStyle)">
			<summary>Make a label with a foldout arrow to the left of it.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.Foldout(System.Boolean,UnityEngine.GUIContent)">
			<summary>Make a label with a foldout arrow to the left of it.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.Foldout(System.Boolean,UnityEngine.GUIContent,UnityEngine.GUIStyle)">
			<summary>Make a label with a foldout arrow to the left of it.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.Foldout(System.Boolean,System.String,System.Boolean)">
			<summary>Make a label with a foldout arrow to the left of it.</summary>
		</member>
		<member name="P:UnityEditor.LightmapEditorSettings.bakeResolution">
			<summary>Specifies the resolution of the Baked lightmap in texels per world unit. Specifying higher resolutions can significantly increase the time it takes to bake the lightmap. The default value is one texel per world unit. The minimum value is 0.0001.</summary>
		</member>
		<member name="P:UnityEditor.LightmapEditorSettings.textureCompression">
			<summary>Whether to use texture compression on the generated lightmaps.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.Foldout(System.Boolean,System.String,System.Boolean,UnityEngine.GUIStyle)">
			<summary>Make a label with a foldout arrow to the left of it.</summary>
		</member>
		<member name="P:UnityEditor.LightmapEditorSettings.reflectionCubemapCompression">
			<summary>Determines how Unity will compress baked reflection cubemap.</summary>
		</member>
		<member name="P:UnityEditor.LightmapEditorSettings.enableAmbientOcclusion">
			<summary>Enable baked ambient occlusion (AO).</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.Foldout(System.Boolean,UnityEngine.GUIContent,System.Boolean)">
			<summary>Make a label with a foldout arrow to the left of it.</summary>
		</member>
		<member name="P:UnityEditor.LightmapEditorSettings.aoMaxDistance">
			<summary>Beyond this distance a ray is considered to be unoccluded.</summary>
		</member>
		<member name="P:UnityEditor.LightmapEditorSettings.aoExponentIndirect">
			<summary>Ambient occlusion (AO) for indirect lighting.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.Foldout(System.Boolean,UnityEngine.GUIContent,System.Boolean,UnityEngine.GUIStyle)">
			<summary>Make a label with a foldout arrow to the left of it.</summary>
		</member>
		<member name="P:UnityEditor.LightmapEditorSettings.aoExponentDirect">
			<summary>Ambient occlusion (AO) for direct lighting.</summary>
		</member>
		<member name="P:UnityEditor.LightmapEditorSettings.padding">
			<summary>Texel separation between shapes.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.PrefixLabel(System.String)">
			<summary>Make a label in front of some control.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.PrefixLabel(System.String,UnityEngine.GUIStyle)">
			<summary>Make a label in front of some control.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.PrefixLabel(System.String,UnityEngine.GUIStyle,UnityEngine.GUIStyle)">
			<summary>Make a label in front of some control.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.PrefixLabel(UnityEngine.GUIContent)">
			<summary>Make a label in front of some control.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.PrefixLabel(UnityEngine.GUIContent,UnityEngine.GUIStyle)">
			<summary>Make a label in front of some control.</summary>
		</member>
		<member name="P:UnityEditor.LightmapEditorSettings.PathTracerFilter UnityEditor.LightmapEditorSettings.giPathTracerFilter">
			<summary>Determines the filtering kernel for the Progressive Lightmapper.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.PrefixLabel(UnityEngine.GUIContent,UnityEngine.GUIStyle,UnityEngine.GUIStyle)">
			<summary>Make a label in front of some control.</summary>
		</member>
		<member name="P:UnityEditor.LightmapEditorSettings.maxAtlasWidth">
			<summary>This property is now obsolete. Use maxAtlasSize instead.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.LabelField(System.String,UnityEngine.GUILayoutOption[])">
			<summary>Make a label field. (Useful for showing read-only info.)</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.LabelField(System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
			<summary>Make a label field. (Useful for showing read-only info.)</summary>
		</member>
		<member name="P:UnityEditor.LightmapEditorSettings.maxAtlasHeight">
			<summary>This property is now obsolete. Use maxAtlasSize instead.</summary>
		</member>
		<member name="T:UnityEditor.LightmapEditorSettings.Lightmapper">
			<summary>Backends available for baking lighting.</summary>
		</member>
		<member name="T:UnityEditor.LightmapEditorSettings.Sampling">
			<summary>Available sampling strategies for baking lightmaps with the Progressive Lightmapper.</summary>
		</member>
		<member name="T:UnityEditor.LightmapEditorSettings.FilterMode">
			<summary>The available filtering modes for the Progressive Lightmapper.</summary>
		</member>
		<member name="T:UnityEditor.LightmapEditorSettings.DenoiserType">
			<summary>The available denoisers for the Progressive Lightmapper.</summary>
		</member>
		<member name="T:UnityEditor.PopupWindowContent">
			<summary>Class used to implement content for a popup window.</summary>
		</member>
		<member name="M:UnityEditor.EditorUtility.CompressTexture(UnityEngine.Texture2D,UnityEngine.TextureFormat,System.Int32)">
			<summary>Compress a texture.</summary>
		</member>
		<member name="P:UnityEditor.PopupWindowContent.editorWindow">
			<summary>The EditorWindow that contains the popup content.</summary>
		</member>
		<member name="M:UnityEditor.PopupWindowContent.OnGUI(UnityEngine.Rect)">
			<summary>Callback for drawing GUI controls for the popup window.</summary>
		</member>
		<member name="M:UnityEditor.PopupWindowContent.GetWindowSize()">
			<summary>The size of the popup window.</summary>
		</member>
		<member name="M:UnityEditor.PopupWindowContent.OnOpen()">
			<summary>Callback when the popup window is opened.</summary>
		</member>
		<member name="M:UnityEditor.EditorUtility.CompressCubemapTexture(UnityEngine.Cubemap,UnityEngine.TextureFormat,System.Int32)">
			<summary>Compress a cubemap texture.</summary>
		</member>
		<member name="M:UnityEditor.PopupWindowContent.OnClose()">
			<summary>Callback when the popup window is closed.</summary>
		</member>
		<member name="T:UnityEditor.PopupWindow">
			<summary>Class used to display popup windows that inherit from PopupWindowContent.</summary>
		</member>
		<member name="M:UnityEditor.EditorUtility.SetDirty(UnityEngine.Object)">
			<summary>Marks target object as dirty. (Only suitable for non-scene objects).</summary>
		</member>
		<member name="T:UnityEditor.EditorUserBuildSettings">
			<summary>User build settings for the Editor</summary>
		</member>
		<member name="M:UnityEditor.PopupWindow.Show(UnityEngine.Rect,UnityEditor.PopupWindowContent)">
			<summary>Show a popup with the given PopupWindowContent.</summary>
		</member>
		<member name="M:UnityEditor.PluginImporter.GetEditorData(System.String)">
			<summary>Returns editor specific data for specified key.</summary>
		</member>
		<member name="M:UnityEditor.PopupWindow.Show(UnityEngine.Rect,UnityEditor.PopupWindowContent,UnityEditor.PopupLocation[])">
			<summary>Show a popup with the given PopupWindowContent.</summary>
		</member>
		<member name="M:UnityEditor.PopupWindow.Show(UnityEngine.Rect,UnityEditor.PopupWindowContent,UnityEditor.PopupLocation[],UnityEditor.ShowMode)">
			<summary>Show a popup with the given PopupWindowContent.</summary>
		</member>
		<member name="M:UnityEditor.PluginImporter.GetAllImporters()">
			<summary>Returns all plugin importers for all platforms.</summary>
		</member>
		<member name="T:UnityEditor.PluginImporter.IncludeInBuildDelegate">
			<summary>Delegate to be used with SetIncludeInBuildDelegate.</summary>
		</member>
		<member name="T:UnityEditor.VideoCodec">
			<summary>Video codec to use when importing video clips.</summary>
		</member>
		<member name="T:UnityEditor.VideoBitrateMode">
			<summary>Bit rate after the clip is transcoded.</summary>
		</member>
		<member name="T:UnityEditor.VideoDeinterlaceMode">
			<summary>Describes how the fields in the image, if any, should be interpreted.</summary>
		</member>
		<member name="T:UnityEditor.ViewTool">
			<summary>Enum for Tools.viewTool.</summary>
		</member>
		<member name="T:UnityEditor.VideoResizeMode">
			<summary>How the video clip's images will be resized during transcoding.</summary>
		</member>
		<member name="T:UnityEditor.VideoSpatialQuality">
			<summary>Controls the imported clip's internal resize to save space at the cost of blurrier images.</summary>
		</member>
		<member name="T:UnityEditor.VideoEncodeAspectRatio">
			<summary>Methods to compensate for aspect ratio discrepancies between the source resolution and the wanted encoding size.</summary>
		</member>
		<member name="T:UnityEditor.VideoImporterTargetSettings">
			<summary>Importer settings that can have platform-specific values.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.LabelField(UnityEngine.GUIContent,UnityEngine.GUILayoutOption[])">
			<summary>Make a label field. (Useful for showing read-only info.)</summary>
		</member>
		<member name="F:UnityEditor.VideoImporterTargetSettings.enableTranscoding">
			<summary>Controls whether the movie file will be transcoded during import. When transcoding is not enabled, the file will be imported in its original format.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.LabelField(UnityEngine.GUIContent,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
			<summary>Make a label field. (Useful for showing read-only info.)</summary>
		</member>
		<member name="P:UnityEditor.EditorStyles.foldoutPreDrop">
			<summary>Style used for headings for EditorGUI.Foldout.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.LabelField(System.String,System.String,UnityEngine.GUILayoutOption[])">
			<summary>Make a label field. (Useful for showing read-only info.)</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.Slider(UnityEngine.Rect,System.Single,System.Single,System.Single)">
			<summary>Makes a slider the user can drag to change a value between a min and a max.</summary>
		</member>
		<member name="F:UnityEditor.VideoImporterTargetSettings.codec">
			<summary>Codec that the resulting VideoClip will use.</summary>
		</member>
		<member name="P:UnityEditor.EditorStyles.foldoutHeader">
			<summary>Style used for headings for EditorGUILayout.BeginFoldoutHeaderGroup.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.LabelField(System.String,System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
			<summary>Make a label field. (Useful for showing read-only info.)</summary>
		</member>
		<member name="F:UnityEditor.VideoImporterTargetSettings.resizeMode">
			<summary>How to resize the images when going into the imported clip.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.Slider(UnityEngine.Rect,System.String,System.Single,System.Single,System.Single)">
			<summary>Makes a slider the user can drag to change a value between a min and a max.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.LabelField(UnityEngine.GUIContent,UnityEngine.GUIContent,UnityEngine.GUILayoutOption[])">
			<summary>Make a label field. (Useful for showing read-only info.)</summary>
		</member>
		<member name="P:UnityEditor.EditorStyles.foldoutHeaderIcon">
			<summary>Style used for icon for EditorGUILayout.BeginFoldoutHeaderGroup.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.LabelField(UnityEngine.GUIContent,UnityEngine.GUIContent,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
			<summary>Make a label field. (Useful for showing read-only info.)</summary>
		</member>
		<member name="F:UnityEditor.VideoImporterTargetSettings.aspectRatio">
			<summary>How the aspect ratio discrepancies, if any, will be handled if the chosen import resolution has a different ratio than the source.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.Slider(UnityEngine.Rect,UnityEngine.GUIContent,System.Single,System.Single,System.Single)">
			<summary>Makes a slider the user can drag to change a value between a min and a max.</summary>
		</member>
		<member name="F:UnityEditor.PrefabUtility.PrefabInstanceUpdated UnityEditor.PrefabUtility.prefabInstanceUpdated">
			<summary>Called after Prefab instances in the Scene have been updated.</summary>
		</member>
		<member name="P:UnityEditor.EditorStyles.toggleGroup">
			<summary>Style used for headings for EditorGUILayout.BeginToggleGroup.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.Toggle(System.Boolean,UnityEngine.GUILayoutOption[])">
			<summary>Make a toggle.</summary>
		</member>
		<member name="F:UnityEditor.VideoImporterTargetSettings.customWidth">
			<summary>Width of the transcoded clip when the resizeMode is set to custom.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.Toggle(System.String,System.Boolean,UnityEngine.GUILayoutOption[])">
			<summary>Make a toggle.</summary>
		</member>
		<member name="M:UnityEditor.PlatformIcon.GetTexture(System.Int32)">
			<summary>Retrieve the texture which is currently assigned to the specified layer.</summary>
		</member>
		<member name="F:UnityEditor.EditorUserBuildSettings.activeBuildTargetChanged">
			<summary>Triggered in response to SwitchActiveBuildTarget.</summary>
		</member>
		<member name="M:UnityEditor.EditorUtility.CopySerialized(UnityEngine.Object,UnityEngine.Object)">
			<summary>Copy all settings of a Unity Object.</summary>
		</member>
		<member name="M:UnityEditor.PlatformIcon.GetTextures()">
			<summary>Retrieve an array of all textures which are currently assigned to the icon slot.</summary>
		</member>
		<member name="M:UnityEditor.EditorUtility.CopySerializedManagedFieldsOnly(System.Object,System.Object)">
			<summary>Copies the serializable fields from one managed object to another.</summary>
		</member>
		<member name="P:UnityEditor.EditorUserBuildSettings.selectedBuildTargetGroup">
			<summary>The currently selected build target group.</summary>
		</member>
		<member name="M:UnityEditor.PlatformIcon.SetTexture(UnityEngine.Texture2D,System.Int32)">
			<summary>Assign a texture to the specified layer.</summary>
		</member>
		<member name="M:UnityEditor.EditorUtility.CollectDependencies(UnityEngine.Object[])">
			<summary>Calculates and returns a list of all assets the assets listed in roots depend on.</summary>
		</member>
		<member name="F:UnityEditor.VideoImporterTargetSettings.customHeight">
			<summary>Height of the transcoded clip when the resizeMode is set to custom.</summary>
		</member>
		<member name="P:UnityEditor.EditorUserBuildSettings.selectedStandaloneTarget">
			<summary>The currently selected target for a standalone build.</summary>
		</member>
		<member name="M:UnityEditor.PlatformIcon.SetTextures(UnityEngine.Texture2D[])">
			<summary>Assign all available icon layers.</summary>
		</member>
		<member name="M:UnityEditor.EditorUtility.CollectDeepHierarchy(UnityEngine.Object[])">
			<summary>Collect all objects in the hierarchy rooted at each of the given objects.</summary>
		</member>
		<member name="T:UnityEditor.PlatformIconKind">
			<summary>Icon kind wrapper.</summary>
		</member>
		<member name="P:UnityEditor.EditorUserBuildSettings.ps4BuildSubtarget">
			<summary>PS4 Build Subtarget.</summary>
		</member>
		<member name="M:UnityEditor.EditorUtility.FormatBytes(System.Int64)">
			<summary>Returns a text for a number of bytes.</summary>
		</member>
		<member name="P:UnityEditor.EditorUserBuildSettings.ps4HardwareTarget">
			<summary>Specifies which version of PS4 hardware to target.</summary>
		</member>
		<member name="F:UnityEditor.VideoImporterTargetSettings.bitrateMode">
			<summary>Bit rate type for the transcoded clip.</summary>
		</member>
		<member name="M:UnityEditor.EditorUtility.DisplayProgressBar(System.String,System.String,System.Single)">
			<summary>Displays or updates a progress bar.</summary>
		</member>
		<member name="F:UnityEditor.VideoImporterTargetSettings.spatialQuality">
			<summary>Controls an internal image resize, resulting in blurrier images but smaller image dimensions and file size.</summary>
		</member>
		<member name="P:UnityEditor.EditorUserBuildSettings.explicitNullChecks">
			<summary>Are null references actively validated?</summary>
		</member>
		<member name="T:UnityEditor.PrefabType">
			<summary>The type of a Prefab object as returned by PrefabUtility.GetPrefabType.</summary>
		</member>
		<member name="M:UnityEditor.EditorUtility.DisplayCancelableProgressBar(System.String,System.String,System.Single)">
			<summary>Displays or updates a progress bar that has a cancel button.</summary>
		</member>
		<member name="P:UnityEditor.EditorUserBuildSettings.explicitDivideByZeroChecks">
			<summary>Are divide by zero's actively validated?</summary>
		</member>
		<member name="T:UnityEditor.VideoClipImporter">
			<summary>VideoClipImporter lets you modify VideoClip import settings from Editor scripts.</summary>
		</member>
		<member name="M:UnityEditor.EditorUtility.ClearProgressBar()">
			<summary>Removes progress bar.</summary>
		</member>
		<member name="P:UnityEditor.EditorUserBuildSettings.explicitArrayBoundsChecks">
			<summary>Are array bounds actively validated?</summary>
		</member>
		<member name="P:UnityEditor.VideoClipImporter.quality">
			<summary>Used in legacy import mode.  Same as MovieImport.quality.</summary>
		</member>
		<member name="T:UnityEditor.ReplacePrefabOptions">
			<summary>Flags for the PrefabUtility.ReplacePrefab function.</summary>
		</member>
		<member name="M:UnityEditor.EditorUtility.GetObjectEnabled(UnityEngine.Object)">
			<summary>Is the object enabled (0 disabled, 1 enabled, -1 has no enabled button).</summary>
		</member>
		<member name="P:UnityEditor.VideoClipImporter.linearColor">
			<summary>Used in legacy import mode.  Same as MovieImport.linearTexture.</summary>
		</member>
		<member name="P:UnityEditor.EditorUserBuildSettings.needSubmissionMaterials">
			<summary>Build submission materials.</summary>
		</member>
		<member name="T:UnityEditor.PropertyModification">
			<summary>Defines a single modified property.</summary>
		</member>
		<member name="M:UnityEditor.EditorUtility.SetObjectEnabled(UnityEngine.Object,System.Boolean)">
			<summary>Set the enabled state of the object.</summary>
		</member>
		<member name="P:UnityEditor.VideoClipImporter.useLegacyImporter">
			<summary>True to import a MovieTexture (deprecated), false for a VideoClip (preferred).</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.Toggle(UnityEngine.GUIContent,System.Boolean,UnityEngine.GUILayoutOption[])">
			<summary>Make a toggle.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.Toggle(System.Boolean,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
			<summary>Make a toggle.</summary>
		</member>
		<member name="P:UnityEditor.VideoClipImporter.sourceFileSize">
			<summary>Size in bytes of the file before importing.</summary>
		</member>
		<member name="M:UnityEditor.EditorUtility.SetSelectedRenderState(UnityEngine.Renderer,UnityEditor.EditorSelectedRenderState)">
			<summary>Set the Scene View selected display mode for this Renderer.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.Toggle(System.String,System.Boolean,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
			<summary>Make a toggle.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.Toggle(UnityEngine.GUIContent,System.Boolean,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
			<summary>Make a toggle.</summary>
		</member>
		<member name="P:UnityEditor.VideoClipImporter.outputFileSize">
			<summary>Size in bytes of the file once imported.</summary>
		</member>
		<member name="M:UnityEditor.EditorUtility.ExtractOggFile(UnityEngine.Object,System.String)">
			<summary>Saves an AudioClip or MovieTexture to a file.</summary>
		</member>
		<member name="P:UnityEditor.VideoClipImporter.frameCount">
			<summary>Number of frames in the clip.</summary>
		</member>
		<member name="P:UnityEditor.EditorUserBuildSettings.compressWithPsArc">
			<summary>Build data compressed with PSArc.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.ToggleLeft(System.String,System.Boolean,UnityEngine.GUILayoutOption[])">
			<summary>Make a toggle field where the toggle is to the left and the label immediately to the right of it.</summary>
		</member>
		<member name="M:UnityEditor.EditorUtility.SetCameraAnimateMaterials(UnityEngine.Camera,System.Boolean)">
			<summary>Sets this camera to allow animation of materials in the Editor.</summary>
		</member>
		<member name="P:UnityEditor.VideoClipImporter.frameRate">
			<summary>Frame rate of the clip.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.ToggleLeft(UnityEngine.GUIContent,System.Boolean,UnityEngine.GUILayoutOption[])">
			<summary>Make a toggle field where the toggle is to the left and the label immediately to the right of it.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.ToggleLeft(System.String,System.Boolean,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
			<summary>Make a toggle field where the toggle is to the left and the label immediately to the right of it.</summary>
		</member>
		<member name="M:UnityEditor.EditorUtility.SetCameraAnimateMaterialsTime(UnityEngine.Camera,System.Single)">
			<summary>Sets the global time for this camera to use when rendering.</summary>
		</member>
		<member name="P:UnityEditor.VideoClipImporter.keepAlpha">
			<summary>Whether to keep the alpha from the source into the transcoded clip.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.ToggleLeft(UnityEngine.GUIContent,System.Boolean,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
			<summary>Make a toggle field where the toggle is to the left and the label immediately to the right of it.</summary>
		</member>
		<member name="F:UnityEditor.PropertyModification.target">
			<summary>Object that will be modified.</summary>
		</member>
		<member name="P:UnityEditor.VideoClipImporter.sourceHasAlpha">
			<summary>True if the source file has a channel for per-pixel transparency.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.TextField(System.String,UnityEngine.GUILayoutOption[])">
			<summary>Make a text field.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.TextField(System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
			<summary>Make a text field.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.TextField(System.String,System.String,UnityEngine.GUILayoutOption[])">
			<summary>Make a text field.</summary>
		</member>
		<member name="P:UnityEditor.VideoClipImporter.deinterlaceMode">
			<summary>Images are deinterlaced during transcode.  This tells the importer how to interpret fields in the source, if any.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.TextField(System.String,System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
			<summary>Make a text field.</summary>
		</member>
		<member name="F:UnityEditor.PropertyModification.propertyPath">
			<summary>Property path of the property being modified (Matches as SerializedProperty.propertyPath).</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.TextField(UnityEngine.GUIContent,System.String,UnityEngine.GUILayoutOption[])">
			<summary>Make a text field.</summary>
		</member>
		<member name="P:UnityEditor.VideoClipImporter.flipVertical">
			<summary>Apply a vertical flip during import.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.TextField(UnityEngine.GUIContent,System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
			<summary>Make a text field.</summary>
		</member>
		<member name="F:UnityEditor.PropertyModification.value">
			<summary>The value being applied.</summary>
		</member>
		<member name="P:UnityEditor.VideoClipImporter.flipHorizontal">
			<summary>Apply a horizontal flip during import.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.DelayedTextField(System.String,UnityEngine.GUILayoutOption[])">
			<summary>Make a delayed text field.</summary>
		</member>
		<member name="F:UnityEditor.PropertyModification.objectReference">
			<summary>The value being applied when it is a object reference (which can not be represented as a string).</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.DelayedTextField(System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
			<summary>Make a delayed text field.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.DelayedTextField(System.String,System.String,UnityEngine.GUILayoutOption[])">
			<summary>Make a delayed text field.</summary>
		</member>
		<member name="P:UnityEditor.VideoClipImporter.importAudio">
			<summary>Import audio tracks from source file.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.DelayedTextField(System.String,System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
			<summary>Make a delayed text field.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.DelayedTextField(UnityEngine.GUIContent,System.String,UnityEngine.GUILayoutOption[])">
			<summary>Make a delayed text field.</summary>
		</member>
		<member name="P:UnityEditor.VideoClipImporter.defaultTargetSettings">
			<summary>Default values for the platform-specific import settings.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.DelayedTextField(UnityEngine.GUIContent,System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
			<summary>Make a delayed text field.</summary>
		</member>
		<member name="F:UnityEditor.AudioImporterSampleSettings.quality">
			<summary>Audio compression quality (0-1)Amount of compression. The value roughly corresponds to the ratio between the resulting and the source file sizes.</summary>
		</member>
		<member name="P:UnityEditor.VideoClipImporter.isPlayingPreview">
			<summary>Whether the preview is currently playing.</summary>
		</member>
		<member name="T:UnityEditor.ModelImporterNormals">
			<summary>Normal generation options for ModelImporter.</summary>
		</member>
		<member name="P:UnityEditor.VideoClipImporter.sourceAudioTrackCount">
			<summary>Number of audio tracks in the source file.</summary>
		</member>
		<member name="T:UnityEditor.ModelImporterNormalCalculationMode">
			<summary>Normal generation options for ModelImporter.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.DelayedTextField(UnityEditor.SerializedProperty,UnityEngine.GUILayoutOption[])">
			<summary>Make a delayed text field.</summary>
		</member>
		<member name="P:UnityEditor.VideoClipImporter.pixelAspectRatioNumerator">
			<summary>Numerator of the pixel aspect ratio (num:den).</summary>
		</member>
		<member name="T:UnityEditor.PreferenceItem">
			<summary>(Obsolete: use the SettingsProvider class instead) The PreferenceItem attribute allows you to add preferences sections to the Preferences window.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.DelayedTextField(UnityEditor.SerializedProperty,UnityEngine.GUIContent,UnityEngine.GUILayoutOption[])">
			<summary>Make a delayed text field.</summary>
		</member>
		<member name="T:UnityEditor.PivotMode">
			<summary>Where is the tool handle placed.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.TextArea(System.String,UnityEngine.GUILayoutOption[])">
			<summary>Make a text area.</summary>
		</member>
		<member name="T:UnityEditor.PivotRotation">
			<summary>How is the tool handle oriented.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.TextArea(System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
			<summary>Make a text area.</summary>
		</member>
		<member name="T:UnityEditor.Tool">
			<summary>Which tool is active in the editor.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.SelectableLabel(System.String,UnityEngine.GUILayoutOption[])">
			<summary>Make a selectable label field. (Useful for showing read-only info that can be copy-pasted.)</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.SelectableLabel(System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
			<summary>Make a selectable label field. (Useful for showing read-only info that can be copy-pasted.)</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.PasswordField(System.String,UnityEngine.GUILayoutOption[])">
			<summary>Make a text field where the user can enter a password.</summary>
		</member>
		<member name="T:UnityEditor.Tools">
			<summary>Class used to manipulate the tools used in Unity's Scene View.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.PasswordField(System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
			<summary>Make a text field where the user can enter a password.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.PasswordField(System.String,System.String,UnityEngine.GUILayoutOption[])">
			<summary>Make a text field where the user can enter a password.</summary>
		</member>
		<member name="P:UnityEditor.EditorGUIUtility.textFieldHasSelection">
			<summary>True if a text field currently has focused and the text in it is selected.</summary>
		</member>
		<member name="P:UnityEditor.Tools.current">
			<summary>The tool that is currently selected for the Scene View.</summary>
		</member>
		<member name="P:UnityEditor.Tools.viewTool">
			<summary>The option that is currently active for the View tool in the Scene view.</summary>
		</member>
		<member name="P:UnityEditor.EditorGUIUtility.hierarchyMode">
			<summary>Is the Editor GUI is hierarchy mode?</summary>
		</member>
		<member name="T:UnityEditor.ModelImporterNormalSmoothingSource">
			<summary>Source of smoothing information for calculation of normals in ModelImporter.</summary>
		</member>
		<member name="P:UnityEditor.Tools.handlePosition">
			<summary>The position of the tool handle in world space.</summary>
		</member>
		<member name="P:UnityEditor.EditorGUIUtility.wideMode">
			<summary>Is the Editor GUI currently in wide mode?</summary>
		</member>
		<member name="T:UnityEditor.DefaultLightingExplorerExtension">
			<summary>Default definition for the Lighting Explorer. Can be overridden completely or partially.</summary>
		</member>
		<member name="P:UnityEditor.Tools.handleRect">
			<summary>The rectangle used for the rect tool.</summary>
		</member>
		<member name="P:UnityEditor.EditorGUIUtility.currentViewWidth">
			<summary>The width of the GUI area for the current EditorWindow or other view.</summary>
		</member>
		<member name="M:UnityEditor.DefaultLightingExplorerExtension.GetContentTabs()">
			<summary>This returns all the default tabs for the Lighting Explorer.</summary>
		</member>
		<member name="P:UnityEditor.Tools.handleRectRotation">
			<summary>The rotation of the rect tool handle in world space.</summary>
		</member>
		<member name="P:UnityEditor.EditorGUIUtility.labelWidth">
			<summary>The width in pixels reserved for labels of Editor GUI controls.</summary>
		</member>
		<member name="T:UnityEditor.ModelImporterTangents">
			<summary>Vertex tangent generation options for ModelImporter.</summary>
		</member>
		<member name="P:UnityEditor.VideoClipImporter.pixelAspectRatioDenominator">
			<summary>Denominator of the pixel aspect ratio (num:den).</summary>
		</member>
		<member name="M:UnityEditor.DefaultLightingExplorerExtension.GetLights()">
			<summary>Returns Lights.</summary>
		</member>
		<member name="P:UnityEditor.Tools.pivotMode">
			<summary>Are we in Center or Pivot mode.</summary>
		</member>
		<member name="P:UnityEditor.EditorGUIUtility.fieldWidth">
			<summary>The minimum width in pixels reserved for the fields of Editor GUI controls.</summary>
		</member>
		<member name="T:UnityEditor.ModelImporterMeshCompression">
			<summary>Mesh compression options for ModelImporter.</summary>
		</member>
		<member name="M:UnityEditor.DefaultLightingExplorerExtension.GetLightColumns()">
			<summary>Returns column definitions for Lights.</summary>
		</member>
		<member name="P:UnityEditor.Tools.rectBlueprintMode">
			<summary>Is the rect handle in blueprint mode?</summary>
		</member>
		<member name="M:UnityEditor.EditorGUIUtility.SetIconSize(UnityEngine.Vector2)">
			<summary>Set icons rendered as part of GUIContent to be rendered at a specific size.</summary>
		</member>
		<member name="M:UnityEditor.DefaultLightingExplorerExtension.GetReflectionProbes()">
			<summary>Returns Reflection Probes.</summary>
		</member>
		<member name="P:UnityEditor.Tools.handleRotation">
			<summary>The rotation of the tool handle in world space.</summary>
		</member>
		<member name="T:UnityEditor.ModelImporterIndexFormat">
			<summary>Format of the imported mesh index buffer data.</summary>
		</member>
		<member name="M:UnityEditor.DefaultLightingExplorerExtension.GetReflectionProbeColumns()">
			<summary>Returns column definitions for Reflection Probes.</summary>
		</member>
		<member name="P:UnityEditor.Tools.pivotRotation">
			<summary>What's the rotation of the tool handle.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUIUtility.IsDisplayReferencedByCameras(System.Int32)">
			<summary>Check if any enabled camera can render to a particular display.</summary>
		</member>
		<member name="T:UnityEditor.ModelImporterAnimationCompression">
			<summary>Animation compression options for ModelImporter.</summary>
		</member>
		<member name="M:UnityEditor.DefaultLightingExplorerExtension.GetLightProbes()">
			<summary>Returns Light Probes.</summary>
		</member>
		<member name="P:UnityEditor.Tools.hidden">
			<summary>Hides the Tools(Move, Rotate, Resize) on the Scene view.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUIUtility.QueueGameViewInputEvent(UnityEngine.Event)">
			<summary>Send an input event into the game.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.PasswordField(System.String,System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
			<summary>Make a text field where the user can enter a password.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.PasswordField(UnityEngine.GUIContent,System.String,UnityEngine.GUILayoutOption[])">
			<summary>Make a text field where the user can enter a password.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUIUtility.RenderGameViewCameras(UnityEngine.RenderTexture,System.Int32,UnityEngine.Rect,UnityEngine.Vector2,System.Boolean)">
			<summary>Render all ingame cameras.</summary>
		</member>
		<member name="P:UnityEditor.VideoClipImporter.transcodeSkipped">
			<summary>Returns true if transcoding was skipped during import, false otherwise. (Read Only)When VideoImporterTargetSettings.enableTranscoding is set to true, the resulting transcoding operation done at import time may be quite long, up to many hours depending on source resolution and content duration. An option to skip this process is offered in the asset import progress bar. When skipped, the transcoding instead provides a non-transcoded verision of the asset. However, the importer settings stay intact so this property can be inspected to detect the incoherence with the generated artifact.Re-importing without stopping the transcode process, or with transcode turned off, causes this property to become false.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.PasswordField(UnityEngine.GUIContent,System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
			<summary>Make a text field where the user can enter a password.</summary>
		</member>
		<member name="M:UnityEditor.DefaultLightingExplorerExtension.GetLightProbeColumns()">
			<summary>Returns column definitions for Light Probes.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.FloatField(System.Single,UnityEngine.GUILayoutOption[])">
			<summary>Make a text field for entering float values.</summary>
		</member>
		<member name="M:UnityEditor.VideoClipImporter.GetTargetSettings(System.String)">
			<summary>Returns the platform-specific import settings for the specified platform.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.FloatField(System.Single,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
			<summary>Make a text field for entering float values.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUIUtility.PointsToPixels(UnityEngine.Rect)">
			<summary>Convert from point space to pixel space.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.FloatField(System.String,System.Single,UnityEngine.GUILayoutOption[])">
			<summary>Make a text field for entering float values.</summary>
		</member>
		<member name="M:UnityEditor.DefaultLightingExplorerExtension.GetEmissives()">
			<summary>Returns objects with an Emissive material.</summary>
		</member>
		<member name="M:UnityEditor.VideoClipImporter.SetTargetSettings(System.String,UnityEditor.VideoImporterTargetSettings)">
			<summary>Sets the platform-specific import settings for the specified platform.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.FloatField(System.String,System.Single,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
			<summary>Make a text field for entering float values.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUIUtility.PixelsToPoints(UnityEngine.Rect)">
			<summary>Convert from pixel space to point space.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.FloatField(UnityEngine.GUIContent,System.Single,UnityEngine.GUILayoutOption[])">
			<summary>Make a text field for entering float values.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUIUtility.PointsToPixels(UnityEngine.Vector2)">
			<summary>Convert from point space to pixel space.</summary>
		</member>
		<member name="M:UnityEditor.DefaultLightingExplorerExtension.GetEmissivesColumns()">
			<summary>Returns column definitions for Emissives.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.FloatField(UnityEngine.GUIContent,System.Single,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
			<summary>Make a text field for entering float values.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUIUtility.PixelsToPoints(UnityEngine.Vector2)">
			<summary>Convert from pixel space to point space.</summary>
		</member>
		<member name="M:UnityEditor.VideoClipImporter.ClearTargetSettings(System.String)">
			<summary>Clear the platform-specific import settings for the specified platform, causing them to go back to the default settings.</summary>
		</member>
		<member name="T:UnityEditor.LightingExplorerTab">
			<summary>Create custom tabs for the Lighting Explorer.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.DelayedFloatField(System.Single,UnityEngine.GUILayoutOption[])">
			<summary>Make a delayed text field for entering floats.</summary>
		</member>
		<member name="M:UnityEditor.VideoClipImporter.PlayPreview()">
			<summary>Starts preview playback.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUIUtility.GetFlowLayoutedRects(UnityEngine.Rect,UnityEngine.GUIStyle,System.Single,System.Single,System.Collections.Generic.List`1<System.String>)">
			<summary>Layout list of string items left to right, top to bottom in the given area.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.DelayedFloatField(System.Single,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
			<summary>Make a delayed text field for entering floats.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.DelayedFloatField(System.String,System.Single,UnityEngine.GUILayoutOption[])">
			<summary>Make a delayed text field for entering floats.</summary>
		</member>
		<member name="M:UnityEditor.VideoClipImporter.StopPreview()">
			<summary>Stops preview playback.</summary>
		</member>
		<member name="T:UnityEditor.LightingExplorerTableColumn">
			<summary>This is used when defining how a column should look and behave in the Lighting Explorer.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.DelayedFloatField(System.String,System.Single,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
			<summary>Make a delayed text field for entering floats.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUIUtility.FindTexture(System.String)">
			<summary>Get a texture from its source filename.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.DelayedFloatField(UnityEngine.GUIContent,System.Single,UnityEngine.GUILayoutOption[])">
			<summary>Make a delayed text field for entering floats.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUIUtility.FindTexture(System.Type)">
			<summary>Get a texture from its source filename.</summary>
		</member>
		<member name="T:UnityEditor.ModelImporterGenerateAnimations">
			<summary>Animation generation options for ModelImporter. These options relate to the legacy Animation system, they should only be used when ModelImporter.animationType==ModelImporterAnimationType.Legacy.</summary>
		</member>
		<member name="T:UnityEditor.GenericMenu">
			<summary>GenericMenu lets you create custom context menus and dropdown menus.</summary>
		</member>
		<member name="T:UnityEditor.LightingExplorerTableColumn.OnGUIDelegate">
			<summary>A delegate for how to draw the property.</summary>
		</member>
		<member name="P:UnityEditor.GenericMenu.allowDuplicateNames">
			<summary>Allow the menu to have multiple items with the same name.</summary>
		</member>
		<member name="M:UnityEditor.GenericMenu.AddItem(UnityEngine.GUIContent,System.Boolean,UnityEditor.GenericMenu.MenuFunction)">
			<summary>Add an item to the menu.</summary>
		</member>
		<member name="T:UnityEditor.LightingExplorerTableColumn.ComparePropertiesDelegate">
			<summary>A delegate for comparison of properties for sorting.</summary>
		</member>
		<member name="M:UnityEditor.GenericMenu.AddItem(UnityEngine.GUIContent,System.Boolean,UnityEditor.GenericMenu.MenuFunction2,System.Object)">
			<summary>Add an item to the menu.</summary>
		</member>
		<member name="M:UnityEditor.GenericMenu.AddDisabledItem(UnityEngine.GUIContent)">
			<summary>Add a disabled item to the menu.</summary>
		</member>
		<member name="T:UnityEditor.LightingExplorerTableColumn.CopyPropertiesDelegate">
			<summary>A delegate for copying of properties.</summary>
		</member>
		<member name="M:UnityEditor.GenericMenu.AddDisabledItem(UnityEngine.GUIContent,System.Boolean)">
			<summary>Add a disabled item to the menu.</summary>
		</member>
		<member name="M:UnityEditor.GenericMenu.AddSeparator(System.String)">
			<summary>Add a seperator item to the menu.</summary>
		</member>
		<member name="T:UnityEditor.LightingExplorerExtensionAttribute">
			<summary>An attribute to mark an extension class for the Lighting Explorer. Supports only one per render pipeline.</summary>
		</member>
		<member name="T:UnityEditor.ModelImporterAnimationType">
			<summary>Animation mode for ModelImporter.</summary>
		</member>
		<member name="M:UnityEditor.GenericMenu.GetItemCount()">
			<summary>Get number of items in the menu.</summary>
		</member>
		<member name="T:UnityEditor.ILightingExplorerExtension">
			<summary>Interface for when you extend the Lighting Explorer. Used in full overrides of the default behavior.</summary>
		</member>
		<member name="T:UnityEditor.ModelImporterHumanoidOversampling">
			<summary>Humanoid Oversampling available multipliers.</summary>
		</member>
		<member name="M:UnityEditor.GenericMenu.ShowAsContext()">
			<summary>Show the menu under the mouse when right-clicked.</summary>
		</member>
		<member name="M:UnityEditor.ILightingExplorerExtension.GetContentTabs()">
			<summary>Returns the tabs that you have selected to display in the Lighting Explorer.</summary>
		</member>
		<member name="M:UnityEditor.GenericMenu.DropDown(UnityEngine.Rect)">
			<summary>Show the menu at the given screen rect.</summary>
		</member>
		<member name="T:UnityEditor.ModelImporterSkinWeights">
			<summary>Skin weights options for ModelImporter.</summary>
		</member>
		<member name="M:UnityEditor.ILightingExplorerExtension.OnEnable()">
			<summary>This is called when the Lighting Explorer OnEnable is called, or when you switch to another extension.</summary>
		</member>
		<member name="T:UnityEditor.GenericMenu.MenuFunction">
			<summary>Callback function, called when a menu item is selected.</summary>
		</member>
		<member name="T:UnityEditor.TakeInfo">
			<summary>A Takeinfo object contains all the information needed to describe a take.</summary>
		</member>
		<member name="M:UnityEditor.ILightingExplorerExtension.OnDisable()">
			<summary>This is called when the Lighting Explorer OnDisable is called, or when you switch to another extension.</summary>
		</member>
		<member name="T:UnityEditor.GenericMenu.MenuFunction2">
			<summary>Callback function with user data, called when a menu item is selected.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUIUtility.IconContent(System.String)">
			<summary>Fetch the GUIContent from the Unity builtin resources with the given name.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUIUtility.IconContent(System.String)">
			<summary>Fetch the GUIContent from the Unity builtin resources with the given name.</summary>
		</member>
		<member name="F:UnityEditor.TakeInfo.name">
			<summary>Take name as define from imported file.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUIUtility.IconContent(System.String,System.String)">
			<summary>Fetch the GUIContent from the Unity builtin resources with the given name.</summary>
		</member>
		<member name="T:UnityEditor.PhysicsDebugWindow">
			<summary>Displays the Physics Debug Visualization options.The Physics Debug Visualization is only displayed if this window is visible.See Also: PhysicsVisualizationSettings.</summary>
		</member>
		<member name="F:UnityEditor.TakeInfo.defaultClipName">
			<summary>This is the default clip name for the clip generated for this take.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUIUtility.ObjectContent(UnityEngine.Object,System.Type)">
			<summary>Return a GUIContent object with the name and icon of an Object.</summary>
		</member>
		<member name="F:UnityEditor.TakeInfo.startTime">
			<summary>Start time in second.</summary>
		</member>
		<member name="T:UnityEditor.SceneView">
			<summary>Use this class to manage SceneView settings, change the SceneView camera properties, subscribe to events, call SceneView methods, and render open scenes.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUIUtility.HasObjectThumbnail(System.Type)">
			<summary>Does a given class have per-object thumbnails?</summary>
		</member>
		<member name="F:UnityEditor.TakeInfo.stopTime">
			<summary>Stop time in second.</summary>
		</member>
		<member name="M:UnityEditor.VideoClipImporter.GetPreviewTexture()">
			<summary></summary>
		</member>
		<member name="M:UnityEditor.EditorGUIUtility.GetIconSize()">
			<summary>Get the size that has been set using SetIconSize.</summary>
		</member>
		<member name="F:UnityEditor.TakeInfo.bakeStartTime">
			<summary>Start time in second.</summary>
		</member>
		<member name="F:UnityEditor.SceneView.m_AudioPlay">
			<summary>M_AudioPlay has been deprecated. Use audioPlay instead (UnityUpgradable) -&gt; audioPlay.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.DelayedFloatField(UnityEngine.GUIContent,System.Single,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
			<summary>Make a delayed text field for entering floats.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.DelayedFloatField(UnityEditor.SerializedProperty,UnityEngine.GUILayoutOption[])">
			<summary>Make a delayed text field for entering floats.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUIUtility.GetBuiltinSkin(UnityEditor.EditorSkin)">
			<summary>Get one of the built-in GUI skins, which can be the game view, inspector or Scene view skin as chosen by the parameter.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUIUtility.LoadRequired(System.String)">
			<summary>Load a required built-in resource.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUIUtility.Load(System.String)">
			<summary>Load a built-in resource.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUIUtility.PingObject(UnityEngine.Object)">
			<summary>Ping an object in the Scene like clicking it in an inspector.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUIUtility.PingObject(System.Int32)">
			<summary>Ping an object in the Scene like clicking it in an inspector.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUIUtility.RenderGameViewCameras(UnityEngine.Rect,System.Boolean,System.Boolean)">
			<summary>Render all ingame cameras.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUIUtility.RenderGameViewCameras(UnityEngine.Rect,UnityEngine.Rect,System.Boolean,System.Boolean)">
			<summary>Render all ingame cameras.</summary>
		</member>
		<member name="F:UnityEditor.TakeInfo.bakeStopTime">
			<summary>Stop time in second.</summary>
		</member>
		<member name="F:UnityEditor.SceneView.m_RenderMode">
			<summary>M_RenderMode has been deprecated. Use cameraMode instead.</summary>
		</member>
		<member name="T:UnityEditor.TextureImporterCubemapConvolution">
			<summary>Defines Cubemap convolution mode.</summary>
		</member>
		<member name="T:UnityEditor.TextureImporterRGBMMode">
			<summary>RGBM encoding mode for HDR textures in TextureImporter.</summary>
		</member>
		<member name="F:UnityEditor.TakeInfo.sampleRate">
			<summary>Sample rate of the take.</summary>
		</member>
		<member name="F:UnityEditor.SceneView.m_ValidateTrueMetals">
			<summary>M_ValidateTrueMetals has been deprecated. Use validateTrueMetals instead (UnityUpgradable) -&gt; validateTrueMetals.</summary>
		</member>
		<member name="T:UnityEditor.ModelImporter">
			<summary>Model importer lets you modify model import settings from editor scripts.</summary>
		</member>
		<member name="P:UnityEditor.ModelImporter.generateMaterials">
			<summary>Material generation options.</summary>
		</member>
		<member name="P:UnityEditor.SceneView.lastActiveSceneView">
			<summary>The SceneView that was most recently in focus.</summary>
		</member>
		<member name="M:UnityEditor.VideoClipImporter.GetResizeModeName(UnityEditor.VideoResizeMode)">
			<summary>Get the full name of the resize operation for the specified resize mode.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.Slider(UnityEngine.Rect,UnityEngine.GUIContent,System.Single,System.Single,System.Single,System.Single,System.Single)">
			<summary>Makes a slider the user can drag to change a value between a min and a max.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.Slider(UnityEngine.Rect,UnityEditor.SerializedProperty,System.Single,System.Single)">
			<summary>Makes a slider the user can drag to change a value between a min and a max.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.Slider(UnityEngine.Rect,UnityEditor.SerializedProperty,System.Single,System.Single,System.String)">
			<summary>Makes a slider the user can drag to change a value between a min and a max.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.Slider(UnityEngine.Rect,UnityEditor.SerializedProperty,System.Single,System.Single,UnityEngine.GUIContent)">
			<summary>Makes a slider the user can drag to change a value between a min and a max.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.Slider(UnityEngine.Rect,UnityEditor.SerializedProperty,System.Single,System.Single,System.Single,System.Single,UnityEngine.GUIContent)">
			<summary>Makes a slider the user can drag to change a value between a min and a max.</summary>
		</member>
		<member name="M:UnityEditor.VideoClipImporter.GetResizeWidth(UnityEditor.VideoResizeMode)">
			<summary>Get the resulting width of the resize operation for the specified resize mode.</summary>
		</member>
		<member name="P:UnityEditor.SceneView.currentDrawingSceneView">
			<summary>The SceneView that is being drawn.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.IntSlider(UnityEngine.Rect,System.Int32,System.Int32,System.Int32)">
			<summary>Makes a slider the user can drag to change an integer value between a min and a max.</summary>
		</member>
		<member name="M:UnityEditor.VideoClipImporter.GetResizeHeight(UnityEditor.VideoResizeMode)">
			<summary>Get the resulting height of the resize operation for the specified resize mode.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.IntSlider(UnityEngine.Rect,System.String,System.Int32,System.Int32,System.Int32)">
			<summary>Makes a slider the user can drag to change an integer value between a min and a max.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.IntSlider(UnityEngine.Rect,UnityEngine.GUIContent,System.Int32,System.Int32,System.Int32)">
			<summary>Makes a slider the user can drag to change an integer value between a min and a max.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.IntSlider(UnityEngine.Rect,UnityEditor.SerializedProperty,System.Int32,System.Int32)">
			<summary>Makes a slider the user can drag to change an integer value between a min and a max.</summary>
		</member>
		<member name="M:UnityEditor.VideoClipImporter.GetSourceAudioChannelCount(System.UInt16)">
			<summary>Number of audio channels in the specified source track.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.IntSlider(UnityEngine.Rect,UnityEditor.SerializedProperty,System.Int32,System.Int32,System.String)">
			<summary>Makes a slider the user can drag to change an integer value between a min and a max.</summary>
		</member>
		<member name="T:UnityEditor.CameraEditor">
			<summary>Unity Camera Editor.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.IntSlider(UnityEngine.Rect,UnityEditor.SerializedProperty,System.Int32,System.Int32,UnityEngine.GUIContent)">
			<summary>Makes a slider the user can drag to change an integer value between a min and a max.</summary>
		</member>
		<member name="M:UnityEditor.VideoClipImporter.GetSourceAudioSampleRate(System.UInt16)">
			<summary>Sample rate of the specified audio track.</summary>
		</member>
		<member name="P:UnityEditor.ModelImporter.importMaterials">
			<summary>Import materials from file.</summary>
		</member>
		<member name="M:UnityEditor.VideoClipImporter.Equals(UnityEditor.VideoClipImporter)">
			<summary>Performs a value comparison with another VideoClipImporter.</summary>
		</member>
		<member name="P:UnityEditor.SceneView.drawGizmos">
			<summary>Sets the visibility of all Gizmos in the Scene view.</summary>
		</member>
		<member name="M:UnityEditor.EditorUtility.UpdateGlobalShaderProperties(System.Single)">
			<summary>Updates the global shader properties to use when rendering.</summary>
		</member>
		<member name="T:UnityEditor.MeshOptimizationFlags">
			<summary>Options to control the optimization of mesh data during asset import.</summary>
		</member>
		<member name="P:UnityEditor.SceneView.sceneLighting">
			<summary>Whether lighting is enabled or disabled in the Scene view.</summary>
		</member>
		<member name="P:UnityEditor.EditorUserBuildSettings.forceInstallation">
			<summary>Force installation of package, even if error.</summary>
		</member>
		<member name="M:UnityEditor.EditorUtility.GetDirtyCount(System.Int32)">
			<summary>Returns an integer that indicates the number of times the specified object's serialized properties have changed.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUIUtility.LookLikeControls(System.Single,System.Single)">
			<summary>Make all EditorGUI look like regular controls.</summary>
		</member>
		<member name="M:UnityEditor.EditorUtility.GetDirtyCount(UnityEngine.Object)">
			<summary>Returns an integer that indicates the number of times the specified object's serialized properties have changed.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUIUtility.LookLikeControls(System.Single)">
			<summary>Make all EditorGUI look like regular controls.</summary>
		</member>
		<member name="M:UnityEditor.EditorUtility.IsDirty(System.Int32)">
			<summary>Gets a boolean value that indicates whether the specified object has changed since the last time it was saved.</summary>
		</member>
		<member name="P:UnityEditor.Tools.visibleLayers">
			<summary>Which layers are visible in the Scene view.</summary>
		</member>
		<member name="M:UnityEditor.EditorUtility.IsDirty(UnityEngine.Object)">
			<summary>Gets a boolean value that indicates whether the specified object has changed since the last time it was saved.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.DelayedFloatField(UnityEditor.SerializedProperty,UnityEngine.GUIContent,UnityEngine.GUILayoutOption[])">
			<summary>Make a delayed text field for entering floats.</summary>
		</member>
		<member name="M:UnityEditor.PrefabUtility.GetPrefabObject(UnityEngine.Object)">
			<summary>Retrieves the enclosing Prefab for any object contained within.</summary>
		</member>
		<member name="P:UnityEditor.EditorStyles.standardFont">
			<summary>Standard font.</summary>
		</member>
		<member name="P:UnityEditor.EditorUserBuildSettings.movePackageToDiscOuterEdge">
			<summary>Places the package on the outer edge of the disk.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.DoubleField(System.Double,UnityEngine.GUILayoutOption[])">
			<summary>Make a text field for entering double values.</summary>
		</member>
		<member name="P:UnityEditor.EditorUserBuildSettings.compressFilesInPackage">
			<summary>Compress files in package.</summary>
		</member>
		<member name="M:UnityEditor.PrefabUtility.GetPrefabInstanceHandle(UnityEngine.Object)">
			<summary>This function will give you the PrefabInstance object for the outermost Prefab instance the provided object is part of.</summary>
		</member>
		<member name="P:UnityEditor.EditorStyles.boldFont">
			<summary>Bold font.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.DoubleField(System.Double,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
			<summary>Make a text field for entering double values.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.DoubleField(System.String,System.Double,UnityEngine.GUILayoutOption[])">
			<summary>Make a text field for entering double values.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.DoubleField(System.String,System.Double,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
			<summary>Make a text field for entering double values.</summary>
		</member>
		<member name="P:UnityEditor.EditorUserBuildSettings.enableHeadlessMode">
			<summary>Enables a Linux headless build.</summary>
		</member>
		<member name="P:UnityEditor.EditorStyles.miniFont">
			<summary>Mini font.</summary>
		</member>
		<member name="M:UnityEditor.PrefabUtility.GetPropertyModifications(UnityEngine.Object)">
			<summary>Extract all modifications that are applied to the Prefab instance compared to the parent Prefab.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.DoubleField(UnityEngine.GUIContent,System.Double,UnityEngine.GUILayoutOption[])">
			<summary>Make a text field for entering double values.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.DoubleField(UnityEngine.GUIContent,System.Double,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
			<summary>Make a text field for entering double values.</summary>
		</member>
		<member name="P:UnityEditor.EditorUserBuildSettings.buildScriptsOnly">
			<summary>Is build script only enabled.</summary>
		</member>
		<member name="P:UnityEditor.EditorStyles.miniBoldFont">
			<summary>Mini Bold font.</summary>
		</member>
		<member name="M:UnityEditor.PrefabUtility.SetPropertyModifications(UnityEngine.Object,UnityEditor.PropertyModification[])">
			<summary>Assigns all modifications that are applied to the Prefab instance compared to the parent Prefab.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.DelayedDoubleField(System.Double,UnityEngine.GUILayoutOption[])">
			<summary>Make a delayed text field for entering doubles.</summary>
		</member>
		<member name="P:UnityEditor.EditorUserBuildSettings.xboxBuildSubtarget">
			<summary>Xbox Build subtarget.</summary>
		</member>
		<member name="P:UnityEditor.EditorStyles.toolbar">
			<summary>Toolbar background from top of windows.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.DelayedDoubleField(System.Double,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
			<summary>Make a delayed text field for entering doubles.</summary>
		</member>
		<member name="M:UnityEditor.PrefabUtility.HasPrefabInstanceAnyOverrides(UnityEngine.GameObject,System.Boolean)">
			<summary>Returns true if the given Prefab instance has any overrides.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.DelayedDoubleField(System.String,System.Double,UnityEngine.GUILayoutOption[])">
			<summary>Make a delayed text field for entering doubles.</summary>
		</member>
		<member name="P:UnityEditor.EditorUserBuildSettings.streamingInstallLaunchRange">
			<summary>When building an Xbox One Streaming Install package (makepkg.exe) The layout generation code in Unity will assign each Scene and associated assets to individual chunks. Unity will mark Scene 0 as being part of the launch range, IE the set of chunks required to launch the game, you may include additional Scenes in this launch range if you desire, this specifies a range of Scenes (starting at 0) to be included in the launch set.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.DelayedDoubleField(System.String,System.Double,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
			<summary>Make a delayed text field for entering doubles.</summary>
		</member>
		<member name="P:UnityEditor.EditorStyles.toolbarButton">
			<summary>Style for Button and Toggles in toolbars.</summary>
		</member>
		<member name="M:UnityEditor.PrefabUtility.InstantiateAttachedAsset(UnityEngine.Object)">
			<summary>Instantiate an asset that is referenced by a Prefab and use it on the Prefab instance.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.DelayedDoubleField(UnityEngine.GUIContent,System.Double,UnityEngine.GUILayoutOption[])">
			<summary>Make a delayed text field for entering doubles.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.DelayedDoubleField(UnityEngine.GUIContent,System.Double,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
			<summary>Make a delayed text field for entering doubles.</summary>
		</member>
		<member name="P:UnityEditor.EditorStyles.toolbarPopup">
			<summary>Toolbar Popup.</summary>
		</member>
		<member name="P:UnityEditor.EditorUserBuildSettings.xboxOneDeployMethod">
			<summary>The currently selected Xbox One Deploy Method.</summary>
		</member>
		<member name="M:UnityEditor.PrefabUtility.RecordPrefabInstancePropertyModifications(UnityEngine.Object)">
			<summary>Causes modifications made to the Prefab instance to be recorded.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.IntField(System.Int32,UnityEngine.GUILayoutOption[])">
			<summary>Make a text field for entering integers.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.IntField(System.Int32,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
			<summary>Make a text field for entering integers.</summary>
		</member>
		<member name="P:UnityEditor.EditorStyles.toolbarDropDown">
			<summary>Toolbar Dropdown.</summary>
		</member>
		<member name="P:UnityEditor.EditorUserBuildSettings.xboxOneDeployDrive">
			<summary>The currently selected Xbox One Deploy Drive.</summary>
		</member>
		<member name="M:UnityEditor.PrefabUtility.MergeAllPrefabInstances(UnityEngine.Object)">
			<summary>Force re-merging all Prefab instances of this Prefab.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.IntField(System.String,System.Int32,UnityEngine.GUILayoutOption[])">
			<summary>Make a text field for entering integers.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.IntField(System.String,System.Int32,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
			<summary>Make a text field for entering integers.</summary>
		</member>
		<member name="M:UnityEditor.EditorUtility.FocusProjectWindow()">
			<summary>Brings the project window to the front and focuses it.</summary>
		</member>
		<member name="M:UnityEditor.EditorUtility.CompressTexture(UnityEngine.Texture2D,UnityEngine.TextureFormat,UnityEditor.TextureCompressionQuality)">
			<summary>Compress a texture.</summary>
		</member>
		<member name="M:UnityEditor.EditorUtility.CompressCubemapTexture(UnityEngine.Cubemap,UnityEngine.TextureFormat,UnityEditor.TextureCompressionQuality)">
			<summary>Compress a cubemap texture.</summary>
		</member>
		<member name="M:UnityEditor.EditorUtility.SaveFilePanelInProject(System.String,System.String,System.String,System.String)">
			<summary>Displays the "save file" dialog in the Assets folder of the project and returns the selected path name.</summary>
		</member>
		<member name="M:UnityEditor.EditorUtility.SaveFilePanelInProject(System.String,System.String,System.String,System.String,System.String)">
			<summary>Displays the "save file" dialog in the Assets folder of the project and returns the selected path name.</summary>
		</member>
		<member name="M:UnityEditor.EditorUtility.CopySerializedIfDifferent(UnityEngine.Object,UnityEngine.Object)">
			<summary>Copy all settings of a Unity Object to a second Object if they differ.</summary>
		</member>
		<member name="M:UnityEditor.PrefabUtility.DisconnectPrefabInstance(UnityEngine.Object)">
			<summary>Deprecated. As of 2018.3 this method does nothing.</summary>
		</member>
		<member name="M:UnityEditor.EditorUtility.UnloadUnusedAssetsImmediate()">
			<summary>Unloads assets that are not used.</summary>
		</member>
		<member name="M:UnityEditor.EditorUtility.UnloadUnusedAssetsImmediate(System.Boolean)">
			<summary>Unloads assets that are not used.</summary>
		</member>
		<member name="T:UnityEditor.CustomEditor">
			<summary>Tells an Editor class which run-time type it's an editor for.</summary>
		</member>
		<member name="M:UnityEditor.EditorUtility.DisplayPopupMenu(UnityEngine.Rect,System.String,UnityEditor.MenuCommand)">
			<summary>Displays a popup menu.</summary>
		</member>
		<member name="P:UnityEditor.CustomEditor.isFallback">
			<summary>If true, match this editor only if all non-fallback editors do not match. Defaults to false.</summary>
		</member>
		<member name="M:UnityEditor.EditorUtility.FormatBytes(System.Int32)">
			<summary>Returns a text for a number of bytes.</summary>
		</member>
		<member name="M:UnityEditor.PrefabUtility.UnpackPrefabInstanceAndReturnNewOutermostRoots(UnityEngine.GameObject,UnityEditor.PrefabUnpackMode)">
			<summary>This function will unpack the given Prefab instance using the behaviour specified by unpackMode.</summary>
		</member>
		<member name="P:UnityEditor.EditorStyles.toolbarTextField">
			<summary>Toolbar text field.</summary>
		</member>
		<member name="M:UnityEditor.EditorUtility.SetSelectedWireframeHidden(UnityEngine.Renderer,System.Boolean)">
			<summary>Sets whether the selected Renderer's wireframe will be hidden when the GameObject it is attached to is selected.</summary>
		</member>
		<member name="T:UnityEditor.CustomPreviewAttribute">
			<summary>Adds an extra preview in the Inspector for the specified type.</summary>
		</member>
		<member name="M:UnityEditor.PrefabUtility.LoadPrefabContentsIntoPreviewScene(System.String,UnityEngine.SceneManagement.Scene)">
			<summary>Loads a Prefab Asset at a given path into a given preview Scene and returns the root GameObject of the Prefab.</summary>
		</member>
		<member name="M:UnityEditor.EditorUtility.CreateGameObjectWithHideFlags(System.String,UnityEngine.HideFlags,System.Type[])">
			<summary>Creates a game object with HideFlags and specified components.</summary>
		</member>
		<member name="M:UnityEditor.PrefabUtility.ConnectGameObjectToPrefab(UnityEngine.GameObject,UnityEngine.GameObject)">
			<summary>Connects the source Prefab to the game object.</summary>
		</member>
		<member name="T:UnityEditor.ObjectPreview">
			<summary>Base Class to derive from when creating Custom Previews.</summary>
		</member>
		<member name="M:UnityEditor.PrefabUtility.FindRootGameObjectWithSameParentPrefab(UnityEngine.GameObject)">
			<summary>Returns the topmost GameObject that has the same Prefab parent as target.</summary>
		</member>
		<member name="P:UnityEditor.ObjectPreview.target">
			<summary>The object currently being previewed.</summary>
		</member>
		<member name="M:UnityEditor.PrefabUtility.FindValidUploadPrefabInstanceRoot(UnityEngine.GameObject)">
			<summary>Returns the root GameObject of the Prefab instance if that root Prefab instance is a parent of the Prefab.</summary>
		</member>
		<member name="T:UnityEditor.EditorSelectedRenderState">
			<summary>The editor selected render mode for Scene View selection.</summary>
		</member>
		<member name="M:UnityEditor.ObjectPreview.Initialize(UnityEngine.Object[])">
			<summary>Called when the Preview gets created with the objects being previewed.</summary>
		</member>
		<member name="M:UnityEditor.PrefabUtility.ReconnectToLastPrefab(UnityEngine.GameObject)">
			<summary>Connects the game object to the Prefab that it was last connected to.</summary>
		</member>
		<member name="T:UnityEditor.InteractionMode">
			<summary>The mode of interaction, user or automated, that an API method is called with.</summary>
		</member>
		<member name="M:UnityEditor.ObjectPreview.MoveNextTarget()">
			<summary>Called to iterate through the targets, this will be used when previewing more than one target.</summary>
		</member>
		<member name="M:UnityEditor.PrefabUtility.ResetToPrefabState(UnityEngine.Object)">
			<summary>Resets the properties of the component or game object to the parent Prefab state.</summary>
		</member>
		<member name="M:UnityEditor.ObjectPreview.ResetTarget()">
			<summary>Called to Reset the target before iterating through them.</summary>
		</member>
		<member name="T:UnityEditor.TextureCompressionQuality">
			<summary>Compression Quality.</summary>
		</member>
		<member name="M:UnityEditor.PrefabUtility.IsAddedComponentOverride(UnityEngine.Object)">
			<summary>Is this component added to a Prefab instance as an override?</summary>
		</member>
		<member name="P:UnityEditor.EditorUserBuildSettings.xboxOneUsername">
			<summary>Windows account username associated with PC share folder.</summary>
		</member>
		<member name="M:UnityEditor.ObjectPreview.HasPreviewGUI()">
			<summary>Can this component be Previewed in its current state?</summary>
		</member>
		<member name="M:UnityEditor.PrefabUtility.RevertPrefabInstance(UnityEngine.GameObject)">
			<summary>Reverts all overrides on a Prefab instance.</summary>
		</member>
		<member name="T:UnityEditor.SceneAsset">
			<summary>SceneAsset is used to reference Scene objects in the Editor.</summary>
		</member>
		<member name="P:UnityEditor.EditorStyles.inspectorDefaultMargins">
			<summary>Wrap content in a vertical group with this style to get the default margins used in the Inspector.</summary>
		</member>
		<member name="M:UnityEditor.ObjectPreview.GetPreviewTitle()">
			<summary>Override this method if you want to change the label of the Preview area.</summary>
		</member>
		<member name="M:UnityEditor.PrefabUtility.FindPrefabRoot(UnityEngine.GameObject)">
			<summary>Returns the root GameObject of the Prefab that the supplied GameObject is part of.</summary>
		</member>
		<member name="T:UnityEditor.EditorWindow">
			<summary>Derive from this class to create an editor window.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.IntField(UnityEngine.GUIContent,System.Int32,UnityEngine.GUILayoutOption[])">
			<summary>Make a text field for entering integers.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.IntField(UnityEngine.GUIContent,System.Int32,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
			<summary>Make a text field for entering integers.</summary>
		</member>
		<member name="P:UnityEditor.EditorUserBuildSettings.xboxOneNetworkSharePath">
			<summary>Network shared folder path e.g. MYCOMPUTER\SHAREDFOLDER\.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.DelayedIntField(System.Int32,UnityEngine.GUILayoutOption[])">
			<summary>Make a delayed text field for entering integers.</summary>
		</member>
		<member name="P:UnityEditor.EditorUserBuildSettings.xboxOneRebootIfDeployFailsAndRetry">
			<summary>Sets the XBox to reboot and redeploy when the deployment fails.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.DelayedIntField(System.Int32,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
			<summary>Make a delayed text field for entering integers.</summary>
		</member>
		<member name="P:UnityEditor.EditorUserBuildSettings.androidBuildSubtarget">
			<summary>Android platform options.</summary>
		</member>
		<member name="M:UnityEditor.PrefabUtility.IsPartOfAnyPrefab(UnityEngine.Object)">
			<summary>Returns true if the given object is part of any kind of Prefab.</summary>
		</member>
		<member name="P:UnityEditor.EditorUserBuildSettings.androidETC2Fallback">
			<summary>ETC2 texture decompression fallback on Android devices that don't support ETC2.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.DelayedIntField(System.String,System.Int32,UnityEngine.GUILayoutOption[])">
			<summary>Make a delayed text field for entering integers.</summary>
		</member>
		<member name="P:UnityEditor.EditorUserBuildSettings.androidUseLegacySdkTools">
			<summary>Use deprecated Android SDK tools to pack application.</summary>
		</member>
		<member name="M:UnityEditor.PrefabUtility.IsPartOfPrefabAsset(UnityEngine.Object)">
			<summary>Returns true if the given object is part of a Prefab Asset.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.DelayedIntField(System.String,System.Int32,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
			<summary>Make a delayed text field for entering integers.</summary>
		</member>
		<member name="P:UnityEditor.EditorUserBuildSettings.wsaSubtarget">
			<summary>Sets and gets target device type for the application to run on when building to Windows Store platform.</summary>
		</member>
		<member name="M:UnityEditor.PrefabUtility.IsPartOfPrefabInstance(UnityEngine.Object)">
			<summary>Returns true if the given object is part of a Prefab instance.</summary>
		</member>
		<member name="M:UnityEditor.PrefabUtility.IsPartOfNonAssetPrefabInstance(UnityEngine.Object)">
			<summary>Returns true if the given object is part of a Prefab instance and not part of an asset.</summary>
		</member>
		<member name="P:UnityEditor.EditorUserBuildSettings.wsaUWPSDK">
			<summary>Sets and gets target UWP SDK to build Windows Store application against.</summary>
		</member>
		<member name="P:UnityEditor.EditorWindow.rootVisualElement">
			<summary>Retrieves the root visual element of this window hierarchy.</summary>
		</member>
		<member name="M:UnityEditor.PrefabUtility.IsPartOfRegularPrefab(UnityEngine.Object)">
			<summary>Returns true if the given object is part of a regular Prefab instance or Prefab Asset.</summary>
		</member>
		<member name="P:UnityEditor.EditorUserBuildSettings.wsaUWPVisualStudioVersion">
			<summary>Sets and gets Visual Studio version to build Windows Store application with.</summary>
		</member>
		<member name="M:UnityEditor.PrefabUtility.IsPartOfModelPrefab(UnityEngine.Object)">
			<summary>Returns true if the given object is part of a Model Prefab Asset or Model Prefab instance.</summary>
		</member>
		<member name="P:UnityEditor.EditorUserBuildSettings.activeBuildTarget">
			<summary>The currently active build target.</summary>
		</member>
		<member name="P:UnityEditor.EditorWindow.wantsMouseMove">
			<summary>Checks whether MouseMove events are received in the GUI in this Editor window.</summary>
		</member>
		<member name="M:UnityEditor.PrefabUtility.IsPartOfVariantPrefab(UnityEngine.Object)">
			<summary>Returns true if the given object is part of a Prefab Variant Asset or Prefab Variant instance.</summary>
		</member>
		<member name="P:UnityEditor.EditorUserBuildSettings.activeScriptCompilationDefines">
			<summary>DEFINE directives for the compiler.</summary>
		</member>
		<member name="P:UnityEditor.EditorWindow.wantsMouseEnterLeaveWindow">
			<summary>Checks whether MouseEnterWindow and MouseLeaveWindow events are received in the GUI in this Editor window.</summary>
		</member>
		<member name="M:UnityEditor.PrefabUtility.IsPartOfImmutablePrefab(UnityEngine.Object)">
			<summary>Is this object part of a Prefab that cannot be edited?</summary>
		</member>
		<member name="P:UnityEditor.EditorUserBuildSettings.development">
			<summary>Enables a development build.</summary>
		</member>
		<member name="P:UnityEditor.EditorWindow.autoRepaintOnSceneChange">
			<summary>Does the window automatically repaint whenever the Scene has changed?</summary>
		</member>
		<member name="M:UnityEditor.PrefabUtility.IsDisconnectedFromPrefabAsset(UnityEngine.Object)">
			<summary>Returns true if the given object is part of an instance where the PrefabInstance object is missing but the given object has a valid corresponding object.</summary>
		</member>
		<member name="P:UnityEditor.EditorUserBuildSettings.webGLUsePreBuiltUnityEngine">
			<summary>Use prebuilt JavaScript version of Unity engine.</summary>
		</member>
		<member name="P:UnityEditor.EditorWindow.maximized">
			<summary>Is this window maximized?</summary>
		</member>
		<member name="M:UnityEditor.PrefabUtility.IsPrefabAssetMissing(UnityEngine.Object)">
			<summary>Returns true if the given object is part of a Prefab instance but the source asset is missing.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.DelayedIntField(UnityEngine.GUIContent,System.Int32,UnityEngine.GUILayoutOption[])">
			<summary>Make a delayed text field for entering integers.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUIUtility.LookLikeControls()">
			<summary>Make all EditorGUI look like regular controls.</summary>
		</member>
		<member name="P:UnityEditor.CameraEditor.Settings UnityEditor.CameraEditor.settings">
			<summary>Settings for the camera editor.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.DelayedIntField(UnityEngine.GUIContent,System.Int32,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
			<summary>Make a delayed text field for entering integers.</summary>
		</member>
		<member name="M:UnityEditor.PrefabUtility.GetOutermostPrefabInstanceRoot(UnityEngine.Object)">
			<summary>Returns the GameObject that is the root of the outermost Prefab instance the object is part of.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.DelayedIntField(UnityEditor.SerializedProperty,UnityEngine.GUILayoutOption[])">
			<summary>Make a delayed text field for entering integers.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.DelayedIntField(UnityEditor.SerializedProperty,UnityEngine.GUIContent,UnityEngine.GUILayoutOption[])">
			<summary>Make a delayed text field for entering integers.</summary>
		</member>
		<member name="M:UnityEditor.PrefabUtility.GetNearestPrefabInstanceRoot(UnityEngine.Object)">
			<summary>Return the GameObject that is the root of the nearest Prefab instance the object is part of.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.LongField(System.Int64,UnityEngine.GUILayoutOption[])">
			<summary>Make a text field for entering long integers.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.LongField(System.Int64,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
			<summary>Make a text field for entering long integers.</summary>
		</member>
		<member name="M:UnityEditor.PrefabUtility.IsDefaultOverride(UnityEditor.PropertyModification)">
			<summary>Returns true if the given modification is considered a default override.</summary>
		</member>
		<member name="M:UnityEditor.CameraEditor.OnEnable()">
			<summary>See ScriptableObject.OnEnable.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.LongField(System.String,System.Int64,UnityEngine.GUILayoutOption[])">
			<summary>Make a text field for entering long integers.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.LongField(System.String,System.Int64,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
			<summary>Make a text field for entering long integers.</summary>
		</member>
		<member name="M:UnityEditor.PrefabUtility.RevertPrefabInstance(UnityEngine.GameObject,UnityEditor.InteractionMode)">
			<summary>Reverts all overrides on a Prefab instance.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.LongField(UnityEngine.GUIContent,System.Int64,UnityEngine.GUILayoutOption[])">
			<summary>Make a text field for entering long integers.</summary>
		</member>
		<member name="M:UnityEditor.CameraEditor.OnDestroy()">
			<summary>See ScriptableObject.OnDestroy.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.LongField(UnityEngine.GUIContent,System.Int64,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
			<summary>Make a text field for entering long integers.</summary>
		</member>
		<member name="M:UnityEditor.PrefabUtility.ApplyPrefabInstance(UnityEngine.GameObject,UnityEditor.InteractionMode)">
			<summary>Applies all overrides on a Prefab instance to its Prefab Asset.</summary>
		</member>
		<member name="M:UnityEditor.CameraEditor.OnInspectorGUI()">
			<summary>See Editor.OnInspectorGUI.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.Slider(System.Single,System.Single,System.Single,UnityEngine.GUILayoutOption[])">
			<summary>Make a slider the user can drag to change a value between a min and a max.</summary>
		</member>
		<member name="M:UnityEditor.PrefabUtility.ApplyPropertyOverride(UnityEditor.SerializedProperty,System.String,UnityEditor.InteractionMode)">
			<summary>Applies a single overridden property on a Prefab instance to the Prefab Asset at the given asset path.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.Slider(System.String,System.Single,System.Single,System.Single,UnityEngine.GUILayoutOption[])">
			<summary>Make a slider the user can drag to change a value between a min and a max.</summary>
		</member>
		<member name="M:UnityEditor.CameraEditor.OnSceneGUI()">
			<summary>See Editor.OnSceneGUI.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.Slider(UnityEngine.GUIContent,System.Single,System.Single,System.Single,UnityEngine.GUILayoutOption[])">
			<summary>Make a slider the user can drag to change a value between a min and a max.</summary>
		</member>
		<member name="M:UnityEditor.PrefabUtility.RevertPropertyOverride(UnityEditor.SerializedProperty,UnityEditor.InteractionMode)">
			<summary>Revert a single property override on a Prefab instance.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.Slider(UnityEngine.GUIContent,System.Single,System.Single,System.Single,System.Single,System.Single,UnityEngine.GUILayoutOption[])">
			<summary>Make a slider the user can drag to change a value between a min and a max.</summary>
		</member>
		<member name="T:UnityEditor.CameraEditor.Settings">
			<summary>Contains all drawable elements of the CameraEditor.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.Slider(UnityEditor.SerializedProperty,System.Single,System.Single,UnityEngine.GUILayoutOption[])">
			<summary>Make a slider the user can drag to change a value between a min and a max.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.Slider(UnityEditor.SerializedProperty,System.Single,System.Single,System.String,UnityEngine.GUILayoutOption[])">
			<summary>Make a slider the user can drag to change a value between a min and a max.</summary>
		</member>
		<member name="M:UnityEditor.PrefabUtility.ApplyObjectOverride(UnityEngine.Object,System.String,UnityEditor.InteractionMode)">
			<summary>Applies all overridden properties on a Prefab instance component or GameObject to the Prefab Asset at the given asset path.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.Slider(UnityEditor.SerializedProperty,System.Single,System.Single,UnityEngine.GUIContent,UnityEngine.GUILayoutOption[])">
			<summary>Make a slider the user can drag to change a value between a min and a max.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.Slider(UnityEditor.SerializedProperty,System.Single,System.Single,System.Single,System.Single,UnityEngine.GUIContent,UnityEngine.GUILayoutOption[])">
			<summary>Make a slider the user can drag to change a value between a min and a max.</summary>
		</member>
		<member name="M:UnityEditor.PrefabUtility.RevertObjectOverride(UnityEngine.Object,UnityEditor.InteractionMode)">
			<summary>Reverts all overridden properties on a Prefab instance component or GameObject.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.IntSlider(System.Int32,System.Int32,System.Int32,UnityEngine.GUILayoutOption[])">
			<summary>Make a slider the user can drag to change an integer value between a min and a max.</summary>
		</member>
		<member name="M:UnityEditor.PrefabUtility.ApplyAddedComponent(UnityEngine.Component,System.String,UnityEditor.InteractionMode)">
			<summary>Applies the added component to the Prefab Asset at the given asset path.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.IntSlider(System.String,System.Int32,System.Int32,System.Int32,UnityEngine.GUILayoutOption[])">
			<summary>Make a slider the user can drag to change an integer value between a min and a max.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.IntSlider(UnityEngine.GUIContent,System.Int32,System.Int32,System.Int32,UnityEngine.GUILayoutOption[])">
			<summary>Make a slider the user can drag to change an integer value between a min and a max.</summary>
		</member>
		<member name="M:UnityEditor.ObjectPreview.OnPreviewGUI(UnityEngine.Rect,UnityEngine.GUIStyle)">
			<summary>Implement to create your own custom preview for the preview area of the inspector, primary editor headers and the object selector.</summary>
		</member>
		<member name="M:UnityEditor.PrefabUtility.RevertAddedComponent(UnityEngine.Component,UnityEditor.InteractionMode)">
			<summary>Removes this added component on a Prefab instance.</summary>
		</member>
		<member name="T:UnityEditor.CameraEditorUtils">
			<summary>Utilities for cameras.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.IntSlider(UnityEditor.SerializedProperty,System.Int32,System.Int32,UnityEngine.GUILayoutOption[])">
			<summary>Make a slider the user can drag to change an integer value between a min and a max.</summary>
		</member>
		<member name="M:UnityEditor.CameraEditorUtils.HandleFrustum(UnityEngine.Camera,System.Int32)">
			<summary>Draw the frustrum handles for a camera.</summary>
		</member>
		<member name="M:UnityEditor.PrefabUtility.ApplyRemovedComponent(UnityEngine.GameObject,UnityEngine.Component,UnityEditor.InteractionMode)">
			<summary>Removes the component from the Prefab Asset which has the component on it.</summary>
		</member>
		<member name="M:UnityEditor.ObjectPreview.OnInteractivePreviewGUI(UnityEngine.Rect,UnityEngine.GUIStyle)">
			<summary>Implement to create your own interactive custom preview. Interactive custom previews are used in the preview area of the inspector and the object selector.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.IntSlider(UnityEditor.SerializedProperty,System.Int32,System.Int32,System.String,UnityEngine.GUILayoutOption[])">
			<summary>Make a slider the user can drag to change an integer value between a min and a max.</summary>
		</member>
		<member name="P:UnityEditor.ModelImporter.materialName">
			<summary>Material naming setting.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.MinMaxSlider(UnityEngine.GUIContent,UnityEngine.Rect,System.Single&,System.Single&,System.Single,System.Single)">
			<summary>Makes a special slider the user can use to specify a range between a min and a max.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.IntSlider(UnityEditor.SerializedProperty,System.Int32,System.Int32,UnityEngine.GUIContent,UnityEngine.GUILayoutOption[])">
			<summary>Make a slider the user can drag to change an integer value between a min and a max.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.MinMaxSlider(UnityEngine.Rect,System.String,System.Single&,System.Single&,System.Single,System.Single)">
			<summary>Makes a special slider the user can use to specify a range between a min and a max.</summary>
		</member>
		<member name="P:UnityEditor.EditorStyles.inspectorFullWidthMargins">
			<summary>Wrap content in a vertical group with this style to get full width margins in the Inspector.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.MinMaxSlider(UnityEngine.Rect,UnityEngine.GUIContent,System.Single&,System.Single&,System.Single,System.Single)">
			<summary>Makes a special slider the user can use to specify a range between a min and a max.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.MinMaxSlider(System.Single&,System.Single&,System.Single,System.Single,UnityEngine.GUILayoutOption[])">
			<summary>Make a special slider the user can use to specify a range between a min and a max.</summary>
		</member>
		<member name="P:UnityEditor.ModelImporter.materialSearch">
			<summary>Existing material search setting.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.MinMaxSlider(System.String,System.Single&,System.Single&,System.Single,System.Single,UnityEngine.GUILayoutOption[])">
			<summary>Make a special slider the user can use to specify a range between a min and a max.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.MinMaxSlider(UnityEngine.GUIContent,System.Single&,System.Single&,System.Single,System.Single,UnityEngine.GUILayoutOption[])">
			<summary>Make a special slider the user can use to specify a range between a min and a max.</summary>
		</member>
		<member name="P:UnityEditor.ModelImporter.materialLocation">
			<summary>Material import location options.</summary>
		</member>
		<member name="P:UnityEditor.EditorStyles.helpBox">
			<summary>Style used for background box for EditorGUI.HelpBox.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.Popup(System.Int32,System.String[],UnityEngine.GUILayoutOption[])">
			<summary>Make a generic popup selection field.</summary>
		</member>
		<member name="P:UnityEditor.ModelImporter.globalScale">
			<summary>Global scale factor for importing.</summary>
		</member>
		<member name="P:UnityEditor.EditorStyles.toolbarSearchField">
			<summary>Toolbar search field.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.Popup(System.Int32,System.String[],UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
			<summary>Make a generic popup selection field.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.Popup(System.Int32,UnityEngine.GUIContent[],UnityEngine.GUILayoutOption[])">
			<summary>Make a generic popup selection field.</summary>
		</member>
		<member name="P:UnityEditor.ModelImporter.isUseFileUnitsSupported">
			<summary>Is useFileUnits supported for this asset.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.Popup(System.Int32,UnityEngine.GUIContent[],UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
			<summary>Make a generic popup selection field.</summary>
		</member>
		<member name="T:UnityEditor.ClipAnimationMaskType">
			<summary>AnimationClip mask options for ModelImporterClipAnimation.</summary>
		</member>
		<member name="P:UnityEditor.ModelImporter.importVisibility">
			<summary>Use visibility properties to enable or disable MeshRenderer components.</summary>
		</member>
		<member name="P:UnityEditor.ModelImporter.useFileUnits">
			<summary>Detect file units and import as 1FileUnit=1UnityUnit, otherwise it will import as 1cm=1UnityUnit.</summary>
		</member>
		<member name="P:UnityEditor.ModelImporter.useFileScale">
			<summary>Use FileScale when importing.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.MinMaxSlider(UnityEngine.Rect,System.Single&,System.Single&,System.Single,System.Single)">
			<summary>Makes a special slider the user can use to specify a range between a min and a max.</summary>
		</member>
		<member name="T:UnityEditor.ClipAnimationInfoCurve">
			<summary>Stores a curve and its name that will be used to create additionnal curves during the import process.</summary>
		</member>
		<member name="P:UnityEditor.ModelImporter.isFileScaleUsed">
			<summary>Is FileScale used when importing.</summary>
		</member>
		<member name="F:UnityEditor.ClipAnimationInfoCurve.name">
			<summary>The name of the animation curve.</summary>
		</member>
		<member name="P:UnityEditor.ModelImporter.importBlendShapes">
			<summary>Controls import of BlendShapes.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.Popup(UnityEngine.Rect,UnityEngine.GUIContent,System.Int32,System.String[],UnityEngine.GUIStyle)">
			<summary>Makes a generic popup selection field.</summary>
		</member>
		<member name="F:UnityEditor.ClipAnimationInfoCurve.curve">
			<summary>The animation curve.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.Popup(UnityEngine.Rect,UnityEngine.GUIContent,System.Int32,System.String[])">
			<summary>Makes a generic popup selection field.</summary>
		</member>
		<member name="P:UnityEditor.ModelImporter.importCameras">
			<summary>Controls import of cameras. Basic properties like field of view, near plane distance and far plane distance can be animated.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.Popup(UnityEngine.Rect,UnityEditor.SerializedProperty,UnityEngine.GUIContent[],UnityEngine.GUIContent)">
			<summary>Makes a generic popup selection field.</summary>
		</member>
		<member name="T:UnityEditor.ModelImporterClipAnimation">
			<summary>Animation clips to split animation into.</summary>
		</member>
		<member name="P:UnityEditor.ModelImporter.importLights">
			<summary>Controls import of lights. Note that because light are defined differently in DCC tools, some light types or properties may not be exported. Basic properties like color and intensity can be animated.</summary>
		</member>
		<member name="P:UnityEditor.ModelImporterClipAnimation.takeName">
			<summary>Take name.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.EnumFlagsField(UnityEngine.Rect,System.Enum)">
			<summary>Displays a menu with an option for every value of the enum type when clicked. An option for the value 0 with name "Nothing" and an option for the value ~0 (that is, all bits set) with the name "Everything" are always displayed at the top of the menu. The names for the values 0 and ~0 can be overriden by defining these values in the enum type.</summary>
		</member>
		<member name="P:UnityEditor.ModelImporter.addCollider">
			<summary>Add mesh colliders to imported meshes.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.EnumFlagsField(UnityEngine.Rect,System.Enum,UnityEngine.GUIStyle)">
			<summary>Displays a menu with an option for every value of the enum type when clicked. An option for the value 0 with name "Nothing" and an option for the value ~0 (that is, all bits set) with the name "Everything" are always displayed at the top of the menu. The names for the values 0 and ~0 can be overriden by defining these values in the enum type.</summary>
		</member>
		<member name="P:UnityEditor.ModelImporterClipAnimation.name">
			<summary>Clip name.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.EnumFlagsField(UnityEngine.Rect,System.String,System.Enum)">
			<summary>Displays a menu with an option for every value of the enum type when clicked. An option for the value 0 with name "Nothing" and an option for the value ~0 (that is, all bits set) with the name "Everything" are always displayed at the top of the menu. The names for the values 0 and ~0 can be overriden by defining these values in the enum type.</summary>
		</member>
		<member name="P:UnityEditor.ModelImporter.normalSmoothingAngle">
			<summary>Smoothing angle (in degrees) for calculating normals.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.EnumFlagsField(UnityEngine.Rect,System.String,System.Enum,UnityEngine.GUIStyle)">
			<summary>Displays a menu with an option for every value of the enum type when clicked. An option for the value 0 with name "Nothing" and an option for the value ~0 (that is, all bits set) with the name "Everything" are always displayed at the top of the menu. The names for the values 0 and ~0 can be overriden by defining these values in the enum type.</summary>
		</member>
		<member name="P:UnityEditor.ModelImporterClipAnimation.firstFrame">
			<summary>First frame of the clip.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.EnumFlagsField(UnityEngine.Rect,UnityEngine.GUIContent,System.Enum)">
			<summary>Displays a menu with an option for every value of the enum type when clicked. An option for the value 0 with name "Nothing" and an option for the value ~0 (that is, all bits set) with the name "Everything" are always displayed at the top of the menu. The names for the values 0 and ~0 can be overriden by defining these values in the enum type.</summary>
		</member>
		<member name="P:UnityEditor.ModelImporter.splitTangentsAcrossSeams">
			<summary>Should tangents be split across UV seams.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.EnumFlagsField(UnityEngine.Rect,UnityEngine.GUIContent,System.Enum,UnityEngine.GUIStyle)">
			<summary>Displays a menu with an option for every value of the enum type when clicked. An option for the value 0 with name "Nothing" and an option for the value ~0 (that is, all bits set) with the name "Everything" are always displayed at the top of the menu. The names for the values 0 and ~0 can be overriden by defining these values in the enum type.</summary>
		</member>
		<member name="P:UnityEditor.ModelImporterClipAnimation.lastFrame">
			<summary>Last frame of the clip.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.EnumFlagsField(UnityEngine.Rect,UnityEngine.GUIContent,System.Enum,System.Boolean,UnityEngine.GUIStyle)">
			<summary>Displays a menu with an option for every value of the enum type when clicked. An option for the value 0 with name "Nothing" and an option for the value ~0 (that is, all bits set) with the name "Everything" are always displayed at the top of the menu. The names for the values 0 and ~0 can be overriden by defining these values in the enum type.</summary>
		</member>
		<member name="P:UnityEditor.ModelImporter.swapUVChannels">
			<summary>Swap primary and secondary UV channels when importing.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.EnumFlagsField(UnityEngine.Rect,UnityEngine.GUIContent,System.Enum,System.Boolean,System.Int32&,System.Boolean&,UnityEngine.GUIStyle)">
			<summary>Displays a menu with an option for every value of the enum type when clicked. An option for the value 0 with name "Nothing" and an option for the value ~0 (that is, all bits set) with the name "Everything" are always displayed at the top of the menu. The names for the values 0 and ~0 can be overriden by defining these values in the enum type.</summary>
		</member>
		<member name="P:UnityEditor.ModelImporterClipAnimation.wrapMode">
			<summary>The wrap mode of the animation.</summary>
		</member>
		<member name="P:UnityEditor.ModelImporter.weldVertices">
			<summary>Combine vertices that share the same position in space.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.Popup(System.String,System.Int32,System.String[],UnityEngine.GUILayoutOption[])">
			<summary>Make a generic popup selection field.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.Popup(UnityEngine.GUIContent,System.Int32,System.String[],UnityEngine.GUILayoutOption[])">
			<summary>Make a generic popup selection field.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.Popup(System.String,System.Int32,System.String[],UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
			<summary>Make a generic popup selection field.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.Popup(UnityEngine.GUIContent,System.Int32,UnityEngine.GUIContent[],UnityEngine.GUILayoutOption[])">
			<summary>Make a generic popup selection field.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.Popup(UnityEngine.GUIContent,System.Int32,UnityEngine.GUIContent[],UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
			<summary>Make a generic popup selection field.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.Popup(UnityEngine.GUIContent,System.Int32,System.String[],UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
			<summary>Make a generic popup selection field.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.Popup(UnityEditor.SerializedProperty,UnityEngine.GUIContent[],UnityEngine.GUILayoutOption[])">
			<summary>Make a generic popup selection field.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.Popup(UnityEditor.SerializedProperty,UnityEngine.GUIContent[],UnityEngine.GUIContent,UnityEngine.GUILayoutOption[])">
			<summary>Make a generic popup selection field.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.ObjectField(UnityEngine.Rect,UnityEditor.SerializedProperty)">
			<summary>Makes an object field. You can assign objects either by drag and drop objects or by selecting an object using the Object Picker.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.EnumPopup(System.Enum,UnityEngine.GUILayoutOption[])">
			<summary>Make an enum popup selection field.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.EnumPopup(System.Enum,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
			<summary>Make an enum popup selection field.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.ObjectField(UnityEngine.Rect,UnityEditor.SerializedProperty,UnityEngine.GUIContent)">
			<summary>Makes an object field. You can assign objects either by drag and drop objects or by selecting an object using the Object Picker.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.EnumPopup(System.String,System.Enum,UnityEngine.GUILayoutOption[])">
			<summary>Make an enum popup selection field.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.EnumPopup(System.String,System.Enum,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
			<summary>Make an enum popup selection field.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.EnumPopup(UnityEngine.GUIContent,System.Enum,UnityEngine.GUILayoutOption[])">
			<summary>Make an enum popup selection field.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.ObjectField(UnityEngine.Rect,UnityEditor.SerializedProperty,System.Type)">
			<summary>Makes an object field. You can assign objects either by drag and drop objects or by selecting an object using the Object Picker.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.EnumPopup(UnityEngine.GUIContent,System.Enum,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
			<summary>Make an enum popup selection field.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.ObjectField(UnityEngine.Rect,UnityEditor.SerializedProperty,System.Type,UnityEngine.GUIContent)">
			<summary>Makes an object field. You can assign objects either by drag and drop objects or by selecting an object using the Object Picker.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.EnumPopup(UnityEngine.GUIContent,System.Enum,System.Func`2<System.Enum,System.Boolean>,System.Boolean,UnityEngine.GUILayoutOption[])">
			<summary>Make an enum popup selection field.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.EnumPopup(UnityEngine.GUIContent,System.Enum,System.Func`2<System.Enum,System.Boolean>,System.Boolean,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
			<summary>Make an enum popup selection field.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.ObjectField(UnityEngine.Rect,UnityEditor.SerializedProperty,System.Type,UnityEngine.GUIContent,UnityEngine.GUIStyle,UnityEditor.EditorGUI.ObjectFieldValidator)">
			<summary>Makes an object field. You can assign objects either by drag and drop objects or by selecting an object using the Object Picker.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.ObjectField(UnityEngine.Rect,UnityEngine.Object,System.Type,System.Boolean)">
			<summary>Makes an object field. You can assign objects either by drag and drop objects or by selecting an object using the Object Picker.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.IntPopup(System.Int32,System.String[],System.Int32[],UnityEngine.GUILayoutOption[])">
			<summary>Make an integer popup selection field.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.ObjectField(UnityEngine.Rect,UnityEngine.Object,System.Type)">
			<summary>Makes an object field. You can assign objects either by drag and drop objects or by selecting an object using the Object Picker.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.IntPopup(System.Int32,System.String[],System.Int32[],UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
			<summary>Make an integer popup selection field.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.ObjectField(UnityEngine.Rect,System.String,UnityEngine.Object,System.Type,System.Boolean)">
			<summary>Makes an object field. You can assign objects either by drag and drop objects or by selecting an object using the Object Picker.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.IntPopup(System.Int32,UnityEngine.GUIContent[],System.Int32[],UnityEngine.GUILayoutOption[])">
			<summary>Make an integer popup selection field.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.IntPopup(System.Int32,UnityEngine.GUIContent[],System.Int32[],UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
			<summary>Make an integer popup selection field.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.ObjectField(UnityEngine.Rect,System.String,UnityEngine.Object,System.Type)">
			<summary>Makes an object field. You can assign objects either by drag and drop objects or by selecting an object using the Object Picker.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.IntPopup(System.String,System.Int32,System.String[],System.Int32[],UnityEngine.GUILayoutOption[])">
			<summary>Make an integer popup selection field.</summary>
		</member>
		<member name="P:UnityEditor.EditorWindow.focusedWindow">
			<summary>The EditorWindow which currently has keyboard focus. (Read Only)</summary>
		</member>
		<member name="P:UnityEditor.EditorWindow.mouseOverWindow">
			<summary>The EditorWindow currently under the mouse cursor. (Read Only)</summary>
		</member>
		<member name="P:UnityEditor.EditorWindow.minSize">
			<summary>The minimum size of this window.</summary>
		</member>
		<member name="P:UnityEditor.ModelImporter.keepQuads">
			<summary>If this is true, any quad faces that exist in the mesh data before it is imported are kept as quads instead of being split into two triangles, for the purposes of tessellation. Set this to false to disable this behavior.</summary>
		</member>
		<member name="P:UnityEditor.EditorWindow.maxSize">
			<summary>The maximum size of this window.</summary>
		</member>
		<member name="P:UnityEditor.ModelImporter.indexFormat">
			<summary>Format of the imported mesh index buffer data.</summary>
		</member>
		<member name="P:UnityEditor.EditorWindow.title">
			<summary>The title of this window.</summary>
		</member>
		<member name="P:UnityEditor.ModelImporter.preserveHierarchy">
			<summary>If true, always create an explicit Prefab root. Otherwise, if the model has a single root, it is reused as the Prefab root.</summary>
		</member>
		<member name="P:UnityEditor.EditorWindow.titleContent">
			<summary>The GUIContent used for drawing the title of EditorWindows.</summary>
		</member>
		<member name="P:UnityEditor.ModelImporter.generateSecondaryUV">
			<summary>Generate secondary UV set for lightmapping.</summary>
		</member>
		<member name="P:UnityEditor.EditorWindow.position">
			<summary>The desired position of the window in screen space.</summary>
		</member>
		<member name="P:UnityEditor.ModelImporter.secondaryUVAngleDistortion">
			<summary>Threshold for angle distortion (in degrees) when generating secondary UV.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.IntPopup(System.String,System.Int32,System.String[],System.Int32[],UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
			<summary>Make an integer popup selection field.</summary>
		</member>
		<member name="P:UnityEditor.ModelImporter.secondaryUVAreaDistortion">
			<summary>Threshold for area distortion when generating secondary UV.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.IntPopup(UnityEngine.GUIContent,System.Int32,UnityEngine.GUIContent[],System.Int32[],UnityEngine.GUILayoutOption[])">
			<summary>Make an integer popup selection field.</summary>
		</member>
		<member name="M:UnityEditor.EditorWindow.BeginWindows()">
			<summary>Mark the beginning area of all popup windows.</summary>
		</member>
		<member name="P:UnityEditor.ModelImporter.secondaryUVHardAngle">
			<summary>Hard angle (in degrees) for generating secondary UV.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.IntPopup(UnityEngine.GUIContent,System.Int32,UnityEngine.GUIContent[],System.Int32[],UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
			<summary>Make an integer popup selection field.</summary>
		</member>
		<member name="M:UnityEditor.EditorWindow.EndWindows()">
			<summary>Close a window group started with EditorWindow.BeginWindows.</summary>
		</member>
		<member name="P:UnityEditor.ModelImporter.secondaryUVPackMargin">
			<summary>Margin to be left between charts when packing secondary UV.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.IntPopup(UnityEditor.SerializedProperty,UnityEngine.GUIContent[],System.Int32[],UnityEngine.GUILayoutOption[])">
			<summary>Make an integer popup selection field.</summary>
		</member>
		<member name="M:UnityEditor.EditorWindow.ShowNotification(UnityEngine.GUIContent)">
			<summary>Show a notification message.</summary>
		</member>
		<member name="M:UnityEditor.EditorWindow.ShowNotification(UnityEngine.GUIContent,System.Double)">
			<summary>Show a notification message.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.IntPopup(UnityEditor.SerializedProperty,UnityEngine.GUIContent[],System.Int32[],UnityEngine.GUIContent,UnityEngine.GUILayoutOption[])">
			<summary>Make an integer popup selection field.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.ObjectField(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.Object,System.Type,System.Boolean)">
			<summary>Makes an object field. You can assign objects either by drag and drop objects or by selecting an object using the Object Picker.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.IntPopup(UnityEditor.SerializedProperty,UnityEngine.GUIContent[],System.Int32[],UnityEngine.GUIContent,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
			<summary>Make an integer popup selection field.</summary>
		</member>
		<member name="M:UnityEditor.ObjectPreview.OnPreviewSettings()">
			<summary>Override this method if you want to show custom controls in the preview header.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.ObjectField(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.Object,System.Type)">
			<summary>Makes an object field. You can assign objects either by drag and drop objects or by selecting an object using the Object Picker.</summary>
		</member>
		<member name="M:UnityEditor.ObjectPreview.GetInfoString()">
			<summary>Implement this method to show object information on top of the object preview.</summary>
		</member>
		<member name="M:UnityEditor.EditorWindow.RemoveNotification()">
			<summary>Stop showing notification message.</summary>
		</member>
		<member name="M:UnityEditor.ObjectPreview.DrawPreview(UnityEngine.Rect)">
			<summary>This is the first entry point for Preview Drawing.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.Vector2Field(UnityEngine.Rect,System.String,UnityEngine.Vector2)">
			<summary>Makes an X and Y field for entering a Vector2.</summary>
		</member>
		<member name="M:UnityEditor.ObjectPreview.DrawPreview(UnityEditor.IPreviewable,UnityEngine.Rect,UnityEngine.Object[])">
			<summary>This is the first entry point for Preview Drawing.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.Vector2Field(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.Vector2)">
			<summary>Makes an X and Y field for entering a Vector2.</summary>
		</member>
		<member name="T:UnityEditor.CustomEditorForRenderPipelineAttribute">
			<summary>Tells an Editor class which run-time type it's an editor for when the given RenderPipeline is activated.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.Vector3Field(UnityEngine.Rect,System.String,UnityEngine.Vector3)">
			<summary>Makes an X, Y, and Z field for entering a Vector3.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.Vector3Field(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.Vector3)">
			<summary>Makes an X, Y, and Z field for entering a Vector3.</summary>
		</member>
		<member name="T:UnityEditor.CanEditMultipleObjects">
			<summary>Attribute used to make a custom editor support multi-object editing.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.Vector4Field(UnityEngine.Rect,System.String,UnityEngine.Vector4)">
			<summary>Makes an X, Y, Z, and W field for entering a Vector4.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.Vector4Field(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.Vector4)">
			<summary>Makes an X, Y, Z, and W field for entering a Vector4.</summary>
		</member>
		<member name="T:UnityEditor.Editor">
			<summary>Derive from this base class to create a custom inspector or editor for your custom object.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.Vector2IntField(UnityEngine.Rect,System.String,UnityEngine.Vector2Int)">
			<summary>Makes an X and Y integer field for entering a Vector2Int.</summary>
		</member>
		<member name="M:UnityEditor.PrefabUtility.RevertRemovedComponent(UnityEngine.GameObject,UnityEngine.Component,UnityEditor.InteractionMode)">
			<summary>Adds this removed component back on the Prefab instance.</summary>
		</member>
		<member name="P:UnityEditor.SceneView.in2DMode">
			<summary>Whether the SceneView is in 2D mode.</summary>
		</member>
		<member name="M:UnityEditor.EditorWindow.Focus()">
			<summary>Moves keyboard focus to another EditorWindow.</summary>
		</member>
		<member name="P:UnityEditor.SceneView.isRotationLocked">
			<summary>Whether the Scene view camera can be rotated.</summary>
		</member>
		<member name="P:UnityEditor.ModelImporterClipAnimation.loop">
			<summary>Is the clip a looping animation?</summary>
		</member>
		<member name="P:UnityEditor.SceneView.audioPlay">
			<summary>Enables or disables Scene view audio effects.</summary>
		</member>
		<member name="M:UnityEditor.EditorWindow.ShowUtility()">
			<summary>Show the EditorWindow as a floating utility window.</summary>
		</member>
		<member name="M:UnityEditor.PrefabUtility.ApplyAddedGameObject(UnityEngine.GameObject,System.String,UnityEditor.InteractionMode)">
			<summary>Applies the added GameObject to the Prefab Asset at the given asset path.</summary>
		</member>
		<member name="P:UnityEditor.SceneView.renderMode">
			<summary>RenderMode has been deprecated. Use cameraMode instead.</summary>
		</member>
		<member name="M:UnityEditor.EditorWindow.ShowPopup()">
			<summary>Shows an Editor window using popup-style framing.</summary>
		</member>
		<member name="M:UnityEditor.PrefabUtility.RevertAddedGameObject(UnityEngine.GameObject,UnityEditor.InteractionMode)">
			<summary>Removes this added GameObject from a Prefab instance.</summary>
		</member>
		<member name="P:UnityEditor.EditorUserBuildSettings.connectProfiler">
			<summary>Start the player with a connection to the profiler.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUIUtility.LookLikeInspector()">
			<summary>Make all EditorGUI look like simplified outline view controls.</summary>
		</member>
		<member name="M:UnityEditor.CameraEditorUtils.DrawFrustumGizmo(UnityEngine.Camera)">
			<summary>Draw the frustrum gizmo of a camera.</summary>
		</member>
		<member name="P:UnityEditor.EditorUserBuildSettings.allowDebugging">
			<summary>Enable source-level debuggers to connect.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUIUtility.CommandEvent(System.String)">
			<summary>Creates an event that can be sent to another window.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUIUtility.DrawColorSwatch(UnityEngine.Rect,UnityEngine.Color)">
			<summary>Draw a color swatch.</summary>
		</member>
		<member name="P:UnityEditor.EditorUserBuildSettings.waitForPlayerConnection">
			<summary>Sets the Player to wait for player connection on player start.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUIUtility.DrawColorSwatch(UnityEngine.Rect,UnityEngine.Color,System.Boolean)">
			<summary>Draw a color swatch.</summary>
		</member>
		<member name="M:UnityEditor.CameraEditorUtils.TryGetSensorGateFrustum(UnityEngine.Camera,UnityEngine.Vector3[],UnityEngine.Vector3[],System.Single&)">
			<summary></summary>
		</member>
		<member name="M:UnityEditor.EditorGUIUtility.DrawColorSwatch(UnityEngine.Rect,UnityEngine.Color,System.Boolean,System.Boolean)">
			<summary>Draw a color swatch.</summary>
		</member>
		<member name="P:UnityEditor.EditorUserBuildSettings.exportAsGoogleAndroidProject">
			<summary>Export Android Project for use with Android Studio/Gradle.</summary>
		</member>
		<member name="M:UnityEditor.CameraEditorUtils.TryGetFrustum(UnityEngine.Camera,UnityEngine.Vector3[],UnityEngine.Vector3[],System.Single&)">
			<summary>Calculate the frustrum corners.Corners are calculated in this order: left bottom, left top, right top, right bottom.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUIUtility.DrawRegionSwatch(UnityEngine.Rect,UnityEditor.SerializedProperty,UnityEditor.SerializedProperty,UnityEngine.Color,UnityEngine.Color)">
			<summary>Draw swatch with a filled region between two SerializedProperty curves.</summary>
		</member>
		<member name="P:UnityEditor.EditorUserBuildSettings.buildAppBundle">
			<summary>Set to true to build an Android App Bundle (aab file) instead of an apk. The default value is false.</summary>
		</member>
		<member name="M:UnityEditor.CameraEditorUtils.IsViewportRectValidToRender(UnityEngine.Rect)">
			<summary>Check whether a viewport is valid.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUIUtility.DrawCurveSwatch(UnityEngine.Rect,UnityEngine.AnimationCurve,UnityEditor.SerializedProperty,UnityEngine.Color,UnityEngine.Color)">
			<summary>Draw a curve swatch.</summary>
		</member>
		<member name="P:UnityEditor.EditorUserBuildSettings.symlinkLibraries">
			<summary>Symlink runtime libraries with an iOS Xcode project.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUIUtility.DrawCurveSwatch(UnityEngine.Rect,UnityEngine.AnimationCurve,UnityEditor.SerializedProperty,UnityEngine.Color,UnityEngine.Color,UnityEngine.Color,UnityEngine.Color)">
			<summary>Draw a curve swatch.</summary>
		</member>
		<member name="M:UnityEditor.CameraEditorUtils.GetFrustumAspectRatio(UnityEngine.Camera)">
			<summary>Calculate the frustrum aspect ratio of a camera.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUIUtility.DrawCurveSwatch(UnityEngine.Rect,UnityEngine.AnimationCurve,UnityEditor.SerializedProperty,UnityEngine.Color,UnityEngine.Color,UnityEngine.Color,UnityEngine.Color,UnityEngine.Rect)">
			<summary>Draw a curve swatch.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUIUtility.DrawCurveSwatch(UnityEngine.Rect,UnityEngine.AnimationCurve,UnityEditor.SerializedProperty,UnityEngine.Color,UnityEngine.Color,UnityEngine.Rect)">
			<summary>Draw a curve swatch.</summary>
		</member>
		<member name="P:UnityEditor.EditorUserBuildSettings.iOSBuildConfigType">
			<summary>Scheme with which the project will be run in Xcode.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.Vector2IntField(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.Vector2Int)">
			<summary>Makes an X and Y integer field for entering a Vector2Int.</summary>
		</member>
		<member name="M:UnityEditor.EditorWindow.ShowModalUtility()">
			<summary>Show the EditorWindow as a floating modal window.</summary>
		</member>
		<member name="P:UnityEditor.SceneView.CameraMode UnityEditor.SceneView.cameraMode">
			<summary>The current DrawCameraMode for the Scene view camera.</summary>
		</member>
		<member name="P:UnityEditor.SceneView.validateTrueMetals">
			<summary>Whether the albedo is black for materials with an average specular color above 0.45.</summary>
		</member>
		<member name="M:UnityEditor.CameraEditorUtils.PerspectiveClipToWorld(UnityEngine.Matrix4x4,UnityEngine.Vector3,UnityEngine.Vector3)">
			<summary>Calculate the world space position of a point in clip space.The z component will be used to get the point at the distance z from the viewer.</summary>
		</member>
		<member name="P:UnityEditor.SceneView.SceneViewState UnityEditor.SceneView.sceneViewState">
			<summary>Use SceneViewState to set the debug options for the Scene view.</summary>
		</member>
		<member name="P:UnityEditor.SceneView.CameraSettings UnityEditor.SceneView.cameraSettings">
			<summary>Use CameraSettings to set the properties for the SceneView Camera.</summary>
		</member>
		<member name="P:UnityEditor.SceneView.lastSceneViewRotation">
			<summary>When the Scene view is in 2D mode, this property contains the last camera rotation.</summary>
		</member>
		<member name="M:UnityEditor.CameraEditorUtils.GetFrustumPlaneAt(UnityEngine.Matrix4x4,UnityEngine.Vector3,System.Single,UnityEngine.Vector3[])">
			<summary>Calculate the points of the frustrum plane facing the viewer at a specific distance.The points array will be filled with the calculated points in the following order: left bottom, left top, right top and right bottom.</summary>
		</member>
		<member name="T:UnityEditor.LightEditor">
			<summary>The class used to render the Light Editor when a Light is selected in the Unity Editor.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUIUtility.DrawRegionSwatch(UnityEngine.Rect,UnityEditor.SerializedProperty,UnityEditor.SerializedProperty,UnityEngine.Color,UnityEngine.Color,UnityEngine.Rect)">
			<summary>Draw swatch with a filled region between two SerializedProperty curves.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUIUtility.DrawRegionSwatch(UnityEngine.Rect,UnityEngine.AnimationCurve,UnityEngine.AnimationCurve,UnityEngine.Color,UnityEngine.Color,UnityEngine.Rect)">
			<summary>Draw swatch with a filled region between two SerializedProperty curves.</summary>
		</member>
		<member name="P:UnityEditor.EditorUserBuildSettings.installInBuildFolder">
			<summary>Place the built player in the build folder.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUIUtility.AddCursorRect(UnityEngine.Rect,UnityEditor.MouseCursor)">
			<summary>Add a custom mouse pointer to a control.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUIUtility.AddCursorRect(UnityEngine.Rect,UnityEditor.MouseCursor,System.Int32)">
			<summary>Add a custom mouse pointer to a control.</summary>
		</member>
		<member name="P:UnityEditor.EditorUserBuildSettings.forceOptimizeScriptCompilation">
			<summary>Force full optimizations for script complilation in Development builds.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUIUtility.ShowObjectPicker(UnityEngine.Object,System.Boolean,System.String,System.Int32)">
			<summary>Show the object picker from code.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUIUtility.GetObjectPickerObject()">
			<summary>The object currently selected in the object picker.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUIUtility.GetObjectPickerControlID()">
			<summary>The controlID of the currently showing object picker.</summary>
		</member>
		<member name="T:UnityEditor.EditorGUIUtility.IconSizeScope">
			<summary>Disposable scope helper for GetIconSize / SetIconSize.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.Vector3IntField(UnityEngine.Rect,System.String,UnityEngine.Vector3Int)">
			<summary>Makes an X, Y, and Z integer field for entering a Vector3Int.</summary>
		</member>
		<member name="T:UnityEditor.GameObjectUtility">
			<summary>GameObject utility functions.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.Vector3IntField(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.Vector3Int)">
			<summary>Makes an X, Y, and Z integer field for entering a Vector3Int.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.RectField(UnityEngine.Rect,UnityEngine.Rect)">
			<summary>Makes an X, Y, W, and H field for entering a Rect.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.RectField(UnityEngine.Rect,System.String,UnityEngine.Rect)">
			<summary>Makes an X, Y, W, and H field for entering a Rect.</summary>
		</member>
		<member name="M:UnityEditor.GameObjectUtility.GetStaticEditorFlags(UnityEngine.GameObject)">
			<summary>Gets the StaticEditorFlags of the GameObject specified.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.RectField(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.Rect)">
			<summary>Makes an X, Y, W, and H field for entering a Rect.</summary>
		</member>
		<member name="M:UnityEditor.GameObjectUtility.SetStaticEditorFlags(UnityEngine.GameObject,UnityEditor.StaticEditorFlags)">
			<summary>Sets the static editor flags on the specified GameObject.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.RectIntField(UnityEngine.Rect,UnityEngine.RectInt)">
			<summary>Makes an X, Y, W, and H field for entering a RectInt.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.RectIntField(UnityEngine.Rect,System.String,UnityEngine.RectInt)">
			<summary>Makes an X, Y, W, and H field for entering a RectInt.</summary>
		</member>
		<member name="M:UnityEditor.GameObjectUtility.AreStaticEditorFlagsSet(UnityEngine.GameObject,UnityEditor.StaticEditorFlags)">
			<summary>Returns true if the passed in StaticEditorFlags are set on the GameObject specified.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.RectIntField(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.RectInt)">
			<summary>Makes an X, Y, W, and H field for entering a RectInt.</summary>
		</member>
		<member name="M:UnityEditor.GameObjectUtility.GetNavMeshArea(UnityEngine.GameObject)">
			<summary>Get the navmesh area index for the GameObject.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.BoundsField(UnityEngine.Rect,UnityEngine.Bounds)">
			<summary>Makes Center and Extents field for entering a Bounds.</summary>
		</member>
		<member name="P:UnityEditor.Editor.target">
			<summary>The object being inspected.</summary>
		</member>
		<member name="P:UnityEditor.Editor.targets">
			<summary>An array of all the object being inspected.</summary>
		</member>
		<member name="M:UnityEditor.EditorUserBuildSettings.SwitchActiveBuildTarget(UnityEditor.BuildTargetGroup,UnityEditor.BuildTarget)">
			<summary>Select a new build target to be active.</summary>
		</member>
		<member name="P:UnityEditor.Editor.serializedObject">
			<summary>A SerializedObject representing the object or objects being inspected.</summary>
		</member>
		<member name="M:UnityEditor.EditorUserBuildSettings.SwitchActiveBuildTargetAsync(UnityEditor.BuildTargetGroup,UnityEditor.BuildTarget)">
			<summary>Select a new build target to be active during the next Editor update.</summary>
		</member>
		<member name="M:UnityEditor.EditorUserBuildSettings.GetBuildLocation(UnityEditor.BuildTarget)">
			<summary>Get the current location for the build.</summary>
		</member>
		<member name="M:UnityEditor.Editor.CreateEditorWithContext(UnityEngine.Object[],UnityEngine.Object,System.Type)">
			<summary>Make a custom editor for targetObject or targetObjects with a context object.</summary>
		</member>
		<member name="M:UnityEditor.EditorUserBuildSettings.SetBuildLocation(UnityEditor.BuildTarget,System.String)">
			<summary>Set a new location for the build.</summary>
		</member>
		<member name="M:UnityEditor.Editor.CreateEditorWithContext(UnityEngine.Object[],UnityEngine.Object)">
			<summary>Make a custom editor for targetObject or targetObjects with a context object.</summary>
		</member>
		<member name="M:UnityEditor.GameObjectUtility.SetNavMeshArea(UnityEngine.GameObject,System.Int32)">
			<summary>Set the navmesh area for the gameobject.</summary>
		</member>
		<member name="M:UnityEditor.Editor.CreateCachedEditorWithContext(UnityEngine.Object,UnityEngine.Object,System.Type,UnityEditor.Editor&)">
			<summary>Creates a cached editor using a context object.</summary>
		</member>
		<member name="M:UnityEditor.EditorUserBuildSettings.SetPlatformSettings(System.String,System.String,System.String)">
			<summary>Set platform specifc Editor setting.</summary>
		</member>
		<member name="T:UnityEditor.MaterialEditor">
			<summary>The Unity Material Editor.</summary>
		</member>
		<member name="M:UnityEditor.Editor.CreateCachedEditorWithContext(UnityEngine.Object[],UnityEngine.Object,System.Type,UnityEditor.Editor&)">
			<summary>Creates a cached editor using a context object.</summary>
		</member>
		<member name="M:UnityEditor.EditorUserBuildSettings.SetPlatformSettings(System.String,System.String,System.String,System.String)">
			<summary>Set platform specifc Editor setting.</summary>
		</member>
		<member name="F:UnityEditor.MaterialEditor.kMiniTextureFieldLabelIndentLevel">
			<summary>Useful for indenting shader properties that need the same indent as mini texture field.</summary>
		</member>
		<member name="M:UnityEditor.Editor.CreateCachedEditor(UnityEngine.Object,System.Type,UnityEditor.Editor&)">
			<summary>On return previousEditor is an editor for targetObject or targetObjects. The function either returns if the editor is already tracking the objects, or destroys the previous editor and creates a new one.</summary>
		</member>
		<member name="M:UnityEditor.EditorUserBuildSettings.GetPlatformSettings(System.String,System.String)">
			<summary>Returns value for platform specifc Editor setting.</summary>
		</member>
		<member name="M:UnityEditor.GameObjectUtility.GetNavMeshAreaFromName(System.String)">
			<summary>Get the navmesh area index from the area name.</summary>
		</member>
		<member name="M:UnityEditor.Editor.CreateCachedEditor(UnityEngine.Object[],System.Type,UnityEditor.Editor&)">
			<summary>On return previousEditor is an editor for targetObject or targetObjects. The function either returns if the editor is already tracking the objects, or destroys the previous editor and creates a new one.</summary>
		</member>
		<member name="M:UnityEditor.EditorUserBuildSettings.GetPlatformSettings(System.String,System.String,System.String)">
			<summary>Returns value for platform specifc Editor setting.</summary>
		</member>
		<member name="P:UnityEditor.MaterialEditor.isVisible">
			<summary>Is the current material expanded.</summary>
		</member>
		<member name="M:UnityEditor.GameObjectUtility.GetNavMeshAreaNames()">
			<summary>Get all the navmesh area names.</summary>
		</member>
		<member name="M:UnityEditor.Editor.CreateEditor(UnityEngine.Object)">
			<summary>Make a custom editor for targetObject or targetObjects.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.BoundsField(UnityEngine.Rect,System.String,UnityEngine.Bounds)">
			<summary>Makes Center and Extents field for entering a Bounds.</summary>
		</member>
		<member name="M:UnityEditor.GameObjectUtility.GetUniqueNameForSibling(UnityEngine.Transform,System.String)">
			<summary>You can use this method before instantiating a new sibling, or before parenting one GameObject to another, to ensure the new child GameObject has a unique name compared to its siblings in the hierarchy.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.BoundsField(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.Bounds)">
			<summary>Makes Center and Extents field for entering a Bounds.</summary>
		</member>
		<member name="M:UnityEditor.GameObjectUtility.EnsureUniqueNameForSibling(UnityEngine.GameObject)">
			<summary>You can use this method after parenting one GameObject to another to ensure the child GameObject has a unique name compared to its siblings in the hierarchy.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.BoundsIntField(UnityEngine.Rect,UnityEngine.BoundsInt)">
			<summary>Makes Position and Size field for entering a BoundsInt.</summary>
		</member>
		<member name="M:UnityEditor.GameObjectUtility.SetParentAndAlign(UnityEngine.GameObject,UnityEngine.GameObject)">
			<summary>Sets the parent and gives the child the same layer and position.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.BoundsIntField(UnityEngine.Rect,System.String,UnityEngine.BoundsInt)">
			<summary>Makes Position and Size field for entering a BoundsInt.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.SetShader(UnityEngine.Shader)">
			<summary>Set the shader of the material.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.BoundsIntField(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.BoundsInt)">
			<summary>Makes Position and Size field for entering a BoundsInt.</summary>
		</member>
		<member name="M:UnityEditor.GameObjectUtility.GetMonoBehavioursWithMissingScriptCount(UnityEngine.GameObject)">
			<summary>Gets the number of MonoBehaviours with a missing script for the given GameObject.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.MultiFloatField(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.GUIContent[],System.Single[])">
			<summary>Makes a multi-control with text fields for entering multiple floats in the same line.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.SetShader(UnityEngine.Shader,System.Boolean)">
			<summary>Set the shader of the material.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.MultiFloatField(UnityEngine.Rect,UnityEngine.GUIContent[],System.Single[])">
			<summary>Makes a multi-control with text fields for entering multiple floats in the same line.</summary>
		</member>
		<member name="M:UnityEditor.GameObjectUtility.RemoveMonoBehavioursWithMissingScript(UnityEngine.GameObject)">
			<summary>Removes the MonoBehaviours with a missing script from the given GameObject.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.MultiFloatField(UnityEngine.Rect,UnityEngine.GUIContent[],System.Single[],System.Single)">
			<summary>Makes a multi-control with text fields for entering multiple floats in the same line.</summary>
		</member>
		<member name="M:UnityEditor.Editor.CreateEditor(UnityEngine.Object,System.Type)">
			<summary>Make a custom editor for targetObject or targetObjects.</summary>
		</member>
		<member name="M:UnityEditor.EditorWindow.ShowAsDropDown(UnityEngine.Rect,UnityEngine.Vector2)">
			<summary>Shows a window with dropdown behaviour and styling.</summary>
		</member>
		<member name="M:UnityEditor.EditorWindow.ShowAsDropDown(UnityEngine.Rect,UnityEngine.Vector2,UnityEditor.PopupLocation[])">
			<summary>Shows a window with dropdown behaviour and styling.</summary>
		</member>
		<member name="M:UnityEditor.EditorWindow.ShowAsDropDown(UnityEngine.Rect,UnityEngine.Vector2,UnityEditor.PopupLocation[],UnityEditor.ShowMode)">
			<summary>Shows a window with dropdown behaviour and styling.</summary>
		</member>
		<member name="M:UnityEditor.EditorWindow.ShowAsDropDown(UnityEngine.Rect,UnityEngine.Vector2,UnityEditor.PopupLocation[],UnityEditor.ShowMode,System.Boolean)">
			<summary>Shows a window with dropdown behaviour and styling.</summary>
		</member>
		<member name="M:UnityEditor.Editor.CreateEditor(UnityEngine.Object[])">
			<summary>Make a custom editor for targetObject or targetObjects.</summary>
		</member>
		<member name="M:UnityEditor.EditorUserBuildSettings.SwitchActiveBuildTarget(UnityEditor.BuildTarget)">
			<summary>Select a new build target to be active.</summary>
		</member>
		<member name="M:UnityEditor.EditorWindow.Show()">
			<summary>Show the EditorWindow window.</summary>
		</member>
		<member name="M:UnityEditor.EditorWindow.Show(System.Boolean)">
			<summary>Show the EditorWindow window.</summary>
		</member>
		<member name="T:UnityEditor.SemanticMergeMode">
			<summary>Behavior of semantic merge.</summary>
		</member>
		<member name="M:UnityEditor.PrefabUtility.GetObjectOverrides(UnityEngine.GameObject,System.Boolean)">
			<summary>Returns a list of objects with information about object overrides on the Prefab instance.</summary>
		</member>
		<member name="M:UnityEditor.EditorWindow.ShowAuxWindow()">
			<summary>Show the editor window in the auxiliary window.</summary>
		</member>
		<member name="M:UnityEditor.PrefabUtility.GetAddedComponents(UnityEngine.GameObject)">
			<summary>Returns a list of PrefabUtility.AddedComponent objects which contain information about added component overrides on the Prefab instance.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.Awake()">
			<summary>Called when the Editor is woken up.</summary>
		</member>
		<member name="M:UnityEditor.EditorWindow.GetWindow(System.Type,System.Boolean,System.String,System.Boolean)">
			<summary>Returns the first EditorWindow of type t which is currently on the screen.</summary>
		</member>
		<member name="M:UnityEditor.EditorWindow.GetWindow(System.Type,System.Boolean,System.String)">
			<summary>Returns the first EditorWindow of type t which is currently on the screen.</summary>
		</member>
		<member name="T:UnityEditor.Handles.SizeFunction">
			<summary>A delegate type for getting a handle's size based on its current position.</summary>
		</member>
		<member name="M:UnityEditor.EditorWindow.GetWindow(System.Type,System.Boolean)">
			<summary>Returns the first EditorWindow of type t which is currently on the screen.</summary>
		</member>
		<member name="M:UnityEditor.EditorWindow.GetWindow(System.Type)">
			<summary>Returns the first EditorWindow of type t which is currently on the screen.</summary>
		</member>
		<member name="M:UnityEditor.EditorWindow.GetWindowWithRect(System.Type,UnityEngine.Rect,System.Boolean,System.String)">
			<summary>Returns the first EditorWindow of type t which is currently on the screen.</summary>
		</member>
		<member name="M:UnityEditor.EditorWindow.GetWindowWithRect(System.Type,UnityEngine.Rect,System.Boolean)">
			<summary>Returns the first EditorWindow of type t which is currently on the screen.</summary>
		</member>
		<member name="T:UnityEditor.HandleUtility">
			<summary>Helper functions for Scene View style 3D GUI.</summary>
		</member>
		<member name="M:UnityEditor.EditorWindow.GetWindowWithRect(System.Type,UnityEngine.Rect)">
			<summary>Returns the first EditorWindow of type t which is currently on the screen.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.OnInspectorGUI()">
			<summary>Implement specific MaterialEditor GUI code here. If you want to simply extend the existing editor call the base OnInspectorGUI () before doing any custom GUI code.</summary>
		</member>
		<member name="M:UnityEditor.EditorWindow.GetWindow()">
			<summary>Returns the first EditorWindow of type t which is currently on the screen.</summary>
		</member>
		<member name="M:UnityEditor.EditorWindow.GetWindow(System.Boolean)">
			<summary>Returns the first EditorWindow of type t which is currently on the screen.</summary>
		</member>
		<member name="P:UnityEditor.HandleUtility.acceleration">
			<summary>Get standard acceleration for dragging values (Read Only).</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.PropertiesChanged()">
			<summary>Whenever a material property is changed call this function. This will rebuild the inspector and validate the properties.</summary>
		</member>
		<member name="M:UnityEditor.EditorWindow.GetWindow(System.Boolean,System.String)">
			<summary>Returns the first EditorWindow of type t which is currently on the screen.</summary>
		</member>
		<member name="M:UnityEditor.EditorWindow.GetWindow(System.String)">
			<summary>Returns the first EditorWindow of type t which is currently on the screen.</summary>
		</member>
		<member name="P:UnityEditor.HandleUtility.niceMouseDelta">
			<summary>Get nice mouse delta to use for dragging a float value (Read Only).</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.OnShaderChanged()">
			<summary>A callback that is invoked when a Material's Shader is changed in the Inspector.</summary>
		</member>
		<member name="M:UnityEditor.EditorWindow.GetWindow(System.String,System.Boolean)">
			<summary>Returns the first EditorWindow of type t which is currently on the screen.</summary>
		</member>
		<member name="M:UnityEditor.EditorWindow.GetWindow(System.Boolean,System.String,System.Boolean)">
			<summary>Returns the first EditorWindow of type t which is currently on the screen.</summary>
		</member>
		<member name="M:UnityEditor.Editor.CreateEditor(UnityEngine.Object[],System.Type)">
			<summary>Make a custom editor for targetObject or targetObjects.</summary>
		</member>
		<member name="P:UnityEditor.HandleUtility.niceMouseDeltaZoom">
			<summary>Get nice mouse delta to use for zooming (Read Only).</summary>
		</member>
		<member name="M:UnityEditor.EditorWindow.GetWindow(System.Type[])">
			<summary>Returns the first EditorWindow of type t which is currently on the screen.</summary>
		</member>
		<member name="M:UnityEditor.Editor.DrawDefaultInspector()">
			<summary>Draws the built-in inspector.</summary>
		</member>
		<member name="M:UnityEditor.HandleUtility.DistancePointBezier(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3)">
			<summary>Calculate distance between a point and a Bezier curve.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.GetTextureScale(System.String,System.Boolean&,System.Boolean&)">
			<summary>Get the value of a given texture scale for a given texture property.</summary>
		</member>
		<member name="M:UnityEditor.Editor.Repaint()">
			<summary>Repaint any inspectors that shows this editor.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.GetTextureOffset(System.String,System.Boolean&,System.Boolean&)">
			<summary>Get the value of a given texture offset for a given texture property.</summary>
		</member>
		<member name="M:UnityEditor.HandleUtility.CalcLineTranslation(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector3,UnityEngine.Vector3)">
			<summary>Map a mouse drag onto a movement along a line in 3D space.</summary>
		</member>
		<member name="M:UnityEditor.Editor.OnInspectorGUI()">
			<summary>Implement this function to make a custom inspector.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.SetTextureScale(System.String,UnityEngine.Vector2,System.Int32)">
			<summary>Set the scale of a given texture property.</summary>
		</member>
		<member name="M:UnityEditor.HandleUtility.PointOnLineParameter(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3)">
			<summary>Returns the parameter for the projection of the point on the given line.</summary>
		</member>
		<member name="M:UnityEditor.Editor.CreateInspectorGUI()">
			<summary>Implement this method to make a custom UIElements inspector.</summary>
		</member>
		<member name="M:UnityEditor.PrefabUtility.GetRemovedComponents(UnityEngine.GameObject)">
			<summary>Returns a list of objects with information about removed component overrides on the Prefab instance.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.SetTextureOffset(System.String,UnityEngine.Vector2,System.Int32)">
			<summary>Set the offset of a given texture property.</summary>
		</member>
		<member name="M:UnityEditor.HandleUtility.ProjectPointLine(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3)">
			<summary>Project point onto a line.</summary>
		</member>
		<member name="M:UnityEditor.Editor.RequiresConstantRepaint()">
			<summary>Does this edit require to be repainted constantly in its current state?</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.RangeProperty(UnityEditor.MaterialProperty,System.String)">
			<summary>Draw a range slider for a range shader property.</summary>
		</member>
		<member name="M:UnityEditor.HandleUtility.DistancePointLine(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3)">
			<summary>Calculate distance between a point and a line.</summary>
		</member>
		<member name="M:UnityEditor.Editor.DrawHeader()">
			<summary>Redraw any inspectors that shows this editor.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.RangeProperty(UnityEngine.Rect,UnityEditor.MaterialProperty,System.String)">
			<summary>Draw a range slider for a range shader property.</summary>
		</member>
		<member name="M:UnityEditor.HandleUtility.DistanceToLine(UnityEngine.Vector3,UnityEngine.Vector3)">
			<summary>Pixel distance from mouse pointer to line.</summary>
		</member>
		<member name="M:UnityEditor.Editor.ShouldHideOpenButton()">
			<summary>Returns the visibility setting of the "open" button in the Inspector.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.FloatProperty(UnityEditor.MaterialProperty,System.String)">
			<summary>Draw a property field for a float shader property.</summary>
		</member>
		<member name="M:UnityEditor.HandleUtility.DistanceToCircle(UnityEngine.Vector3,System.Single)">
			<summary>Pixel distance from mouse pointer to camera facing circle.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.FloatProperty(UnityEngine.Rect,UnityEditor.MaterialProperty,System.String)">
			<summary>Draw a property field for a float shader property.</summary>
		</member>
		<member name="M:UnityEditor.HandleUtility.DistanceToRectangle(UnityEngine.Vector3,UnityEngine.Quaternion,System.Single)">
			<summary>Pixel distance from mouse pointer to a rectangle on screen.</summary>
		</member>
		<member name="M:UnityEditor.Editor.HasPreviewGUI()">
			<summary>Override this method in subclasses if you implement OnPreviewGUI.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.ColorProperty(UnityEditor.MaterialProperty,System.String)">
			<summary>Draw a property field for a color shader property.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.ColorProperty(UnityEngine.Rect,UnityEditor.MaterialProperty,System.String)">
			<summary>Draw a property field for a color shader property.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.TagField(System.String,UnityEngine.GUILayoutOption[])">
			<summary>Make a tag selection field.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.TagField(System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
			<summary>Make a tag selection field.</summary>
		</member>
		<member name="M:UnityEditor.Editor.GetPreviewTitle()">
			<summary>Override this method if you want to change the label of the Preview area.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.VectorProperty(UnityEditor.MaterialProperty,System.String)">
			<summary>Draw a property field for a vector shader property.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.TagField(System.String,System.String,UnityEngine.GUILayoutOption[])">
			<summary>Make a tag selection field.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.VectorProperty(UnityEngine.Rect,UnityEditor.MaterialProperty,System.String)">
			<summary>Draw a property field for a vector shader property.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.TagField(System.String,System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
			<summary>Make a tag selection field.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.TagField(UnityEngine.GUIContent,System.String,UnityEngine.GUILayoutOption[])">
			<summary>Make a tag selection field.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.TextureScaleOffsetProperty(UnityEditor.MaterialProperty)">
			<summary>Draws tiling and offset properties for a texture.</summary>
		</member>
		<member name="M:UnityEditor.HandleUtility.DistancePointToLine(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2)">
			<summary>Distance from a point p in 2d to a line defined by two points a and b.</summary>
		</member>
		<member name="M:UnityEditor.Editor.RenderStaticPreview(System.String,UnityEngine.Object[],System.Int32,System.Int32)">
			<summary>Override this method if you want to render a static preview.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.TextureScaleOffsetProperty(UnityEngine.Rect,UnityEditor.MaterialProperty)">
			<summary>Draws tiling and offset properties for a texture.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.TagField(UnityEngine.GUIContent,System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
			<summary>Make a tag selection field.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.TextureScaleOffsetProperty(UnityEngine.Rect,UnityEditor.MaterialProperty,System.Boolean)">
			<summary>Draws tiling and offset properties for a texture.</summary>
		</member>
		<member name="M:UnityEditor.Editor.OnPreviewGUI(UnityEngine.Rect,UnityEngine.GUIStyle)">
			<summary>Implement to create your own custom preview for the preview area of the inspector, primary editor headers and the object selector.</summary>
		</member>
		<member name="M:UnityEditor.EditorWindow.GetWindow(System.String,System.Type[])">
			<summary>Returns the first EditorWindow of type t which is currently on the screen.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.LayerField(System.Int32,UnityEngine.GUILayoutOption[])">
			<summary>Make a layer selection field.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.TextureProperty(UnityEditor.MaterialProperty,System.String)">
			<summary>Draw a property field for a texture shader property.</summary>
		</member>
		<member name="P:UnityEditor.ModelImporterClipAnimation.rotationOffset">
			<summary>Offset in degrees to the root rotation.</summary>
		</member>
		<member name="M:UnityEditor.EditorWindow.GetWindow(System.String,System.Boolean,System.Type[])">
			<summary>Returns the first EditorWindow of type t which is currently on the screen.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.LayerField(System.Int32,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
			<summary>Make a layer selection field.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.TextureProperty(UnityEditor.MaterialProperty,System.String,System.Boolean)">
			<summary>Draw a property field for a texture shader property.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.LayerField(System.String,System.Int32,UnityEngine.GUILayoutOption[])">
			<summary>Make a layer selection field.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.LayerField(System.String,System.Int32,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
			<summary>Make a layer selection field.</summary>
		</member>
		<member name="M:UnityEditor.Editor.OnInteractivePreviewGUI(UnityEngine.Rect,UnityEngine.GUIStyle)">
			<summary>Implement to create your own interactive custom preview. Interactive custom previews are used in the preview area of the inspector and the object selector.</summary>
		</member>
		<member name="M:UnityEditor.EditorWindow.FocusWindowIfItsOpen(System.Type)">
			<summary>Focuses the first found EditorWindow of specified type if it is open.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.LayerField(UnityEngine.GUIContent,System.Int32,UnityEngine.GUILayoutOption[])">
			<summary>Make a layer selection field.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.HelpBoxWithButton(UnityEngine.GUIContent,UnityEngine.GUIContent)">
			<summary>Make a help box with a message and button. Returns true, if button was pressed.</summary>
		</member>
		<member name="M:UnityEditor.EditorWindow.FocusWindowIfItsOpen()">
			<summary>Focuses the first found EditorWindow of specified type if it is open.</summary>
		</member>
		<member name="M:UnityEditor.Editor.OnPreviewSettings()">
			<summary>Override this method if you want to show custom controls in the preview header.</summary>
		</member>
		<member name="M:UnityEditor.EditorWindow.GetWindowWithRect(UnityEngine.Rect)">
			<summary>Returns the first EditorWindow of type t which is currently on the screen.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.TextureCompatibilityWarning(UnityEditor.MaterialProperty)">
			<summary>Checks if particular property has incorrect type of texture specified by the material, displays appropriate warning and suggests the user to automatically fix the problem.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.LayerField(UnityEngine.GUIContent,System.Int32,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
			<summary>Make a layer selection field.</summary>
		</member>
		<member name="M:UnityEditor.Editor.GetInfoString()">
			<summary>Implement this method to show asset information on top of the asset preview.</summary>
		</member>
		<member name="M:UnityEditor.EditorWindow.GetWindowWithRect(UnityEngine.Rect,System.Boolean)">
			<summary>Returns the first EditorWindow of type t which is currently on the screen.</summary>
		</member>
		<member name="M:UnityEditor.EditorWindow.GetWindowWithRect(UnityEngine.Rect,System.Boolean,System.String)">
			<summary>Returns the first EditorWindow of type t which is currently on the screen.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.TexturePropertyMiniThumbnail(UnityEngine.Rect,UnityEditor.MaterialProperty,System.String,System.String)">
			<summary>Draw a property field for a texture shader property that only takes up a single line height.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.MaskField(UnityEngine.GUIContent,System.Int32,System.String[],UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
			<summary>Make a field for masks.</summary>
		</member>
		<member name="M:UnityEditor.Editor.DrawPreview(UnityEngine.Rect)">
			<summary>The first entry point for Preview Drawing.</summary>
		</member>
		<member name="M:UnityEditor.EditorWindow.GetWindowWithRect(UnityEngine.Rect,System.Boolean,System.String,System.Boolean)">
			<summary>Returns the first EditorWindow of type t which is currently on the screen.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.MaskField(System.String,System.Int32,System.String[],UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
			<summary>Make a field for masks.</summary>
		</member>
		<member name="M:UnityEditor.GameObjectUtility.GetNavMeshLayer(UnityEngine.GameObject)">
			<summary>Get the navmesh layer for the GameObject.</summary>
		</member>
		<member name="P:UnityEditor.ModelImporter.generateAnimations">
			<summary>Animation generation options.</summary>
		</member>
		<member name="P:UnityEditor.ModelImporterClipAnimation.heightOffset">
			<summary>Offset to the vertical root position.</summary>
		</member>
		<member name="P:UnityEditor.ModelImporter.importedTakeInfos">
			<summary>Generates the list of all imported take.</summary>
		</member>
		<member name="M:UnityEditor.GameObjectUtility.SetNavMeshLayer(UnityEngine.GameObject,System.Int32)">
			<summary>Set the navmesh layer for the GameObject.</summary>
		</member>
		<member name="P:UnityEditor.ModelImporterClipAnimation.cycleOffset">
			<summary>Offset to the cycle of a looping animation, if a different time in it is desired to be the start.</summary>
		</member>
		<member name="M:UnityEditor.Editor.UseDefaultMargins()">
			<summary>Override this method in subclasses to return false if you don't want default margins.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.GetTexturePropertyCustomArea(UnityEngine.Rect)">
			<summary>Returns the free rect below the label and before the large thumb object field. Is used for e.g. tiling and offset properties.</summary>
		</member>
		<member name="P:UnityEditor.ModelImporter.transformPaths">
			<summary>Generates the list of all imported Transforms.</summary>
		</member>
		<member name="M:UnityEditor.GameObjectUtility.GetNavMeshLayerFromName(System.String)">
			<summary>Get the navmesh layer from the layer name.</summary>
		</member>
		<member name="P:UnityEditor.ModelImporterClipAnimation.loopTime">
			<summary>Enable to make the clip loop.</summary>
		</member>
		<member name="P:UnityEditor.ModelImporter.referencedClips">
			<summary>Generates the list of all imported Animations.</summary>
		</member>
		<member name="M:UnityEditor.GameObjectUtility.GetNavMeshLayerNames()">
			<summary>Get all the navmesh layer names.</summary>
		</member>
		<member name="P:UnityEditor.ModelImporterClipAnimation.loopPose">
			<summary>Enable to make the motion loop seamlessly.</summary>
		</member>
		<member name="P:UnityEditor.ModelImporter.isReadable">
			<summary>Are mesh vertices and indices accessible from script?</summary>
		</member>
		<member name="P:UnityEditor.ModelImporterClipAnimation.lockRootRotation">
			<summary>Enable to make root rotation be baked into the movement of the bones. Disable to make root rotation be stored as root motion.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.TextureProperty(UnityEngine.Rect,UnityEditor.MaterialProperty,System.String)">
			<summary>Draw a property field for a texture shader property.</summary>
		</member>
		<member name="P:UnityEditor.ModelImporter.meshOptimizationFlags">
			<summary>Options to control the optimization of mesh data during asset import.</summary>
		</member>
		<member name="T:UnityEditor.Handles">
			<summary>Custom 3D GUI controls and drawing in the Scene view.</summary>
		</member>
		<member name="P:UnityEditor.ModelImporterClipAnimation.lockRootHeightY">
			<summary>Enable to make vertical root motion be baked into the movement of the bones. Disable to make vertical root motion be stored as root motion.</summary>
		</member>
		<member name="P:UnityEditor.ModelImporter.optimizeMeshPolygons">
			<summary>Optimize the order of polygons in the mesh to make better use of the GPUs internal caches to improve rendering performance.</summary>
		</member>
		<member name="P:UnityEditor.ModelImporterClipAnimation.lockRootPositionXZ">
			<summary>Enable to make horizontal root motion be baked into the movement of the bones. Disable to make horizontal root motion be stored as root motion.</summary>
		</member>
		<member name="P:UnityEditor.ModelImporter.optimizeMeshVertices">
			<summary>Optimize the order of vertices in the mesh to make better use of the GPUs internal caches to improve rendering performance.</summary>
		</member>
		<member name="P:UnityEditor.ModelImporterClipAnimation.keepOriginalOrientation">
			<summary>Keeps the vertical position as it is authored in the source file.</summary>
		</member>
		<member name="P:UnityEditor.ModelImporter.optimizeMesh">
			<summary>Vertex optimization setting.</summary>
		</member>
		<member name="T:UnityEditor.ShaderGUI">
			<summary>Abstract class to derive from for defining custom GUI for shader properties and for extending the material preview.</summary>
		</member>
		<member name="P:UnityEditor.ModelImporterClipAnimation.keepOriginalPositionY">
			<summary>Keeps the vertical position as it is authored in the source file.</summary>
		</member>
		<member name="P:UnityEditor.ModelImporter.skinWeights">
			<summary>Skin weights import options.</summary>
		</member>
		<member name="M:UnityEditor.ShaderGUI.OnGUI(UnityEditor.MaterialEditor,UnityEditor.MaterialProperty[])">
			<summary>To define a custom shader GUI use the methods of materialEditor to render controls for the properties array.</summary>
		</member>
		<member name="P:UnityEditor.Handles.lighting">
			<summary>Are handles lit?</summary>
		</member>
		<member name="P:UnityEditor.ModelImporterClipAnimation.keepOriginalPositionXZ">
			<summary>Keeps the vertical position as it is authored in the source file.</summary>
		</member>
		<member name="P:UnityEditor.ModelImporter.maxBonesPerVertex">
			<summary>Maximum bones per vertex.</summary>
		</member>
		<member name="M:UnityEditor.ShaderGUI.OnMaterialPreviewGUI(UnityEditor.MaterialEditor,UnityEngine.Rect,UnityEngine.GUIStyle)">
			<summary>Override for extending the rendering of the Preview area or completly replace the preview (by not calling base.OnMaterialPreviewGUI).</summary>
		</member>
		<member name="P:UnityEditor.Handles.color">
			<summary>Colors of the handles.</summary>
		</member>
		<member name="P:UnityEditor.ModelImporterClipAnimation.heightFromFeet">
			<summary>Keeps the feet aligned with the root transform position.</summary>
		</member>
		<member name="P:UnityEditor.ModelImporter.minBoneWeight">
			<summary>Minimum bone weight to keep.</summary>
		</member>
		<member name="M:UnityEditor.ShaderGUI.OnMaterialPreviewSettingsGUI(UnityEditor.MaterialEditor)">
			<summary>Override for extending the functionality of the toolbar of the preview area or completly replace the toolbar by not calling base.OnMaterialPreviewSettingsGUI.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.TextureProperty(UnityEngine.Rect,UnityEditor.MaterialProperty,System.String,System.Boolean)">
			<summary>Draw a property field for a texture shader property.</summary>
		</member>
		<member name="M:UnityEditor.EditorWindow.Close()">
			<summary>Close the editor window.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.MaskField(UnityEngine.GUIContent,System.Int32,System.String[],UnityEngine.GUILayoutOption[])">
			<summary>Make a field for masks.</summary>
		</member>
		<member name="M:UnityEditor.EditorWindow.Repaint()">
			<summary>Make the window repaint.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.MaskField(System.String,System.Int32,System.String[],UnityEngine.GUILayoutOption[])">
			<summary>Make a field for masks.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.MaskField(System.Int32,System.String[],UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
			<summary>Make a field for masks.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.MaskField(System.Int32,System.String[],UnityEngine.GUILayoutOption[])">
			<summary>Make a field for masks.</summary>
		</member>
		<member name="M:UnityEditor.EditorWindow.SendEvent(UnityEngine.Event)">
			<summary>Sends an Event to a window.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.EnumFlagsField(System.Enum,UnityEngine.GUILayoutOption[])">
			<summary>Displays a menu with an option for every value of the enum type when clicked.</summary>
		</member>
		<member name="M:UnityEditor.ShaderGUI.OnClosed(UnityEngine.Material)">
			<summary>This method is called when the ShaderGUI is being closed.</summary>
		</member>
		<member name="T:UnityEditor.ExportPackageOptions">
			<summary>Export package option. Multiple options can be combined together using the | operator.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.EnumFlagsField(System.Enum,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
			<summary>Displays a menu with an option for every value of the enum type when clicked.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.EnumFlagsField(System.String,System.Enum,UnityEngine.GUILayoutOption[])">
			<summary>Displays a menu with an option for every value of the enum type when clicked.</summary>
		</member>
		<member name="M:UnityEditor.ShaderGUI.AssignNewShaderToMaterial(UnityEngine.Material,UnityEngine.Shader,UnityEngine.Shader)">
			<summary>This method is called when a new shader has been selected for a Material.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.EnumFlagsField(System.String,System.Enum,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
			<summary>Displays a menu with an option for every value of the enum type when clicked.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.EnumFlagsField(UnityEngine.GUIContent,System.Enum,UnityEngine.GUILayoutOption[])">
			<summary>Displays a menu with an option for every value of the enum type when clicked.</summary>
		</member>
		<member name="T:UnityEditor.FileUtil">
			<summary>Lets you do move, copy, delete operations over files or directories.</summary>
		</member>
		<member name="M:UnityEditor.ShaderGUI.FindProperty(System.String,UnityEditor.MaterialProperty[])">
			<summary>Find shader properties.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.EnumFlagsField(UnityEngine.GUIContent,System.Enum,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
			<summary>Displays a menu with an option for every value of the enum type when clicked.</summary>
		</member>
		<member name="M:UnityEditor.ShaderGUI.FindProperty(System.String,UnityEditor.MaterialProperty[],System.Boolean)">
			<summary>Find shader properties.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.EnumFlagsField(UnityEngine.GUIContent,System.Enum,System.Boolean,UnityEngine.GUILayoutOption[])">
			<summary>Displays a menu with an option for every value of the enum type when clicked.</summary>
		</member>
		<member name="M:UnityEditor.FileUtil.DeleteFileOrDirectory(System.String)">
			<summary>Deletes a file or a directory given a path.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.EnumFlagsField(UnityEngine.GUIContent,System.Enum,System.Boolean,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
			<summary>Displays a menu with an option for every value of the enum type when clicked.</summary>
		</member>
		<member name="T:UnityEditor.ShaderIncludePathAttribute">
			<summary>This attribute is no longer supported.</summary>
		</member>
		<member name="M:UnityEditor.FileUtil.CopyFileOrDirectory(System.String,System.String)">
			<summary>Copies a file or a directory.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.ObjectField(UnityEngine.Object,System.Type,UnityEngine.GUILayoutOption[])">
			<summary>Make a field to receive any object type.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.ObjectField(UnityEngine.Object,System.Type,System.Boolean,UnityEngine.GUILayoutOption[])">
			<summary>Make a field to receive any object type.</summary>
		</member>
		<member name="M:UnityEditor.FileUtil.CopyFileOrDirectoryFollowSymlinks(System.String,System.String)">
			<summary>Copies the file or directory.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.ObjectField(System.String,UnityEngine.Object,System.Type,UnityEngine.GUILayoutOption[])">
			<summary>Make a field to receive any object type.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.ObjectField(System.String,UnityEngine.Object,System.Type,System.Boolean,UnityEngine.GUILayoutOption[])">
			<summary>Make a field to receive any object type.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.ObjectField(UnityEngine.GUIContent,UnityEngine.Object,System.Type,UnityEngine.GUILayoutOption[])">
			<summary>Make a field to receive any object type.</summary>
		</member>
		<member name="P:UnityEditor.ModelImporter.normalImportMode">
			<summary>Normals import mode.</summary>
		</member>
		<member name="P:UnityEditor.ModelImporterClipAnimation.mirror">
			<summary>Mirror left and right in this clip.</summary>
		</member>
		<member name="P:UnityEditor.ModelImporter.tangentImportMode">
			<summary>Tangents import mode.</summary>
		</member>
		<member name="P:UnityEditor.Handles.zTest">
			<summary>zTest of the handles.</summary>
		</member>
		<member name="P:UnityEditor.ModelImporter.importNormals">
			<summary>Vertex normal import options.</summary>
		</member>
		<member name="P:UnityEditor.ModelImporterClipAnimation.maskType">
			<summary>Define mask type.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.TextureProperty(UnityEngine.Rect,UnityEditor.MaterialProperty,System.String,System.String,System.Boolean)">
			<summary>Draw a property field for a texture shader property.</summary>
		</member>
		<member name="P:UnityEditor.ModelImporter.normalSmoothingSource">
			<summary>Source of smoothing information for calculation of normals.</summary>
		</member>
		<member name="P:UnityEditor.Handles.matrix">
			<summary>Matrix for all handle operations.</summary>
		</member>
		<member name="P:UnityEditor.ModelImporterClipAnimation.maskSource">
			<summary>The AvatarMask used to mask transforms during the import process.</summary>
		</member>
		<member name="P:UnityEditor.ModelImporter.importBlendShapeNormals">
			<summary>Blend shape normal import options.</summary>
		</member>
		<member name="P:UnityEditor.Handles.inverseMatrix">
			<summary>The inverse of the matrix for all handle operations.</summary>
		</member>
		<member name="P:UnityEditor.ModelImporterClipAnimation.events">
			<summary>AnimationEvents that will be added during the import process.</summary>
		</member>
		<member name="P:UnityEditor.ModelImporter.normalCalculationMode">
			<summary>Normal generation options for ModelImporter.</summary>
		</member>
		<member name="P:UnityEditor.Handles.xAxisColor">
			<summary>Color to use for handles that manipulates the X coordinate of something.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.TextureScaleOffsetProperty(UnityEngine.Rect,UnityEngine.Vector4)">
			<summary>Draws tiling and offset properties for a texture.</summary>
		</member>
		<member name="P:UnityEditor.ModelImporterClipAnimation.curves">
			<summary>Additionnal curves that will be that will be added during the import process.</summary>
		</member>
		<member name="P:UnityEditor.ModelImporter.importTangents">
			<summary>Vertex tangent import options.</summary>
		</member>
		<member name="P:UnityEditor.Handles.yAxisColor">
			<summary>Color to use for handles that manipulates the Y coordinate of something.</summary>
		</member>
		<member name="P:UnityEditor.ModelImporterClipAnimation.maskNeedsUpdating">
			<summary></summary>
		</member>
		<member name="P:UnityEditor.ModelImporter.bakeIK">
			<summary>Bake Inverse Kinematics (IK) when importing.</summary>
		</member>
		<member name="P:UnityEditor.Handles.zAxisColor">
			<summary>Color to use for handles that manipulates the Z coordinate of something.</summary>
		</member>
		<member name="P:UnityEditor.ModelImporterClipAnimation.additiveReferencePoseFrame">
			<summary>The additive reference pose frame.</summary>
		</member>
		<member name="P:UnityEditor.ModelImporter.isBakeIKSupported">
			<summary>Is Bake Inverse Kinematics (IK) supported by this importer.</summary>
		</member>
		<member name="P:UnityEditor.Handles.centerColor">
			<summary>Color to use for handles that represent the center of something.</summary>
		</member>
		<member name="P:UnityEditor.ModelImporterClipAnimation.hasAdditiveReferencePose">
			<summary>Enable to defines an additive reference pose.</summary>
		</member>
		<member name="P:UnityEditor.ModelImporter.resampleCurves">
			<summary></summary>
		</member>
		<member name="P:UnityEditor.Handles.selectedColor">
			<summary>Color to use for the currently active handle.</summary>
		</member>
		<member name="P:UnityEditor.ModelImporter.isTangentImportSupported">
			<summary>Is import of tangents supported by this importer.</summary>
		</member>
		<member name="P:UnityEditor.Handles.preselectionColor">
			<summary>Color to use to highlight an unselected handle currently under the mouse pointer.</summary>
		</member>
		<member name="P:UnityEditor.ModelImporter.meshCompression">
			<summary>Mesh compression setting.</summary>
		</member>
		<member name="P:UnityEditor.Handles.secondaryColor">
			<summary>Soft color to use for for general things.</summary>
		</member>
		<member name="M:UnityEditor.FileUtil.MoveFileOrDirectory(System.String,System.String)">
			<summary>Moves a file or a directory from a given path to another path.</summary>
		</member>
		<member name="M:UnityEditor.FileUtil.GetUniqueTempPathInProject()">
			<summary>Returns a unique path in the Temp folder within your current project.</summary>
		</member>
		<member name="M:UnityEditor.FileUtil.ReplaceFile(System.String,System.String)">
			<summary>Replaces a file.</summary>
		</member>
		<member name="T:UnityEditor.TransformUtils">
			<summary>Editor Transform Utility Class.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.ObjectField(UnityEngine.GUIContent,UnityEngine.Object,System.Type,System.Boolean,UnityEngine.GUILayoutOption[])">
			<summary>Make a field to receive any object type.</summary>
		</member>
		<member name="M:UnityEditor.FileUtil.ReplaceDirectory(System.String,System.String)">
			<summary>Replaces a directory.</summary>
		</member>
		<member name="M:UnityEditor.TransformUtils.GetInspectorRotation(UnityEngine.Transform)">
			<summary>Returns the rotation of a transform as it is shown in the Transform Inspector window.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.ObjectField(UnityEditor.SerializedProperty,UnityEngine.GUILayoutOption[])">
			<summary>Make a field to receive any object type.</summary>
		</member>
		<member name="M:UnityEditor.TransformUtils.SetInspectorRotation(UnityEngine.Transform,UnityEngine.Vector3)">
			<summary>Sets the rotation of a transform as it would be set by the Transform Inspector window.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.TextureScaleOffsetProperty(UnityEngine.Rect,UnityEngine.Vector4,System.Boolean)">
			<summary>Draws tiling and offset properties for a texture.</summary>
		</member>
		<member name="T:UnityEditor.IHasCustomMenu">
			<summary>Defines a method to add custom menu items to an Editor Window.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.TextureScaleOffsetProperty(UnityEngine.Rect,UnityEngine.Vector4,System.Int32,System.Boolean)">
			<summary>Draws tiling and offset properties for a texture.</summary>
		</member>
		<member name="M:UnityEditor.IHasCustomMenu.AddItemsToMenu(UnityEditor.GenericMenu)">
			<summary>Adds your custom menu items to an Editor Window.</summary>
		</member>
		<member name="T:UnityEditor.CustomPropertyDrawer">
			<summary>Tells a custom PropertyDrawer or DecoratorDrawer which run-time Serializable class or PropertyAttribute it's a drawer for.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.GetPropertyHeight(UnityEditor.MaterialProperty)">
			<summary>Calculate height needed for the property.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.GetPropertyHeight(UnityEditor.MaterialProperty,System.String)">
			<summary>Calculate height needed for the property.</summary>
		</member>
		<member name="T:UnityEditor.MaterialProperty">
			<summary>Describes information and value of a single shader property.</summary>
		</member>
		<member name="T:UnityEditor.DecoratorDrawer">
			<summary>Base class to derive custom decorator drawers from.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.GetDefaultPropertyHeight(UnityEditor.MaterialProperty)">
			<summary>Calculate height needed for the property, ignoring custom drawers.</summary>
		</member>
		<member name="P:UnityEditor.MaterialProperty.targets">
			<summary>Material objects being edited by this property (Read Only).</summary>
		</member>
		<member name="P:UnityEditor.DecoratorDrawer.attribute">
			<summary>The PropertyAttribute for the decorator. (Read Only)</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.BeginAnimatedCheck(UnityEngine.Rect,UnityEditor.MaterialProperty)">
			<summary>Creates a Property wrapper, useful for making regular GUI controls work with MaterialProperty.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.BeginAnimatedCheck(UnityEditor.MaterialProperty)">
			<summary>Creates a Property wrapper, useful for making regular GUI controls work with MaterialProperty.</summary>
		</member>
		<member name="P:UnityEditor.MaterialProperty.PropType UnityEditor.MaterialProperty.type">
			<summary>Type of the property (Read Only).</summary>
		</member>
		<member name="M:UnityEditor.DecoratorDrawer.OnGUI(UnityEngine.Rect)">
			<summary></summary>
		</member>
		<member name="P:UnityEditor.ModelImporter.importAnimation">
			<summary>Import animation from file.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.EndAnimatedCheck()">
			<summary>Ends a Property wrapper started with BeginAnimatedCheck.</summary>
		</member>
		<member name="P:UnityEditor.MaterialProperty.name">
			<summary>Name of the property (Read Only).</summary>
		</member>
		<member name="M:UnityEditor.DecoratorDrawer.GetHeight()">
			<summary>Override this method to specify how tall the GUI for this decorator is in pixels.</summary>
		</member>
		<member name="P:UnityEditor.Handles.currentCamera">
			<summary>Setup viewport and stuff for a current camera.</summary>
		</member>
		<member name="P:UnityEditor.LightEditor.Settings UnityEditor.LightEditor.settings">
			<summary>The settings helper that can be used for rendering a custom LightEditor.</summary>
		</member>
		<member name="P:UnityEditor.SceneView.cameraDistance">
			<summary>The distance from camera to pivot.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.ShaderProperty(UnityEditor.MaterialProperty,System.String)">
			<summary>Handes UI for one shader property.</summary>
		</member>
		<member name="M:UnityEditor.LightEditor.OnEnable()">
			<summary>See ScriptableObject.OnEnable.</summary>
		</member>
		<member name="P:UnityEditor.SceneView.sceneViews">
			<summary>The list of all open Scene view windows.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.ShaderProperty(UnityEditor.MaterialProperty,UnityEngine.GUIContent)">
			<summary>Handes UI for one shader property.</summary>
		</member>
		<member name="M:UnityEditor.LightEditor.OnDestroy()">
			<summary>See ScriptableObject.OnDestroy.</summary>
		</member>
		<member name="P:UnityEditor.SceneView.camera">
			<summary>The Camera that is rendering this SceneView.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.ShaderProperty(UnityEditor.MaterialProperty,System.String,System.Int32)">
			<summary>Handes UI for one shader property.</summary>
		</member>
		<member name="M:UnityEditor.LightEditor.OnInspectorGUI()">
			<summary>See Editor.OnInspectorGUI.</summary>
		</member>
		<member name="P:UnityEditor.SceneView.pivot">
			<summary>The center point, or pivot, of the Scene view.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.ShaderProperty(UnityEditor.MaterialProperty,UnityEngine.GUIContent,System.Int32)">
			<summary>Handes UI for one shader property.</summary>
		</member>
		<member name="M:UnityEditor.LightEditor.OnSceneGUI()">
			<summary>See Editor.OnSceneGUI.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.ShaderProperty(UnityEngine.Rect,UnityEditor.MaterialProperty,System.String)">
			<summary>Handes UI for one shader property.</summary>
		</member>
		<member name="P:UnityEditor.SceneView.rotation">
			<summary>The direction of the camera to the pivot of the SceneView.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.ShaderProperty(UnityEngine.Rect,UnityEditor.MaterialProperty,UnityEngine.GUIContent)">
			<summary>Handes UI for one shader property.</summary>
		</member>
		<member name="T:UnityEditor.LightEditor.Settings">
			<summary>Contains all drawable elements of the LightEditor.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.ShaderProperty(UnityEngine.Rect,UnityEditor.MaterialProperty,System.String,System.Int32)">
			<summary>Handes UI for one shader property.</summary>
		</member>
		<member name="P:UnityEditor.SceneView.size">
			<summary>The size of the Scene view measured diagonally.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.ShaderProperty(UnityEngine.Rect,UnityEditor.MaterialProperty,UnityEngine.GUIContent,System.Int32)">
			<summary>Handes UI for one shader property.</summary>
		</member>
		<member name="P:UnityEditor.SceneView.orthographic">
			<summary>Whether the Scene view camera is set to orthographic mode.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.LightmapEmissionProperty()">
			<summary>This function will draw the UI for the lightmap emission property. (None, Realtime, baked)See Also: MaterialLightmapFlags.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.LightmapEmissionProperty(System.Int32)">
			<summary>This function will draw the UI for the lightmap emission property. (None, Realtime, baked)See Also: MaterialLightmapFlags.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.LightmapEmissionProperty(UnityEngine.Rect,System.Int32)">
			<summary>This function will draw the UI for the lightmap emission property. (None, Realtime, baked)See Also: MaterialLightmapFlags.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.EmissionEnabledProperty()">
			<summary>This function will draw the UI for controlling whether emission is enabled or not on a material.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.FixupEmissiveFlag(UnityEngine.Material)">
			<summary>Returns a properly set global illlumination flag based on the passed in flag and the given color.</summary>
		</member>
		<member name="P:UnityEditor.MaterialProperty.displayName">
			<summary>Display name of the property (Read Only).</summary>
		</member>
		<member name="M:UnityEditor.Handles.DrawPolyLine(UnityEngine.Vector3[])">
			<summary>Draw a line going through the list of points.</summary>
		</member>
		<member name="P:UnityEditor.MaterialProperty.PropFlags UnityEditor.MaterialProperty.flags">
			<summary>Flags that control how property is displayed (Read Only).</summary>
		</member>
		<member name="M:UnityEditor.Handles.DrawLine(UnityEngine.Vector3,UnityEngine.Vector3)">
			<summary>Draw a line from p1 to p2.</summary>
		</member>
		<member name="P:UnityEditor.MaterialProperty.textureDimension">
			<summary>Texture dimension (2D, Cubemap etc.) of the property (Read Only).</summary>
		</member>
		<member name="M:UnityEditor.Handles.DrawLine(UnityEngine.Vector3,UnityEngine.Vector3,System.Boolean)">
			<summary>Draw a line from p1 to p2.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.FixupEmissiveFlag(UnityEngine.Color,UnityEngine.MaterialGlobalIlluminationFlags)">
			<summary>Returns a properly set global illlumination flag based on the passed in flag and the given color.</summary>
		</member>
		<member name="M:UnityEditor.Handles.DrawLines(UnityEngine.Vector3[])">
			<summary>Draw a list of line segments.</summary>
		</member>
		<member name="M:UnityEditor.Handles.DrawLines(UnityEngine.Vector3[],System.Int32[])">
			<summary>Draw a list of line segments.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.LightmapEmissionFlagsProperty(System.Int32,System.Boolean)">
			<summary>Draws the UI for setting the global illumination flag of a material.</summary>
		</member>
		<member name="M:UnityEditor.Handles.DrawDottedLine(UnityEngine.Vector3,UnityEngine.Vector3,System.Single)">
			<summary>Draw a dotted line from p1 to p2.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.LightmapEmissionFlagsProperty(System.Int32,System.Boolean,System.Boolean)">
			<summary>Draws the UI for setting the global illumination flag of a material.</summary>
		</member>
		<member name="M:UnityEditor.Handles.DrawDottedLines(UnityEngine.Vector3[],System.Single)">
			<summary>Draw a list of dotted line segments.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.DefaultShaderProperty(UnityEditor.MaterialProperty,System.String)">
			<summary>Handles UI for one shader property ignoring any custom drawers.</summary>
		</member>
		<member name="M:UnityEditor.Handles.DrawDottedLines(UnityEngine.Vector3[],System.Int32[],System.Single)">
			<summary>Draw a list of dotted line segments.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.DefaultShaderProperty(UnityEngine.Rect,UnityEditor.MaterialProperty,System.String)">
			<summary>Handles UI for one shader property ignoring any custom drawers.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.RangeProperty(System.String,System.String,System.Single,System.Single)">
			<summary>Draw a range slider for a range shader property.</summary>
		</member>
		<member name="M:UnityEditor.Handles.DrawWireCube(UnityEngine.Vector3,UnityEngine.Vector3)">
			<summary>Draw a wireframe box with center and size.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.FloatProperty(System.String,System.String)">
			<summary>Draw a property field for a float shader property.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.ColorProperty(System.String,System.String)">
			<summary>Draw a property field for a color shader property.</summary>
		</member>
		<member name="M:UnityEditor.Handles.ShouldRenderGizmos()">
			<summary>Determines whether or not to draw Gizmos.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.VectorProperty(System.String,System.String)">
			<summary>Draw a property field for a vector shader property.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.TextureProperty(System.String,System.String,UnityEditor.ShaderUtil.ShaderPropertyTexDim)">
			<summary>Draw a property field for a texture shader property.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.TextureProperty(System.String,System.String,UnityEditor.ShaderUtil.ShaderPropertyTexDim,System.Boolean)">
			<summary>Draw a property field for a texture shader property.</summary>
		</member>
		<member name="M:UnityEditor.Handles.DrawGizmos(UnityEngine.Camera)">
			<summary>Draw a subset of Gizmos (before or after postprocessing) for the given camera.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.ShaderProperty(UnityEngine.Shader,System.Int32)">
			<summary>Handes UI for one shader property.</summary>
		</member>
		<member name="T:UnityEditor.SettingsScope">
			<summary>Sets the scope of a SettingsProvider. The Scope determines where it appears in the UI. For example, whether it appears with the Project settings in the Settings window, or in the Preferences window, or in both windows.</summary>
		</member>
		<member name="M:UnityEditor.Handles.Disc(System.Int32,UnityEngine.Quaternion,UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Boolean,System.Single)">
			<summary>Make a 3D disc that can be dragged with the mouse.</summary>
		</member>
		<member name="T:UnityEditor.SettingsProvider">
			<summary>SettingsProvider is the configuration class that specifies how a Project setting or a preference should appear in the Settings or Preferences window.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.GetMaterialProperties(UnityEngine.Object[])">
			<summary>Get shader property information of the passed materials.</summary>
		</member>
		<member name="M:UnityEditor.Handles.FreeRotateHandle(System.Int32,UnityEngine.Quaternion,UnityEngine.Vector3,System.Single)">
			<summary>Make an unconstrained rotation handle.</summary>
		</member>
		<member name="M:UnityEditor.SceneView.ResetCameraSettings()">
			<summary>Resets the CameraSettings for the SceneView Camera to default.</summary>
		</member>
		<member name="P:UnityEditor.SettingsProvider.label">
			<summary>Gets or sets the display name of the SettingsProvider as it appears in the Settings window. If not set, the Settings window uses last token of SettingsProvider.settingsPath instead.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.GetMaterialProperty(UnityEngine.Object[],System.String)">
			<summary>Get information about a single shader property.</summary>
		</member>
		<member name="M:UnityEditor.Handles.Slider(UnityEngine.Vector3,UnityEngine.Vector3)">
			<summary>Make a 3D slider that moves along one axis.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.GetMaterialProperty(UnityEngine.Object[],System.Int32)">
			<summary>Get information about a single shader property.</summary>
		</member>
		<member name="M:UnityEditor.Handles.Slider(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEditor.Handles.CapFunction,System.Single)">
			<summary>Make a 3D slider that moves along one axis.</summary>
		</member>
		<member name="P:UnityEditor.SettingsProvider.settingsPath">
			<summary>Gets Path used to place the SettingsProvider in the tree view of the Settings window. The path should be unique among all other settings paths and should use "/" as its separator.</summary>
		</member>
		<member name="M:UnityEditor.Handles.Slider(System.Int32,UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEditor.Handles.CapFunction,System.Single)">
			<summary>Make a 3D slider that moves along one axis.</summary>
		</member>
		<member name="M:UnityEditor.Handles.Slider(System.Int32,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEditor.Handles.CapFunction,System.Single)">
			<summary>Make a 3D slider that moves along one axis.</summary>
		</member>
		<member name="P:UnityEditor.SettingsProvider.scope">
			<summary>Gets the Scope of the SettingsProvider. The Scope determines whether the SettingsProvider appears in the Preferences window (SettingsScope.User) or the Settings window (SettingsScope.Project).</summary>
		</member>
		<member name="M:UnityEditor.Handles.Slider(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEditor.Handles.DrawCapFunction,System.Single)">
			<summary>Make a 3D slider that moves along one axis.</summary>
		</member>
		<member name="P:UnityEditor.ModelImporter.optimizeGameObjects">
			<summary>Animation optimization setting.</summary>
		</member>
		<member name="P:UnityEditor.SettingsProvider.keywords">
			<summary>Gets or sets the list of keywords to compare against what the user is searching for. When the user enters values in the search box on the Settings window, SettingsProvider.HasSearchInterest tries to match those keywords to this list.</summary>
		</member>
		<member name="M:UnityEditor.Handles.FreeMoveHandle(UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,UnityEngine.Vector3,UnityEditor.Handles.CapFunction)">
			<summary>Make an unconstrained movement handle.</summary>
		</member>
		<member name="M:UnityEditor.Handles.FreeMoveHandle(System.Int32,UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,UnityEngine.Vector3,UnityEditor.Handles.CapFunction)">
			<summary>Make an unconstrained movement handle.</summary>
		</member>
		<member name="M:UnityEditor.Handles.FreeMoveHandle(UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,UnityEngine.Vector3,UnityEditor.Handles.DrawCapFunction)">
			<summary>Make an unconstrained movement handle.</summary>
		</member>
		<member name="P:UnityEditor.SettingsProvider.guiHandler">
			<summary>Overrides SettingsProvider.OnGUI.</summary>
		</member>
		<member name="P:UnityEditor.MaterialProperty.rangeLimits">
			<summary>Min/max limits of a ranged float property (Read Only).</summary>
		</member>
		<member name="M:UnityEditor.Handles.ScaleValueHandle(System.Single,UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,UnityEditor.Handles.CapFunction,System.Single)">
			<summary>Make a 3D handle that scales a single float.</summary>
		</member>
		<member name="P:UnityEditor.SettingsProvider.titleBarGuiHandler">
			<summary>Overrides SettingsProvider.OnTitleBarGUI.</summary>
		</member>
		<member name="P:UnityEditor.ModelImporter.extraExposedTransformPaths">
			<summary>Animation optimization setting.</summary>
		</member>
		<member name="M:UnityEditor.Handles.ScaleValueHandle(System.Int32,System.Single,UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,UnityEditor.Handles.CapFunction,System.Single)">
			<summary>Make a 3D handle that scales a single float.</summary>
		</member>
		<member name="P:UnityEditor.SettingsProvider.footerBarGuiHandler">
			<summary>Overrides SettingsProvider.OnFooterBarGUI.</summary>
		</member>
		<member name="P:UnityEditor.ModelImporter.extraUserProperties">
			<summary>Additional properties to treat as user properties.</summary>
		</member>
		<member name="M:UnityEditor.Handles.ScaleValueHandle(System.Single,UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,UnityEditor.Handles.DrawCapFunction,System.Single)">
			<summary>Make a 3D handle that scales a single float.</summary>
		</member>
		<member name="P:UnityEditor.SettingsProvider.activateHandler">
			<summary>Overrides SettingsProvider.OnActivate.</summary>
		</member>
		<member name="P:UnityEditor.ModelImporter.animationCompression">
			<summary>Animation compression setting.</summary>
		</member>
		<member name="M:UnityEditor.Handles.Button(UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,System.Single,UnityEditor.Handles.CapFunction)">
			<summary>Make a 3D Button.</summary>
		</member>
		<member name="M:UnityEditor.Handles.Button(UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,System.Single,UnityEditor.Handles.DrawCapFunction)">
			<summary>Make a 3D Button.</summary>
		</member>
		<member name="P:UnityEditor.SettingsProvider.deactivateHandler">
			<summary>Overrides SettingsProvider.OnDeactivate.</summary>
		</member>
		<member name="M:UnityEditor.Handles.Button(System.Int32,UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,System.Single,UnityEditor.Handles.CapFunction)">
			<summary>Make a 3D Button.</summary>
		</member>
		<member name="P:UnityEditor.ModelImporter.importAnimatedCustomProperties">
			<summary>Import animated custom properties from file.</summary>
		</member>
		<member name="M:UnityEditor.Handles.Button(System.Int32,UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,System.Single,UnityEditor.Handles.DrawCapFunction)">
			<summary>Make a 3D Button.</summary>
		</member>
		<member name="P:UnityEditor.SettingsProvider.hasSearchInterestHandler">
			<summary>Overrides SettingsProvider.HasSearchInterest.</summary>
		</member>
		<member name="P:UnityEditor.ModelImporter.importConstraints">
			<summary>Import animation constraints.</summary>
		</member>
		<member name="M:UnityEditor.Handles.CubeHandleCap(System.Int32,UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,UnityEngine.EventType)">
			<summary>Draw a cube handle. Pass this into handle functions.</summary>
		</member>
		<member name="P:UnityEditor.SettingsProvider.inspectorUpdateHandler">
			<summary>Overrides SettingsProvider.OnInspectorUpdate.</summary>
		</member>
		<member name="P:UnityEditor.ModelImporter.animationRotationError">
			<summary>Allowed error of animation rotation compression.</summary>
		</member>
		<member name="M:UnityEditor.Handles.SphereHandleCap(System.Int32,UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,UnityEngine.EventType)">
			<summary>Draw a sphere handle. Pass this into handle functions.</summary>
		</member>
		<member name="P:UnityEditor.ModelImporter.animationPositionError">
			<summary>Allowed error of animation position compression.</summary>
		</member>
		<member name="M:UnityEditor.Handles.ConeHandleCap(System.Int32,UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,UnityEngine.EventType)">
			<summary>Draw a cone handle. Pass this into handle functions.</summary>
		</member>
		<member name="P:UnityEditor.ModelImporter.animationScaleError">
			<summary>Allowed error of animation scale compression.</summary>
		</member>
		<member name="P:UnityEditor.ModelImporter.animationWrapMode">
			<summary>The default wrap mode for the generated animation clips.</summary>
		</member>
		<member name="P:UnityEditor.ModelImporter.animationType">
			<summary>Animator generation mode.</summary>
		</member>
		<member name="P:UnityEditor.ModelImporter.humanoidOversampling">
			<summary>Controls how much oversampling is used when importing humanoid animations for retargeting.</summary>
		</member>
		<member name="P:UnityEditor.ModelImporter.motionNodeName">
			<summary>The path of the transform used to generation the motion of the animation.</summary>
		</member>
		<member name="P:UnityEditor.ModelImporter.sourceAvatar">
			<summary>Imports the HumanDescription from the given Avatar.</summary>
		</member>
		<member name="P:UnityEditor.MaterialProperty.hasMixedValue">
			<summary>Does this property have multiple different values? (Read Only)</summary>
		</member>
		<member name="P:UnityEditor.ModelImporter.humanDescription">
			<summary>The human description that is used to generate an Avatar during the import process.</summary>
		</member>
		<member name="P:UnityEditor.MaterialProperty.colorValue">
			<summary>Color value of the property.</summary>
		</member>
		<member name="P:UnityEditor.ModelImporter.clipAnimations">
			<summary>Animation clips to split animation into. See Also: ModelImporterClipAnimation.</summary>
		</member>
		<member name="P:UnityEditor.MaterialProperty.vectorValue">
			<summary>Vector value of the property.</summary>
		</member>
		<member name="P:UnityEditor.ModelImporter.defaultClipAnimations">
			<summary>Generate a list of all default animation clip based on TakeInfo.</summary>
		</member>
		<member name="P:UnityEditor.MaterialProperty.floatValue">
			<summary>Float vaue of the property.</summary>
		</member>
		<member name="P:UnityEditor.ModelImporter.useSRGBMaterialColor">
			<summary></summary>
		</member>
		<member name="P:UnityEditor.MaterialProperty.textureValue">
			<summary>Texture value of the property.</summary>
		</member>
		<member name="T:UnityEditor.MaterialProperty.PropType">
			<summary>Material property type.</summary>
		</member>
		<member name="T:UnityEditor.MaterialProperty.PropFlags">
			<summary>Flags that control how a MaterialProperty is displayed.</summary>
		</member>
		<member name="T:UnityEditor.Menu">
			<summary>Menu class to manipulate the menu item.</summary>
		</member>
		<member name="M:UnityEditor.Menu.SetChecked(System.String,System.Boolean)">
			<summary>Set the check status of the given menu.</summary>
		</member>
		<member name="M:UnityEditor.Menu.GetChecked(System.String)">
			<summary>Get the check status of the given menu.</summary>
		</member>
		<member name="T:UnityEditor.MenuCommand">
			<summary>Used to extract the context for a MenuItem.</summary>
		</member>
		<member name="M:UnityEditor.ModelImporter.CreateDefaultMaskForClip(UnityEditor.ModelImporterClipAnimation)">
			<summary>Creates a mask that matches the model hierarchy, and applies it to the provided ModelImporterClipAnimation.</summary>
		</member>
		<member name="F:UnityEditor.MenuCommand.context">
			<summary>Context is the object that is the target of a menu command.</summary>
		</member>
		<member name="M:UnityEditor.ModelImporter.ExtractTextures(System.String)">
			<summary>Extracts the embedded textures from a model file (such as FBX or SketchUp).</summary>
		</member>
		<member name="F:UnityEditor.MenuCommand.userData">
			<summary>An integer for passing custom information to a menu item.</summary>
		</member>
		<member name="M:UnityEditor.ModelImporter.SearchAndRemapMaterials(UnityEditor.ModelImporterMaterialName,UnityEditor.ModelImporterMaterialSearch)">
			<summary>Search the project for matching materials and use them instead of the internal materials.</summary>
		</member>
		<member name="T:UnityEditor.MenuItem">
			<summary>The MenuItem attribute allows you to add menu items to the main menu and inspector context menus.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.MultiIntField(UnityEngine.Rect,UnityEngine.GUIContent[],System.Int32[])">
			<summary>Makes a multi-control with text fields for entering multiple integers in the same line.</summary>
		</member>
		<member name="T:UnityEditor.MeshUtility">
			<summary>Various utilities for mesh manipulation.</summary>
		</member>
		<member name="M:UnityEditor.MeshUtility.Optimize(UnityEngine.Mesh)">
			<summary>Optimizes the Mesh data to improve rendering performance.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.MultiIntField(UnityEngine.Rect,UnityEngine.GUIContent[],System.Int32[],System.Single)">
			<summary>Makes a multi-control with text fields for entering multiple integers in the same line.</summary>
		</member>
		<member name="M:UnityEditor.MeshUtility.SetMeshCompression(UnityEngine.Mesh,UnityEditor.ModelImporterMeshCompression)">
			<summary>Change the mesh compression setting for a mesh.</summary>
		</member>
		<member name="M:UnityEditor.MeshUtility.GetMeshCompression(UnityEngine.Mesh)">
			<summary>Returns the mesh compression setting for a Mesh.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.MultiPropertyField(UnityEngine.Rect,UnityEngine.GUIContent[],UnityEditor.SerializedProperty,UnityEngine.GUIContent)">
			<summary>Makes a multi-control with several property fields in the same line.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.MultiPropertyField(UnityEngine.Rect,UnityEngine.GUIContent[],UnityEditor.SerializedProperty)">
			<summary>Makes a multi-control with several property fields in the same line.</summary>
		</member>
		<member name="M:UnityEditor.MeshUtility.SetPerTriangleUV2(UnityEngine.Mesh,UnityEngine.Vector2[])">
			<summary>Will insert per-triangle uv2 in mesh and handle vertex splitting etc.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.MultiPropertyField(UnityEngine.Rect,UnityEngine.GUIContent[],UnityEditor.SerializedProperty,UnityEditor.EditorGUI.PropertyVisibility,System.Single,System.Boolean[])">
			<summary>Makes a multi-control with several property fields in the same line.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.SetDefaultGUIWidths()">
			<summary>Set EditorGUIUtility.fieldWidth and labelWidth to the default values that PropertiesGUI uses.</summary>
		</member>
		<member name="T:UnityEditor.MonoScript">
			<summary>Representation of Script assets.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.ColorField(UnityEngine.Rect,UnityEngine.Color)">
			<summary>Makes a field for selecting a Color.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.ColorField(UnityEngine.Rect,UnityEngine.Color,System.Boolean,System.Boolean)">
			<summary>Makes a field for selecting a Color.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.PropertiesGUI()">
			<summary>Render the standard material properties. This method will either render properties using a IShaderGUI instance if found otherwise it uses PropertiesDefaultGUI.</summary>
		</member>
		<member name="M:UnityEditor.MonoScript.GetClass()">
			<summary>Returns the System.Type object of the class implemented by this script.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.ColorField(UnityEngine.Rect,System.String,UnityEngine.Color)">
			<summary>Makes a field for selecting a Color.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.ColorField(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.Color)">
			<summary>Makes a field for selecting a Color.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.PropertiesDefaultGUI(UnityEditor.MaterialProperty[])">
			<summary>Default rendering of shader properties.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.ColorField(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.Color,System.Boolean,System.Boolean)">
			<summary>Makes a field for selecting a Color.</summary>
		</member>
		<member name="M:UnityEditor.MonoScript.FromMonoBehaviour(UnityEngine.MonoBehaviour)">
			<summary>Returns the MonoScript object containing specified MonoBehaviour.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.ColorField(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.Color,System.Boolean,System.Boolean,System.Boolean,UnityEditor.ColorPickerHDRConfig)">
			<summary>Makes a field for selecting a Color.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.ColorField(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.Color,System.Boolean,System.Boolean,System.Boolean)">
			<summary>Makes a field for selecting a Color.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.ApplyMaterialPropertyDrawers(UnityEngine.Material)">
			<summary>Apply initial MaterialPropertyDrawer values.</summary>
		</member>
		<member name="M:UnityEditor.MonoScript.FromScriptableObject(UnityEngine.ScriptableObject)">
			<summary>Returns the MonoScript object containing specified ScriptableObject.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.ApplyMaterialPropertyDrawers(UnityEngine.Object[])">
			<summary>Apply initial MaterialPropertyDrawer values.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.CurveField(UnityEngine.Rect,UnityEngine.AnimationCurve)">
			<summary>Makes a field for editing an AnimationCurve.</summary>
		</member>
		<member name="T:UnityEditor.ObjectFactory">
			<summary>Use the DefaultObject to create a new UnityEngine.Object in the editor.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.CurveField(UnityEngine.Rect,System.String,UnityEngine.AnimationCurve)">
			<summary>Makes a field for editing an AnimationCurve.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.RegisterPropertyChangeUndo(System.String)">
			<summary>Call this when you change a material property. It will add an undo for the action.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.CurveField(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.AnimationCurve)">
			<summary>Makes a field for editing an AnimationCurve.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.DefaultPreviewSettingsGUI()">
			<summary>Default toolbar for material preview area.</summary>
		</member>
		<member name="M:UnityEditor.ObjectFactory.CreateInstance()">
			<summary>Create a new instance of the given type.</summary>
		</member>
		<member name="M:UnityEditor.ObjectFactory.CreateInstance(System.Type)">
			<summary>Create a new instance of the given type.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.HasPreviewGUI()">
			<summary>Can this component be Previewed in its current state?</summary>
		</member>
		<member name="M:UnityEditor.ObjectFactory.AddComponent(UnityEngine.GameObject)">
			<summary>Creates a new component and adds it to the specified GameObject.</summary>
		</member>
		<member name="M:UnityEditor.ObjectFactory.AddComponent(UnityEngine.GameObject,System.Type)">
			<summary>Creates a new component and adds it to the specified GameObject.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.RequiresConstantRepaint()">
			<summary>Does this edit require to be repainted constantly in its current state?</summary>
		</member>
		<member name="M:UnityEditor.ObjectFactory.CreateGameObject(UnityEngine.SceneManagement.Scene,UnityEngine.HideFlags,System.String,System.Type[])">
			<summary>Creates a new GameObject.</summary>
		</member>
		<member name="M:UnityEditor.ObjectFactory.CreateGameObject(System.String,System.Type[])">
			<summary>Creates a new GameObject.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.OnPreviewGUI(UnityEngine.Rect,UnityEngine.GUIStyle)">
			<summary>Custom preview for Image component.</summary>
		</member>
		<member name="M:UnityEditor.ObjectFactory.CreatePrimitive(UnityEngine.PrimitiveType)">
			<summary>Creates a GameObject primitive.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.DefaultPreviewGUI(UnityEngine.Rect,UnityEngine.GUIStyle)">
			<summary>Default handling of preview area for materials.</summary>
		</member>
		<member name="M:UnityEditor.SettingsProvider.OnActivate(System.String,UnityEngine.UIElements.VisualElement)">
			<summary>Use this function to implement a handler for when the user clicks on the Settings in the Settings window. You can fetch a settings Asset or set up UIElements UI from this function.</summary>
		</member>
		<member name="T:UnityEditor.ObjectNames">
			<summary>Helper class for constructing displayable names for objects.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.OnEnable()">
			<summary>Called when the editor is enabled, if overridden please call the base OnEnable() to ensure that the material inspector is set up properly.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.OnDisable()">
			<summary>Called when the editor is disabled, if overridden please call the base OnDisable() to ensure that the material inspector is set up properly.</summary>
		</member>
		<member name="M:UnityEditor.ObjectNames.NicifyVariableName(System.String)">
			<summary>Make a displayable name for a variable.</summary>
		</member>
		<member name="M:UnityEditor.ObjectNames.GetClassName(UnityEngine.Object)">
			<summary>Class name of an object.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.RenderQueueField()">
			<summary>Display UI for editing material's render queue setting.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.RenderQueueField(UnityEngine.Rect)">
			<summary>Display UI for editing material's render queue setting.</summary>
		</member>
		<member name="M:UnityEditor.ObjectNames.GetDragAndDropTitle(UnityEngine.Object)">
			<summary>Drag and drop title for an object.</summary>
		</member>
		<member name="M:UnityEditor.SettingsProvider.OnDeactivate()">
			<summary>Use this function to implement a handler for when the user clicks on another setting or when the Settings window closes.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.EnableInstancingField()">
			<summary>Display UI for editing material's render queue setting.</summary>
		</member>
		<member name="M:UnityEditor.ObjectNames.SetNameSmart(UnityEngine.Object,System.String)">
			<summary>Sets the name of an Object.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.EnableInstancingField(UnityEngine.Rect)">
			<summary>Display UI for editing material's render queue setting.</summary>
		</member>
		<member name="M:UnityEditor.SettingsProvider.HasSearchInterest(System.String)">
			<summary>Checks whether the SettingsProvider should appear when the user types something in the Settings window search box. SettingsProvider tries to match the search terms (even partially) to any of the SettingsProvider.keywords. The search is case insensitive.</summary>
		</member>
		<member name="M:UnityEditor.ObjectNames.GetUniqueName(System.String[],System.String)">
			<summary>Make a unique name using the provided name as a base.If the target name is in the provided list of existing names, a unique name is generated by appending the next available numerical increment.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.IsInstancingEnabled()">
			<summary>Determines whether the Enable Instancing checkbox is checked.</summary>
		</member>
		<member name="M:UnityEditor.SettingsProvider.OnGUI(System.String)">
			<summary>Use this function to draw the UI based on IMGUI. This assumes you haven't added any children to the rootElement passed to the OnActivate function.</summary>
		</member>
		<member name="M:UnityEditor.ObjectNames.GetInspectorTitle(UnityEngine.Object)">
			<summary>Inspector title for an object.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.DoubleSidedGIField()">
			<summary></summary>
		</member>
		<member name="M:UnityEditor.SettingsProvider.OnTitleBarGUI()">
			<summary>Use this function to override drawing the title for the SettingsProvider using IMGUI. This allows you to add custom UI (such as a toolbar button) next to the title. AssetSettingsProvider uses this mecanism to display the "add to preset" and the "help" buttons.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.TexturePropertySingleLine(UnityEngine.GUIContent,UnityEditor.MaterialProperty)">
			<summary>Method for showing a texture property control with additional inlined properites.</summary>
		</member>
		<member name="M:UnityEditor.SettingsProvider.OnFooterBarGUI()">
			<summary>Use this function to override drawing the footer for the SettingsProvider using IMGUI.</summary>
		</member>
		<member name="M:UnityEditor.SettingsProvider.OnInspectorUpdate()">
			<summary>OnInspectorUpdate is called at 10 frames per second to give the inspector a chance to update. See EditorWindow.OnInspectorUpdate for more details.</summary>
		</member>
		<member name="M:UnityEditor.SettingsProvider.Repaint()">
			<summary>Request the SettingsWindow for a repaint.</summary>
		</member>
		<member name="M:UnityEditor.SettingsProvider.GetSearchKeywordsFromGUIContentProperties()">
			<summary>Extract search keywords from all public static memebers in a specific Type.</summary>
		</member>
		<member name="M:UnityEditor.SceneView.SetSceneViewShaderReplace(UnityEngine.Shader,System.String)">
			<summary>Sets a replacement shader for rendering this Scene view.</summary>
		</member>
		<member name="M:UnityEditor.SettingsProvider.GetSearchKeywordsFromSerializedObject(UnityEditor.SerializedObject)">
			<summary>Extract search keywords from from the serialized properties of a SerializedObject.</summary>
		</member>
		<member name="T:UnityEditor.Experimental.Build.AssetBundle.CompressionType">
			<summary>Compression Method for Asset Bundles.</summary>
		</member>
		<member name="T:UnityEditor.Experimental.Build.AssetBundle.CompressionLevel">
			<summary>Compression Levels relate to how much time should be spent compressing Assets into an Asset Bundle.</summary>
		</member>
		<member name="M:UnityEditor.SettingsProvider.GetSearchKeywordsFromPath(System.String)">
			<summary>Extract search keywords from the serialized properties of an Asset at a specific path.</summary>
		</member>
		<member name="M:UnityEditor.SceneView.FrameLastActiveSceneView()">
			<summary>Frames the currently selected object(s) in the last active Scene view.</summary>
		</member>
		<member name="T:UnityEditor.SettingsProviderAttribute">
			<summary>Attribute used to register a new SettingsProvider. Use this attribute to decorate a function that returns an instance of a SettingsProvider. If the function returns null, no SettingsProvider appears in the Settings window.</summary>
		</member>
		<member name="T:UnityEditor.Experimental.Build.AssetBundle.BuildCompression">
			<summary>Contains information about compression methods, compression levels and block sizes that are supported by Asset Bundle compression at build time and recompression at runtime.</summary>
		</member>
		<member name="M:UnityEditor.SceneView.GetAllSceneCameras()">
			<summary>Retrieves an array of all camera components from all open Scene views.</summary>
		</member>
		<member name="T:UnityEditor.SettingsProviderGroupAttribute">
			<summary>Attribute used to register multiple SettingsProvider items. Use this attribute to decorate a function that returns an array of SettingsProvider instances. If the function returns null, no SettingsProvider appears in the Settings window.</summary>
		</member>
		<member name="M:UnityEditor.SceneView.RepaintAll()">
			<summary>Repaints every open SceneView.</summary>
		</member>
		<member name="T:UnityEditor.Build.Content.CompressionType">
			<summary>Compression Method for Asset Bundles.</summary>
		</member>
		<member name="T:UnityEditor.SettingsService">
			<summary>This class provides global APIs to interact with the Settings window.</summary>
		</member>
		<member name="T:UnityEditor.Build.Content.CompressionLevel">
			<summary>Compression Levels relate to how much time should be spent compressing Assets into an Asset Bundle.</summary>
		</member>
		<member name="M:UnityEditor.SceneView.SupportsStageHandling()">
			<summary>Override this method to control whether the Scene view should change when you switch from one stage to another stage.</summary>
		</member>
		<member name="M:UnityEditor.SettingsService.OpenProjectSettings(System.String)">
			<summary>Open the Project Settings window with the specified settings item already selected.</summary>
		</member>
		<member name="T:UnityEditor.Build.Content.BuildCompression">
			<summary>Contains information about compression methods, compression levels and block sizes that are supported by Asset Bundle compression at build time and recompression at runtime.</summary>
		</member>
		<member name="M:UnityEditor.SettingsService.OpenUserPreferences(System.String)">
			<summary>Open the Preferences window with the specified settings item already selected.</summary>
		</member>
		<member name="M:UnityEditor.SceneView.IsCameraDrawModeEnabled(UnityEditor.SceneView.CameraMode)">
			<summary>Returns true if mode is enabled in the current rendering setup, including custom validators.</summary>
		</member>
		<member name="M:UnityEditor.SettingsService.NotifySettingsProviderChanged()">
			<summary>Use this function to notify the SettingsService that a SettingsProvider changed.</summary>
		</member>
		<member name="T:UnityEditor.AssetSettingsProvider">
			<summary>AssetSettingsProvider is a specialization of the SettingsProvider class that converts legacy settings to Unified Settings. Legacy settings include any settings that used the Inspector to modify themselves, such as the *.asset files under the ProjectSettings folder. Under the hood, AssetSettingsProvider creates an Editor for specific Assets and builds the UI for the Settings window by wrapping the Editor.OnInspectorGUI function.Internally we use this class to wrap our existing settings.</summary>
		</member>
		<member name="M:UnityEditor.SceneView.LookAt(UnityEngine.Vector3)">
			<summary>Moves the Scene view to focus on a target.</summary>
		</member>
		<member name="P:UnityEditor.AssetSettingsProvider.settingsEditor">
			<summary>Editor providing UI to modify the settings.</summary>
		</member>
		<member name="M:UnityEditor.SceneView.LookAt(UnityEngine.Vector3,UnityEngine.Quaternion)">
			<summary>Moves the Scene view to focus on a target.</summary>
		</member>
		<member name="M:UnityEditor.SceneView.LookAtDirect(UnityEngine.Vector3,UnityEngine.Quaternion)">
			<summary></summary>
		</member>
		<member name="M:UnityEditor.AssetSettingsProvider.CreateProviderFromAssetPath(System.String,System.String,System.Collections.Generic.IEnumerable`1<System.String>)">
			<summary>Create an AssetSettingsProvider from an asset path.</summary>
		</member>
		<member name="M:UnityEditor.SceneView.LookAt(UnityEngine.Vector3,UnityEngine.Quaternion,System.Single)">
			<summary>Moves the Scene view to focus on a target.</summary>
		</member>
		<member name="M:UnityEditor.SceneView.LookAtDirect(UnityEngine.Vector3,UnityEngine.Quaternion,System.Single)">
			<summary></summary>
		</member>
		<member name="M:UnityEditor.SceneView.LookAt(UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,System.Boolean)">
			<summary>Moves the Scene view to focus on a target.</summary>
		</member>
		<member name="M:UnityEditor.AssetSettingsProvider.CreateProviderFromObject(System.String,UnityEngine.Object,System.Collections.Generic.IEnumerable`1<System.String>)">
			<summary>Create an AssetSettingsProvider from a settings object.</summary>
		</member>
		<member name="M:UnityEditor.SceneView.LookAt(UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,System.Boolean,System.Boolean)">
			<summary>Moves the Scene view to focus on a target.</summary>
		</member>
		<member name="M:UnityEditor.AssetSettingsProvider.CreateProviderFromResourcePath(System.String,System.String,System.Collections.Generic.IEnumerable`1<System.String>)">
			<summary>Create an AssetSettingsProvider from an asset resource path.</summary>
		</member>
		<member name="M:UnityEditor.SceneView.AlignViewToObject(UnityEngine.Transform)">
			<summary>Moves the Scene view to frame a transform.</summary>
		</member>
		<member name="M:UnityEditor.AssetSettingsProvider.OnActivate(System.String,UnityEngine.UIElements.VisualElement)">
			<summary>Overrides SettingsProvider.OnActivate for this AssetSettingsProvider.</summary>
		</member>
		<member name="T:UnityEditor.EditorJsonUtility">
			<summary>Utility functions for working with JSON data and engine objects.</summary>
		</member>
		<member name="M:UnityEditor.SceneView.AlignWithView()">
			<summary>Aligns the current selection with the position and rotation of the Scene view camera.</summary>
		</member>
		<member name="M:UnityEditor.PrefabUtility.GetAddedGameObjects(UnityEngine.GameObject)">
			<summary>Returns a list of PrefabUtility.AddedGameObject objects which contain information about added GameObjects on the Prefab instance.</summary>
		</member>
		<member name="M:UnityEditor.AssetSettingsProvider.OnDeactivate()">
			<summary>Overrides SettingsProvider.OnDeactivate for this AssetSettingsProvider.</summary>
		</member>
		<member name="M:UnityEditor.Handles.CylinderHandleCap(System.Int32,UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,UnityEngine.EventType)">
			<summary>Draw a cylinder handle. Pass this into handle functions.</summary>
		</member>
		<member name="M:UnityEditor.AssetSettingsProvider.OnGUI(System.String)">
			<summary>Overrides SettingsProvider.OnGUI for this AssetSettingsProvider.</summary>
		</member>
		<member name="M:UnityEditor.PrefabUtility.IsAnyPrefabInstanceRoot(UnityEngine.GameObject)">
			<summary>Is the GameObject the root of any Prefab instance?</summary>
		</member>
		<member name="M:UnityEditor.AssetSettingsProvider.OnTitleBarGUI()">
			<summary>Overrides SettingsProvider.OnTitleBarGUI for this AssetSettingsProvider. This draws the button bar that contains the "add to preset" and the "help" buttons.</summary>
		</member>
		<member name="M:UnityEditor.PrefabUtility.IsOutermostPrefabInstanceRoot(UnityEngine.GameObject)">
			<summary>Is the GameObject the root of a Prefab instance, excluding nested Prefabs?</summary>
		</member>
		<member name="M:UnityEditor.Handles.RectangleHandleCap(System.Int32,UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,UnityEngine.EventType)">
			<summary>Draw a rectangle handle. Pass this into handle functions.</summary>
		</member>
		<member name="M:UnityEditor.AssetSettingsProvider.OnFooterBarGUI()">
			<summary>Overrides SettingsProvider.OnFooterBarGUI for this AssetSettingsProvider.</summary>
		</member>
		<member name="M:UnityEditor.PrefabUtility.GetPrefabAssetPathOfNearestInstanceRoot(UnityEngine.Object)">
			<summary>Returns the asset path of the nearest Prefab instance root the specified object is part of.</summary>
		</member>
		<member name="M:UnityEditor.Handles.RectangleHandleCap(System.Int32,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Vector2,UnityEngine.EventType)">
			<summary>Draw a rectangle handle. Pass this into handle functions.</summary>
		</member>
		<member name="M:UnityEditor.PrefabUtility.GetIconForGameObject(UnityEngine.GameObject)">
			<summary>Returns the icon for the given GameObject.</summary>
		</member>
		<member name="M:UnityEditor.Handles.DotHandleCap(System.Int32,UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,UnityEngine.EventType)">
			<summary>Draw a dot handle. Pass this into handle functions.</summary>
		</member>
		<member name="M:UnityEditor.PrefabUtility.GetPrefabParent(UnityEngine.Object)">
			<summary>Returns the parent asset object of source, or null if it can't be found.</summary>
		</member>
		<member name="M:UnityEditor.Handles.CircleHandleCap(System.Int32,UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,UnityEngine.EventType)">
			<summary>Draw a circle handle. Pass this into handle functions.</summary>
		</member>
		<member name="T:UnityEditor.SpriteRect">
			<summary>Abstract class that is used by systems to encapsulate Sprite data representation. Currently this is used by Sprite Editor Window.</summary>
		</member>
		<member name="M:UnityEditor.PrefabUtility.CreateEmptyPrefab(System.String)">
			<summary>Creates an empty Prefab at given path.</summary>
		</member>
		<member name="M:UnityEditor.Handles.ArrowHandleCap(System.Int32,UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,UnityEngine.EventType)">
			<summary>Draw an arrow like those used by the move tool.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.CurveField(UnityEngine.Rect,UnityEngine.AnimationCurve,UnityEngine.Color,UnityEngine.Rect)">
			<summary>Makes a field for editing an AnimationCurve.</summary>
		</member>
		<member name="M:UnityEditor.Handles.ArrowHandleCap(System.Int32,UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,UnityEngine.EventType,UnityEngine.Vector3)">
			<summary>Draw an arrow like those used by the move tool.</summary>
		</member>
		<member name="P:UnityEditor.SpriteRect.name">
			<summary>The name of the Sprite data.</summary>
		</member>
		<member name="M:UnityEditor.PrefabUtility.SavePrefabAsset(UnityEngine.GameObject)">
			<summary>Use this function to save the version of an existing Prefab Asset that exists in memory back to disk.</summary>
		</member>
		<member name="M:UnityEditor.PrefabUtility.SavePrefabAsset(UnityEngine.GameObject,System.Boolean&)">
			<summary>Use this function to save the version of an existing Prefab Asset that exists in memory back to disk.</summary>
		</member>
		<member name="M:UnityEditor.Handles.DrawSelectionFrame(System.Int32,UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,UnityEngine.EventType)">
			<summary>Draw a camera facing selection frame.</summary>
		</member>
		<member name="P:UnityEditor.SpriteRect.pivot">
			<summary></summary>
		</member>
		<member name="M:UnityEditor.PrefabUtility.SaveAsPrefabAsset(UnityEngine.GameObject,System.String,System.Boolean&)">
			<summary>Use this function to create a Prefab Asset at the given path from the given GameObject, including any childen in the Scene without modifying the input objects.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.CurveField(UnityEngine.Rect,System.String,UnityEngine.AnimationCurve,UnityEngine.Color,UnityEngine.Rect)">
			<summary>Makes a field for editing an AnimationCurve.</summary>
		</member>
		<member name="M:UnityEditor.PrefabUtility.SaveAsPrefabAsset(UnityEngine.GameObject,System.String)">
			<summary>Use this function to create a Prefab Asset at the given path from the given GameObject, including any childen in the Scene without modifying the input objects.</summary>
		</member>
		<member name="P:UnityEditor.SpriteRect.alignment">
			<summary></summary>
		</member>
		<member name="M:UnityEditor.Handles.PositionHandle(UnityEngine.Vector3,UnityEngine.Quaternion)">
			<summary>Make a position handle.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.CurveField(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.AnimationCurve,UnityEngine.Color,UnityEngine.Rect)">
			<summary>Makes a field for editing an AnimationCurve.</summary>
		</member>
		<member name="M:UnityEditor.PrefabUtility.SaveAsPrefabAssetAndConnect(UnityEngine.GameObject,System.String,UnityEditor.InteractionMode)">
			<summary>Use this function to create a Prefab Asset at the given path from the given GameObject including any children in the Scene and at the same time make the given GameObject into an instance of the new Prefab.</summary>
		</member>
		<member name="P:UnityEditor.SpriteRect.border">
			<summary>Returns a Vector4 that represents the border of the Sprite data.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.CurveField(UnityEngine.Rect,UnityEditor.SerializedProperty,UnityEngine.Color,UnityEngine.Rect)">
			<summary>Makes a field for editing an AnimationCurve.</summary>
		</member>
		<member name="M:UnityEditor.Handles.RotationHandle(UnityEngine.Quaternion,UnityEngine.Vector3)">
			<summary>Make a Scene view rotation handle.</summary>
		</member>
		<member name="M:UnityEditor.PrefabUtility.SaveAsPrefabAssetAndConnect(UnityEngine.GameObject,System.String,UnityEditor.InteractionMode,System.Boolean&)">
			<summary>Use this function to create a Prefab Asset at the given path from the given GameObject including any children in the Scene and at the same time make the given GameObject into an instance of the new Prefab.</summary>
		</member>
		<member name="M:UnityEditor.PrefabUtility.ApplyPrefabInstance(UnityEngine.GameObject)">
			<summary>Applies all overrides on a Prefab instance to its Prefab Asset.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.CurveField(UnityEngine.Rect,UnityEditor.SerializedProperty,UnityEngine.Color,UnityEngine.Rect,UnityEngine.GUIContent)">
			<summary>Makes a field for editing an AnimationCurve.</summary>
		</member>
		<member name="P:UnityEditor.SpriteRect.rect">
			<summary></summary>
		</member>
		<member name="M:UnityEditor.Handles.ScaleHandle(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Quaternion,System.Single)">
			<summary>Make a Scene view scale handle.</summary>
		</member>
		<member name="M:UnityEditor.Handles.RadiusHandle(UnityEngine.Quaternion,UnityEngine.Vector3,System.Single,System.Boolean)">
			<summary>Make a Scene view radius handle.</summary>
		</member>
		<member name="M:UnityEditor.Handles.RadiusHandle(UnityEngine.Quaternion,UnityEngine.Vector3,System.Single)">
			<summary>Make a Scene view radius handle.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.TexturePropertySingleLine(UnityEngine.GUIContent,UnityEditor.MaterialProperty,UnityEditor.MaterialProperty)">
			<summary>Method for showing a texture property control with additional inlined properites.</summary>
		</member>
		<member name="M:UnityEditor.Handles.Slider2D(System.Int32,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEditor.Handles.CapFunction,UnityEngine.Vector2)">
			<summary>Make a 3D slider that moves along a plane defined by two axes.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.TexturePropertySingleLine(UnityEngine.GUIContent,UnityEditor.MaterialProperty,UnityEditor.MaterialProperty,UnityEditor.MaterialProperty)">
			<summary>Method for showing a texture property control with additional inlined properites.</summary>
		</member>
		<member name="M:UnityEditor.Handles.Slider2D(System.Int32,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEditor.Handles.CapFunction,UnityEngine.Vector2,System.Boolean)">
			<summary>Make a 3D slider that moves along a plane defined by two axes.</summary>
		</member>
		<member name="M:UnityEditor.Handles.Slider2D(System.Int32,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEditor.Handles.DrawCapFunction,UnityEngine.Vector2)">
			<summary>Make a 3D slider that moves along a plane defined by two axes.</summary>
		</member>
		<member name="M:UnityEditor.Handles.Slider2D(System.Int32,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEditor.Handles.DrawCapFunction,UnityEngine.Vector2,System.Boolean)">
			<summary>Make a 3D slider that moves along a plane defined by two axes.</summary>
		</member>
		<member name="M:UnityEditor.Handles.Slider2D(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEditor.Handles.CapFunction,UnityEngine.Vector2)">
			<summary>Make a 3D slider that moves along a plane defined by two axes.</summary>
		</member>
		<member name="M:UnityEditor.Handles.Slider2D(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEditor.Handles.CapFunction,UnityEngine.Vector2,System.Boolean)">
			<summary>Make a 3D slider that moves along a plane defined by two axes.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.TexturePropertyWithHDRColor(UnityEngine.GUIContent,UnityEditor.MaterialProperty,UnityEditor.MaterialProperty,UnityEditor.ColorPickerHDRConfig,System.Boolean)">
			<summary>Method for showing a texture property control with a HDR color field and its color brightness float field.</summary>
		</member>
		<member name="M:UnityEditor.Handles.Slider2D(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEditor.Handles.DrawCapFunction,UnityEngine.Vector2)">
			<summary>Make a 3D slider that moves along a plane defined by two axes.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.TexturePropertyWithHDRColor(UnityEngine.GUIContent,UnityEditor.MaterialProperty,UnityEditor.MaterialProperty,System.Boolean)">
			<summary>Method for showing a texture property control with a HDR color field and its color brightness float field.</summary>
		</member>
		<member name="M:UnityEditor.Handles.Slider2D(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEditor.Handles.DrawCapFunction,UnityEngine.Vector2,System.Boolean)">
			<summary>Make a 3D slider that moves along a plane defined by two axes.</summary>
		</member>
		<member name="M:UnityEditor.Handles.Slider2D(System.Int32,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEditor.Handles.CapFunction,UnityEngine.Vector2)">
			<summary>Make a 3D slider that moves along a plane defined by two axes.</summary>
		</member>
		<member name="M:UnityEditor.Handles.Slider2D(System.Int32,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEditor.Handles.CapFunction,UnityEngine.Vector2,System.Boolean)">
			<summary>Make a 3D slider that moves along a plane defined by two axes.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.TexturePropertyTwoLines(UnityEngine.GUIContent,UnityEditor.MaterialProperty,UnityEditor.MaterialProperty,UnityEngine.GUIContent,UnityEditor.MaterialProperty)">
			<summary>Method for showing a compact layout of properties.</summary>
		</member>
		<member name="M:UnityEditor.Handles.Slider2D(System.Int32,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEditor.Handles.DrawCapFunction,UnityEngine.Vector2)">
			<summary>Make a 3D slider that moves along a plane defined by two axes.</summary>
		</member>
		<member name="M:UnityEditor.Handles.Slider2D(System.Int32,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEditor.Handles.DrawCapFunction,UnityEngine.Vector2,System.Boolean)">
			<summary>Make a 3D slider that moves along a plane defined by two axes.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.GetRightAlignedFieldRect(UnityEngine.Rect)">
			<summary>Utility method for GUI layouting ShaderGUI.</summary>
		</member>
		<member name="M:UnityEditor.Handles.Slider2D(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEditor.Handles.CapFunction,System.Single)">
			<summary>Make a 3D slider that moves along a plane defined by two axes.</summary>
		</member>
		<member name="M:UnityEditor.Handles.Slider2D(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEditor.Handles.CapFunction,System.Single,System.Boolean)">
			<summary>Make a 3D slider that moves along a plane defined by two axes.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.GetLeftAlignedFieldRect(UnityEngine.Rect)">
			<summary>Utility method for GUI layouting ShaderGUI.</summary>
		</member>
		<member name="M:UnityEditor.Handles.Slider2D(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEditor.Handles.DrawCapFunction,System.Single)">
			<summary>Make a 3D slider that moves along a plane defined by two axes.</summary>
		</member>
		<member name="M:UnityEditor.Handles.Slider2D(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEditor.Handles.DrawCapFunction,System.Single,System.Boolean)">
			<summary>Make a 3D slider that moves along a plane defined by two axes.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.GetFlexibleRectBetweenLabelAndField(UnityEngine.Rect)">
			<summary>Utility method for GUI layouting ShaderGUI.</summary>
		</member>
		<member name="M:UnityEditor.Handles.FreeRotateHandle(UnityEngine.Quaternion,UnityEngine.Vector3,System.Single)">
			<summary>Make an unconstrained rotation handle.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.GetFlexibleRectBetweenFieldAndRightEdge(UnityEngine.Rect)">
			<summary>Utility method for GUI layouting ShaderGUI. Used e.g for the rect after a left aligned Color field.</summary>
		</member>
		<member name="M:UnityEditor.Handles.ScaleSlider(System.Single,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,System.Single)">
			<summary>Make a directional scale slider.</summary>
		</member>
		<member name="M:UnityEditor.Handles.Disc(UnityEngine.Quaternion,UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Boolean,System.Single)">
			<summary>Make a 3D disc that can be dragged with the mouse.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditor.GetRectAfterLabelWidth(UnityEngine.Rect)">
			<summary>Utility method for GUI layouting ShaderGUI. This is the rect after the label which can be used for multiple properties. The input rect can be fetched by calling: EditorGUILayout.GetControlRect.</summary>
		</member>
		<member name="M:UnityEditor.Handles.SnapValue(System.Single,System.Single)">
			<summary>Rounds the value val to the closest multiple of snap (snap can only be positive).</summary>
		</member>
		<member name="T:UnityEditor.MaterialPropertyDrawer">
			<summary>Base class to derive custom material property drawers from.</summary>
		</member>
		<member name="M:UnityEditor.MaterialPropertyDrawer.OnGUI(UnityEngine.Rect,UnityEditor.MaterialProperty,UnityEngine.GUIContent,UnityEditor.MaterialEditor)">
			<summary>Override this method to make your own GUI for the property.</summary>
		</member>
		<member name="M:UnityEditor.MaterialPropertyDrawer.OnGUI(UnityEngine.Rect,UnityEditor.MaterialProperty,System.String,UnityEditor.MaterialEditor)">
			<summary>Override this method to make your own GUI for the property.</summary>
		</member>
		<member name="M:UnityEditor.MaterialPropertyDrawer.GetPropertyHeight(UnityEditor.MaterialProperty,System.String,UnityEditor.MaterialEditor)">
			<summary>Override this method to specify how tall the GUI for this property is in pixels.</summary>
		</member>
		<member name="M:UnityEditor.Handles.DrawAAPolyLine(UnityEngine.Color[],UnityEngine.Vector3[])">
			<summary>Draw anti-aliased line specified with point array and width.</summary>
		</member>
		<member name="M:UnityEditor.MaterialPropertyDrawer.Apply(UnityEditor.MaterialProperty)">
			<summary>Apply extra initial values to the material.</summary>
		</member>
		<member name="M:UnityEditor.Handles.DrawAAPolyLine(System.Single,UnityEngine.Color[],UnityEngine.Vector3[])">
			<summary>Draw anti-aliased line specified with point array and width.</summary>
		</member>
		<member name="M:UnityEditor.Handles.DrawAAPolyLine(UnityEngine.Vector3[])">
			<summary>Draw anti-aliased line specified with point array and width.</summary>
		</member>
		<member name="M:UnityEditor.Handles.DrawAAPolyLine(System.Single,UnityEngine.Vector3[])">
			<summary>Draw anti-aliased line specified with point array and width.</summary>
		</member>
		<member name="M:UnityEditor.ModelImporterClipAnimation.ConfigureMaskFromClip(UnityEngine.AvatarMask&)">
			<summary>Copy the current masking settings from the clip to an AvatarMask.</summary>
		</member>
		<member name="M:UnityEditor.Handles.DrawAAPolyLine(UnityEngine.Texture2D,UnityEngine.Vector3[])">
			<summary>Draw anti-aliased line specified with point array and width.</summary>
		</member>
		<member name="T:UnityEditor.Highlighter">
			<summary>Use this class to highlight elements in the editor for use in in-editor tutorials and similar.</summary>
		</member>
		<member name="M:UnityEditor.Handles.DrawAAPolyLine(System.Single,System.Int32,UnityEngine.Vector3[])">
			<summary>Draw anti-aliased line specified with point array and width.</summary>
		</member>
		<member name="M:UnityEditor.Handles.DrawAAPolyLine(UnityEngine.Texture2D,System.Single,UnityEngine.Vector3[])">
			<summary>Draw anti-aliased line specified with point array and width.</summary>
		</member>
		<member name="P:UnityEditor.Highlighter.activeText">
			<summary>The text of the current active highlight.</summary>
		</member>
		<member name="M:UnityEditor.HandleUtility.DistancePointToLineSegment(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2)">
			<summary>Distance from a point p in 2d to a line segment defined by two points a and b.</summary>
		</member>
		<member name="M:UnityEditor.Handles.DrawAAConvexPolygon(UnityEngine.Vector3[])">
			<summary>Draw anti-aliased convex polygon specified with point array.</summary>
		</member>
		<member name="M:UnityEditor.ModelImporterClipAnimation.ConfigureClipFromMask(UnityEngine.AvatarMask)">
			<summary>Copy the mask settings from an AvatarMask to the clip configuration.</summary>
		</member>
		<member name="P:UnityEditor.Highlighter.activeRect">
			<summary>The rect in screenspace of the current active highlight.</summary>
		</member>
		<member name="M:UnityEditor.HandleUtility.DistanceToDisc(UnityEngine.Vector3,UnityEngine.Vector3,System.Single)">
			<summary>Pixel distance from mouse pointer to a 3D disc.</summary>
		</member>
		<member name="M:UnityEditor.Handles.DrawBezier(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,UnityEngine.Texture2D,System.Single)">
			<summary>Draw textured bezier line through start and end points with the given tangents.</summary>
		</member>
		<member name="P:UnityEditor.Highlighter.activeVisible">
			<summary>Is the current active highlight visible yet?</summary>
		</member>
		<member name="T:UnityEditor.ModelImporterGenerateMaterials">
			<summary>Material generation options for ModelImporter.</summary>
		</member>
		<member name="M:UnityEditor.HandleUtility.ClosestPointToDisc(UnityEngine.Vector3,UnityEngine.Vector3,System.Single)">
			<summary>Get the point on an disc (in 3D space) which is closest to the current mouse position.</summary>
		</member>
		<member name="M:UnityEditor.Handles.DrawWireDisc(UnityEngine.Vector3,UnityEngine.Vector3,System.Single)">
			<summary>Draw the outline of a flat disc in 3D space.</summary>
		</member>
		<member name="P:UnityEditor.Highlighter.active">
			<summary>Is there currently an active highlight?</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.InspectorTitlebar(UnityEngine.Rect,UnityEngine.Object[])">
			<summary>Makes an inspector-window-like titlebar.</summary>
		</member>
		<member name="M:UnityEditor.Handles.DrawWireArc(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Single)">
			<summary>Draw a circular arc in 3D space.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.InspectorTitlebar(UnityEngine.Rect,System.Boolean,UnityEngine.Object,System.Boolean)">
			<summary>Makes an inspector-window-like titlebar.</summary>
		</member>
		<member name="M:UnityEditor.Handles.DrawSolidRectangleWithOutline(UnityEngine.Rect,UnityEngine.Color,UnityEngine.Color)">
			<summary>Draw a solid outlined rectangle in 3D space.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.InspectorTitlebar(UnityEngine.Rect,System.Boolean,UnityEngine.Object[],System.Boolean)">
			<summary>Makes an inspector-window-like titlebar.</summary>
		</member>
		<member name="M:UnityEditor.Handles.DrawSolidRectangleWithOutline(UnityEngine.Vector3[],UnityEngine.Color,UnityEngine.Color)">
			<summary>Draw a solid outlined rectangle in 3D space.</summary>
		</member>
		<member name="M:UnityEditor.Handles.DrawSolidDisc(UnityEngine.Vector3,UnityEngine.Vector3,System.Single)">
			<summary>Draw a solid flat disc in 3D space.</summary>
		</member>
		<member name="M:UnityEditor.Handles.DrawSolidArc(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Single)">
			<summary>Draw a circular sector (pie piece) in 3D space.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.InspectorTitlebar(UnityEngine.Rect,System.Boolean,UnityEditor.Editor)">
			<summary>Makes an inspector-window-like titlebar.</summary>
		</member>
		<member name="M:UnityEditor.Handles.Label(UnityEngine.Vector3,System.String)">
			<summary>Make a text label positioned in 3D space.</summary>
		</member>
		<member name="M:UnityEditor.Handles.Label(UnityEngine.Vector3,UnityEngine.Texture)">
			<summary>Make a text label positioned in 3D space.</summary>
		</member>
		<member name="M:UnityEditor.Handles.Label(UnityEngine.Vector3,UnityEngine.GUIContent)">
			<summary>Make a text label positioned in 3D space.</summary>
		</member>
		<member name="M:UnityEditor.Highlighter.Stop()">
			<summary>Stops the active highlight.</summary>
		</member>
		<member name="M:UnityEditor.Handles.Label(UnityEngine.Vector3,System.String,UnityEngine.GUIStyle)">
			<summary>Make a text label positioned in 3D space.</summary>
		</member>
		<member name="M:UnityEditor.Handles.Label(UnityEngine.Vector3,UnityEngine.GUIContent,UnityEngine.GUIStyle)">
			<summary>Make a text label positioned in 3D space.</summary>
		</member>
		<member name="M:UnityEditor.Highlighter.Highlight(System.String,System.String)">
			<summary>Highlights an element in the editor.</summary>
		</member>
		<member name="M:UnityEditor.Highlighter.Highlight(System.String,System.String,UnityEditor.HighlightSearchMode)">
			<summary>Highlights an element in the editor.</summary>
		</member>
		<member name="M:UnityEditor.Handles.GetMainGameViewSize()">
			<summary>Get the width and height of the main game view.</summary>
		</member>
		<member name="M:UnityEditor.Highlighter.HighlightIdentifier(UnityEngine.Rect,System.String)">
			<summary>Call this method to create an identifiable rect that the Highlighter can find.</summary>
		</member>
		<member name="M:UnityEditor.Handles.ClearCamera(UnityEngine.Rect,UnityEngine.Camera)">
			<summary>Clears the camera.</summary>
		</member>
		<member name="M:UnityEditor.EditorJsonUtility.ToJson(System.Object)">
			<summary>Generate a JSON representation of an object.</summary>
		</member>
		<member name="T:UnityEditor.ModelImporterMaterialName">
			<summary>Material naming options for ModelImporter.</summary>
		</member>
		<member name="M:UnityEditor.EditorJsonUtility.ToJson(System.Object,System.Boolean)">
			<summary>Generate a JSON representation of an object.</summary>
		</member>
		<member name="T:UnityEditor.ModelImporterMaterialSearch">
			<summary>Material search options for ModelImporter.</summary>
		</member>
		<member name="T:UnityEditor.ModelImporterMaterialLocation">
			<summary>Material import options for ModelImporter.</summary>
		</member>
		<member name="M:UnityEditor.EditorJsonUtility.FromJsonOverwrite(System.String,System.Object)">
			<summary>Overwrite data in an object by reading from its JSON representation.</summary>
		</member>
		<member name="M:UnityEditor.Handles.DrawCamera(UnityEngine.Rect,UnityEngine.Camera,UnityEditor.DrawCameraMode,UnityEditor.DrawGridParameters)">
			<summary>Draws a camera inside a rectangle.</summary>
		</member>
		<member name="T:UnityEditor.ModelImporterTangentSpaceMode">
			<summary>Tangent space generation options for ModelImporter.</summary>
		</member>
		<member name="T:UnityEditor.PhysicsVisualizationSettings">
			<summary>This class contains the settings controlling the Physics Debug Visualization.</summary>
		</member>
		<member name="M:UnityEditor.Handles.DrawCamera(UnityEngine.Rect,UnityEngine.Camera)">
			<summary>Draws a camera inside a rectangle.</summary>
		</member>
		<member name="M:UnityEditor.Handles.DrawCamera(UnityEngine.Rect,UnityEngine.Camera,UnityEditor.DrawCameraMode)">
			<summary>Draws a camera inside a rectangle.</summary>
		</member>
		<member name="P:UnityEditor.PhysicsVisualizationSettings.devOptions">
			<summary>Shows extra options used to develop and debug the physics visualization.</summary>
		</member>
		<member name="M:UnityEditor.Handles.SetCamera(UnityEngine.Camera)">
			<summary>Set the current camera so all Handles and Gizmos are draw with its settings.</summary>
		</member>
		<member name="M:UnityEditor.Handles.SetCamera(UnityEngine.Rect,UnityEngine.Camera)">
			<summary>Set the current camera so all Handles and Gizmos are draw with its settings.</summary>
		</member>
		<member name="P:UnityEditor.PhysicsVisualizationSettings.dirtyCount">
			<summary>Dirty marker used for refreshing the GUI.</summary>
		</member>
		<member name="M:UnityEditor.Handles.BeginGUI()">
			<summary>Begin a 2D GUI block inside the 3D handle GUI.</summary>
		</member>
		<member name="P:UnityEditor.PhysicsVisualizationSettings.showCollisionGeometry">
			<summary>Should the PhysicsDebugWindow display the collision geometry.</summary>
		</member>
		<member name="M:UnityEditor.Handles.BeginGUI(UnityEngine.Rect)">
			<summary>Begin a 2D GUI block inside the 3D handle GUI.</summary>
		</member>
		<member name="P:UnityEditor.PhysicsVisualizationSettings.enableMouseSelect">
			<summary>Enables the mouse-over highlighting and mouse selection modes.</summary>
		</member>
		<member name="M:UnityEditor.Handles.EndGUI()">
			<summary>End a 2D GUI block and get back to the 3D handle GUI.</summary>
		</member>
		<member name="P:UnityEditor.PhysicsVisualizationSettings.useSceneCam">
			<summary>Controls whether the SceneView or the GameView camera is used. Not shown in the UI.</summary>
		</member>
		<member name="M:UnityEditor.Handles.MakeBezierPoints(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,System.Int32)">
			<summary>Retuns an array of points to representing the bezier curve.</summary>
		</member>
		<member name="P:UnityEditor.PhysicsVisualizationSettings.viewDistance">
			<summary>Colliders within this distance will be displayed.</summary>
		</member>
		<member name="P:UnityEditor.PhysicsVisualizationSettings.terrainTilesMax">
			<summary>Maximum number of mesh tiles available to draw all Terrain Colliders.</summary>
		</member>
		<member name="M:UnityEditor.Handles.TransformHandle(UnityEngine.Vector3&,UnityEngine.Quaternion&,UnityEngine.Vector3&)">
			<summary>Creates a transform handle.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.ObjectField(UnityEditor.SerializedProperty,UnityEngine.GUIContent,UnityEngine.GUILayoutOption[])">
			<summary>Make a field to receive any object type.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.ObjectField(UnityEditor.SerializedProperty,System.Type,UnityEngine.GUILayoutOption[])">
			<summary>Make a field to receive any object type.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.ProgressBar(UnityEngine.Rect,System.Single,System.String)">
			<summary>Makes a progress bar.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.HelpBox(UnityEngine.Rect,System.String,UnityEditor.MessageType)">
			<summary>Makes a help box with a message to the user.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.ObjectField(UnityEditor.SerializedProperty,System.Type,UnityEngine.GUIContent,UnityEngine.GUILayoutOption[])">
			<summary>Make a field to receive any object type.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.PrefixLabel(UnityEngine.Rect,UnityEngine.GUIContent)">
			<summary>Makes a label in front of some control.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.PrefixLabel(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.GUIStyle)">
			<summary>Makes a label in front of some control.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.PrefixLabel(UnityEngine.Rect,System.Int32,UnityEngine.GUIContent)">
			<summary>Makes a label in front of some control.</summary>
		</member>
		<member name="T:UnityEditor.RestService.Logger">
			<summary>Initializes a new instance of the Logger.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.PrefixLabel(UnityEngine.Rect,System.Int32,UnityEngine.GUIContent,UnityEngine.GUIStyle)">
			<summary>Makes a label in front of some control.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.ObjectField(UnityEditor.SerializedProperty,System.Type,UnityEngine.GUIContent,UnityEditor.EditorGUI.ObjectFieldValidator,UnityEngine.GUILayoutOption[])">
			<summary>Make a field to receive any object type.</summary>
		</member>
		<member name="P:UnityEditor.PhysicsVisualizationSettings.forceOverdraw">
			<summary>Forcing the drawing of Colliders on top of any other geometry, regardless of depth.</summary>
		</member>
		<member name="M:UnityEditor.RestService.Logger.Log(System.Exception)">
			<summary>Logs message to the Unity Console using default logger.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.BeginProperty(UnityEngine.Rect,UnityEngine.GUIContent,UnityEditor.SerializedProperty)">
			<summary>Create a Property wrapper, useful for making regular GUI controls work with SerializedProperty.</summary>
		</member>
		<member name="M:UnityEditor.RestService.Logger.Log(System.String)">
			<summary>Logs message to the Unity Console using default logger.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.EndProperty()">
			<summary>Ends a Property wrapper started with BeginProperty.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.GetPropertyHeight(UnityEditor.SerializedPropertyType,UnityEngine.GUIContent)">
			<summary>Get the height needed for a PropertyField control.</summary>
		</member>
		<member name="P:UnityEditor.PhysicsVisualizationSettings.staticColor">
			<summary>Color for Colliders that do not have a Rigidbody component.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.CanCacheInspectorGUI(UnityEditor.SerializedProperty)">
			<summary>Get whether a SerializedProperty's inspector GUI can be cached.</summary>
		</member>
		<member name="P:UnityEditor.PhysicsVisualizationSettings.rigidbodyColor">
			<summary>Color for Rigidbodies, primarily active ones.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.DropdownButton(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.FocusType)">
			<summary>Makes a button that reacts to mouse down, for displaying your own dropdown content.</summary>
		</member>
		<member name="P:UnityEditor.PhysicsVisualizationSettings.kinematicColor">
			<summary>Color for kinematic Rigidbodies.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.DropdownButton(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.FocusType,UnityEngine.GUIStyle)">
			<summary>Makes a button that reacts to mouse down, for displaying your own dropdown content.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.DropdownButton(System.Int32,UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.GUIStyle)">
			<summary>Makes a button that reacts to mouse down, for displaying your own dropdown content.</summary>
		</member>
		<member name="M:UnityEditor.Handles.TransformHandle(UnityEngine.Vector3&,UnityEngine.Quaternion,UnityEngine.Vector3&)">
			<summary>Creates a transform handle.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.Vector2Field(System.String,UnityEngine.Vector2,UnityEngine.GUILayoutOption[])">
			<summary>Make an X &amp; Y field for entering a Vector2.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.Vector2Field(UnityEngine.GUIContent,UnityEngine.Vector2,UnityEngine.GUILayoutOption[])">
			<summary>Make an X &amp; Y field for entering a Vector2.</summary>
		</member>
		<member name="M:UnityEditor.Handles.TransformHandle(UnityEngine.Vector3,UnityEngine.Quaternion&,UnityEngine.Vector3&)">
			<summary>Creates a transform handle.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.Vector3Field(System.String,UnityEngine.Vector3,UnityEngine.GUILayoutOption[])">
			<summary>Make an X, Y &amp; Z field for entering a Vector3.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.Vector3Field(UnityEngine.GUIContent,UnityEngine.Vector3,UnityEngine.GUILayoutOption[])">
			<summary>Make an X, Y &amp; Z field for entering a Vector3.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.Vector4Field(System.String,UnityEngine.Vector4,UnityEngine.GUILayoutOption[])">
			<summary>Make an X, Y, Z &amp; W field for entering a Vector4.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.Vector4Field(UnityEngine.GUIContent,UnityEngine.Vector4,UnityEngine.GUILayoutOption[])">
			<summary>Make an X, Y, Z &amp; W field for entering a Vector4.</summary>
		</member>
		<member name="M:UnityEditor.Handles.TransformHandle(UnityEngine.Vector3&,UnityEngine.Quaternion&,System.Single&)">
			<summary>Creates a transform handle.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.Vector2IntField(System.String,UnityEngine.Vector2Int,UnityEngine.GUILayoutOption[])">
			<summary>Make an X &amp; Y integer field for entering a Vector2Int.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.Vector2IntField(UnityEngine.GUIContent,UnityEngine.Vector2Int,UnityEngine.GUILayoutOption[])">
			<summary>Make an X &amp; Y integer field for entering a Vector2Int.</summary>
		</member>
		<member name="P:UnityEditor.PhysicsVisualizationSettings.triggerColor">
			<summary>Color for Colliders that are Triggers.</summary>
		</member>
		<member name="M:UnityEditor.Handles.TransformHandle(UnityEngine.Vector3&,UnityEngine.Quaternion,System.Single&)">
			<summary>Creates a transform handle.</summary>
		</member>
		<member name="M:UnityEditor.DecoratorDrawer.CanCacheInspectorGUI()">
			<summary>Override this method to determine whether the inspector GUI for your decorator can be cached.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.Vector3IntField(System.String,UnityEngine.Vector3Int,UnityEngine.GUILayoutOption[])">
			<summary>Make an X, Y &amp; Z integer field for entering a Vector3Int.</summary>
		</member>
		<member name="P:UnityEditor.PhysicsVisualizationSettings.sleepingBodyColor">
			<summary>Color for Rigidbodies that are controlled by the physics simulator, but are not currently being simulated.</summary>
		</member>
		<member name="M:UnityEditor.Handles.TransformHandle(UnityEngine.Vector3,UnityEngine.Quaternion&,System.Single&)">
			<summary>Creates a transform handle.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.Vector3IntField(UnityEngine.GUIContent,UnityEngine.Vector3Int,UnityEngine.GUILayoutOption[])">
			<summary>Make an X, Y &amp; Z integer field for entering a Vector3Int.</summary>
		</member>
		<member name="M:UnityEditor.Handles.TransformHandle(UnityEngine.Vector3&,UnityEngine.Quaternion&)">
			<summary>Creates a transform handle.</summary>
		</member>
		<member name="P:UnityEditor.PhysicsVisualizationSettings.baseAlpha">
			<summary>Alpha amount used for transparency blending.</summary>
		</member>
		<member name="M:UnityEditor.Handles.TransformHandle(UnityEditor.Handles.TransformHandleIds,UnityEngine.Vector3&,UnityEngine.Quaternion&,UnityEngine.Vector3&,UnityEditor.Handles.TransformHandleParam)">
			<summary>Creates a transform handle.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.RectField(UnityEngine.Rect,UnityEngine.GUILayoutOption[])">
			<summary>Make an X, Y, W &amp; H field for entering a Rect.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.RectField(System.String,UnityEngine.Rect,UnityEngine.GUILayoutOption[])">
			<summary>Make an X, Y, W &amp; H field for entering a Rect.</summary>
		</member>
		<member name="P:UnityEditor.PhysicsVisualizationSettings.colorVariance">
			<summary>Used to disinguish neighboring Colliders.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.RectField(UnityEngine.GUIContent,UnityEngine.Rect,UnityEngine.GUILayoutOption[])">
			<summary>Make an X, Y, W &amp; H field for entering a Rect.</summary>
		</member>
		<member name="T:UnityEditor.Handles.DrawingScope">
			<summary>Disposable helper struct for automatically setting and reverting Handles.color and/or Handles.matrix.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.RectIntField(UnityEngine.RectInt,UnityEngine.GUILayoutOption[])">
			<summary>Make an X, Y, W &amp; H field for entering a RectInt.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.RectIntField(System.String,UnityEngine.RectInt,UnityEngine.GUILayoutOption[])">
			<summary>Make an X, Y, W &amp; H field for entering a RectInt.</summary>
		</member>
		<member name="T:UnityEditor.Handles.CapFunction">
			<summary>The function to use for drawing the handle e.g. Handles.RectangleCap.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.RectIntField(UnityEngine.GUIContent,UnityEngine.RectInt,UnityEngine.GUILayoutOption[])">
			<summary>Make an X, Y, W &amp; H field for entering a RectInt.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.BoundsField(UnityEngine.Bounds,UnityEngine.GUILayoutOption[])">
			<summary>Make Center &amp; Extents field for entering a Bounds.</summary>
		</member>
		<member name="T:UnityEditor.MacFullscreenMode">
			<summary>Mac fullscreen mode.</summary>
		</member>
		<member name="M:UnityEditor.PhysicsVisualizationSettings.Reset()">
			<summary>Resets the visualization options to their default state.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.BoundsField(System.String,UnityEngine.Bounds,UnityEngine.GUILayoutOption[])">
			<summary>Make Center &amp; Extents field for entering a Bounds.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.BoundsField(UnityEngine.GUIContent,UnityEngine.Bounds,UnityEngine.GUILayoutOption[])">
			<summary>Make Center &amp; Extents field for entering a Bounds.</summary>
		</member>
		<member name="T:UnityEditor.D3D9FullscreenMode">
			<summary>Direct3D 9 fullscreen mode.</summary>
		</member>
		<member name="M:UnityEditor.PhysicsVisualizationSettings.GetShowStaticColliders()">
			<summary>Should the Colliders without a Rigidbody component be considered by the display filter.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.BoundsIntField(UnityEngine.BoundsInt,UnityEngine.GUILayoutOption[])">
			<summary>Make Position &amp; Size field for entering a BoundsInt.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.BoundsIntField(System.String,UnityEngine.BoundsInt,UnityEngine.GUILayoutOption[])">
			<summary>Make Position &amp; Size field for entering a BoundsInt.</summary>
		</member>
		<member name="M:UnityEditor.PhysicsVisualizationSettings.SetShowStaticColliders(System.Boolean)">
			<summary>Should the Colliders without a Rigidbody component be considered by the display filter.</summary>
		</member>
		<member name="T:UnityEditor.D3D11FullscreenMode">
			<summary>Direct3D 11 fullscreen mode.</summary>
		</member>
		<member name="T:UnityEditor.SketchUpImportCamera">
			<summary>Structure to hold camera data extracted from a SketchUp file.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.DrawTextureAlpha(UnityEngine.Rect,UnityEngine.Texture,UnityEngine.ScaleMode,System.Single,System.Single)">
			<summary>Draws the alpha channel of a texture within a rectangle.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.DrawTextureAlpha(UnityEngine.Rect,UnityEngine.Texture)">
			<summary>Draws the alpha channel of a texture within a rectangle.</summary>
		</member>
		<member name="F:UnityEditor.SketchUpImportCamera.position">
			<summary>The position of the camera.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.DrawTextureAlpha(UnityEngine.Rect,UnityEngine.Texture,UnityEngine.ScaleMode)">
			<summary>Draws the alpha channel of a texture within a rectangle.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.DrawTextureAlpha(UnityEngine.Rect,UnityEngine.Texture,UnityEngine.ScaleMode,System.Single)">
			<summary>Draws the alpha channel of a texture within a rectangle.</summary>
		</member>
		<member name="F:UnityEditor.SketchUpImportCamera.lookAt">
			<summary>The position the camera is looking at.</summary>
		</member>
		<member name="M:UnityEditor.PhysicsVisualizationSettings.GetShowTriggers()">
			<summary>Should the triggers be considered by the display filter.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.DrawPreviewTexture(UnityEngine.Rect,UnityEngine.Texture,UnityEngine.Material,UnityEngine.ScaleMode,System.Single,System.Single,UnityEngine.Rendering.ColorWriteMask)">
			<summary>Draws the texture within a rectangle.</summary>
		</member>
		<member name="F:UnityEditor.SketchUpImportCamera.up">
			<summary>Up vector of the camera.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.DrawPreviewTexture(UnityEngine.Rect,UnityEngine.Texture,UnityEngine.Material,UnityEngine.ScaleMode,System.Single,System.Single)">
			<summary>Draws the texture within a rectangle.</summary>
		</member>
		<member name="M:UnityEditor.PhysicsVisualizationSettings.SetShowTriggers(System.Boolean)">
			<summary>Should the triggers be considered by the display filter.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.DrawPreviewTexture(UnityEngine.Rect,UnityEngine.Texture,UnityEngine.Material,UnityEngine.ScaleMode,System.Single)">
			<summary>Draws the texture within a rectangle.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.DrawPreviewTexture(UnityEngine.Rect,UnityEngine.Texture,UnityEngine.Material,UnityEngine.ScaleMode)">
			<summary>Draws the texture within a rectangle.</summary>
		</member>
		<member name="F:UnityEditor.SketchUpImportCamera.fieldOfView">
			<summary>Field of view of the camera.</summary>
		</member>
		<member name="M:UnityEditor.PhysicsVisualizationSettings.GetShowRigidbodies()">
			<summary>Should any Rigidbodies be considered by the display filter.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.DrawPreviewTexture(UnityEngine.Rect,UnityEngine.Texture,UnityEngine.Material)">
			<summary>Draws the texture within a rectangle.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.DrawPreviewTexture(UnityEngine.Rect,UnityEngine.Texture)">
			<summary>Draws the texture within a rectangle.</summary>
		</member>
		<member name="F:UnityEditor.SketchUpImportCamera.aspectRatio">
			<summary>Aspect ratio of the camera.</summary>
		</member>
		<member name="M:UnityEditor.PhysicsVisualizationSettings.SetShowRigidbodies(System.Boolean)">
			<summary>Should any Rigidbodies be considered by the display filter.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.LabelField(UnityEngine.Rect,System.String)">
			<summary>Makes a label field. (Useful for showing read-only info.)</summary>
		</member>
		<member name="F:UnityEditor.SketchUpImportCamera.orthoSize">
			<summary>The orthogonal projection size of the camera. This value only make sense if SketchUpImportCamera.isPerspective is false.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.LabelField(UnityEngine.Rect,System.String,UnityEngine.GUIStyle)">
			<summary>Makes a label field. (Useful for showing read-only info.)</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.LabelField(UnityEngine.Rect,UnityEngine.GUIContent)">
			<summary>Makes a label field. (Useful for showing read-only info.)</summary>
		</member>
		<member name="M:UnityEditor.PhysicsVisualizationSettings.GetShowKinematicBodies()">
			<summary>Should the kinematic Rigidbodies be considered by the display filter.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.LabelField(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.GUIStyle)">
			<summary>Makes a label field. (Useful for showing read-only info.)</summary>
		</member>
		<member name="F:UnityEditor.SketchUpImportCamera.nearPlane">
			<summary>The far clipping plane distance.</summary>
		</member>
		<member name="T:UnityEditor.HighlightSearchMode">
			<summary>Used to specify how to find a given element in the editor to highlight.</summary>
		</member>
		<member name="M:UnityEditor.PhysicsVisualizationSettings.SetShowKinematicBodies(System.Boolean)">
			<summary>Should the kinematic Rigidbodies be considered by the display filter.</summary>
		</member>
		<member name="T:UnityEditor.StereoRenderingPath">
			<summary>Enum used to specify what stereo rendering path to use.</summary>
		</member>
		<member name="M:UnityEditor.PhysicsVisualizationSettings.GetShowSleepingBodies()">
			<summary>Should the sleeping Rigidbodies be considered by the display filter.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.LabelField(UnityEngine.Rect,System.String,System.String)">
			<summary>Makes a label field. (Useful for showing read-only info.)</summary>
		</member>
		<member name="M:UnityEditor.PhysicsVisualizationSettings.SetShowSleepingBodies(System.Boolean)">
			<summary>Should the sleeping Rigidbodies be considered by the display filter.</summary>
		</member>
		<member name="F:UnityEditor.SketchUpImportCamera.farPlane">
			<summary>The near clipping plane distance.</summary>
		</member>
		<member name="T:UnityEditor.StrippingLevel">
			<summary>Managed code stripping level.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.BoundsIntField(UnityEngine.GUIContent,UnityEngine.BoundsInt,UnityEngine.GUILayoutOption[])">
			<summary>Make Position &amp; Size field for entering a BoundsInt.</summary>
		</member>
		<member name="F:UnityEditor.SketchUpImportCamera.isPerspective">
			<summary>Indicate if the camera is using a perspective or orthogonal projection.</summary>
		</member>
		<member name="M:UnityEditor.PhysicsVisualizationSettings.GetShowCollisionLayer(System.Int32)">
			<summary>Should the given layer be considered by the display filter.</summary>
		</member>
		<member name="T:UnityEditor.ScriptCallOptimizationLevel">
			<summary>Script call optimization level.</summary>
		</member>
		<member name="T:UnityEditor.SketchUpImportScene">
			<summary>Structure to hold scene data extracted from a SketchUp file.</summary>
		</member>
		<member name="M:UnityEditor.PhysicsVisualizationSettings.SetShowCollisionLayer(System.Int32,System.Boolean)">
			<summary>Should the given layer be considered by the display filter.</summary>
		</member>
		<member name="T:UnityEditor.UIOrientation">
			<summary>Default mobile device orientation.</summary>
		</member>
		<member name="F:UnityEditor.SketchUpImportScene.camera">
			<summary>The camera data of the SketchUp scene.</summary>
		</member>
		<member name="M:UnityEditor.PhysicsVisualizationSettings.GetShowCollisionLayerMask()">
			<summary>Should the mask representing the layers be considered by the display filter.</summary>
		</member>
		<member name="T:UnityEditor.ScriptingRuntimeVersion">
			<summary>Available scripting runtimes to be used by the Editor and Players.</summary>
		</member>
		<member name="F:UnityEditor.SketchUpImportScene.name">
			<summary>The name of the SketchUp scene.</summary>
		</member>
		<member name="M:UnityEditor.PhysicsVisualizationSettings.SetShowCollisionLayerMask(System.Int32)">
			<summary>Should the mask representing the layers be considered by the display filter.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.LabelField(UnityEngine.Rect,System.String,System.String,UnityEngine.GUIStyle)">
			<summary>Makes a label field. (Useful for showing read-only info.)</summary>
		</member>
		<member name="T:UnityEditor.SketchUpImporter">
			<summary>Derives from AssetImporter to handle importing of SketchUp files.</summary>
		</member>
		<member name="T:UnityEditor.ApiCompatibilityLevel">
			<summary>.NET API compatibility level.</summary>
		</member>
		<member name="M:UnityEditor.PhysicsVisualizationSettings.GetShowBoxColliders()">
			<summary>Should BoxColliders be shown.</summary>
		</member>
		<member name="P:UnityEditor.SketchUpImporter.latitude">
			<summary>Retrieves the latitude Geo Coordinate imported from the SketchUp file.</summary>
		</member>
		<member name="M:UnityEditor.PhysicsVisualizationSettings.SetShowBoxColliders(System.Boolean)">
			<summary>Should BoxColliders be shown.</summary>
		</member>
		<member name="P:UnityEditor.SketchUpImporter.longitude">
			<summary>Retrieves the longitude Geo Coordinate imported from the SketchUp file.</summary>
		</member>
		<member name="T:UnityEditor.ManagedStrippingLevel">
			<summary>Defines how aggressively Unity strips unused managed (C#) code.</summary>
		</member>
		<member name="M:UnityEditor.PhysicsVisualizationSettings.GetShowSphereColliders()">
			<summary>Should SphereColliders be shown.</summary>
		</member>
		<member name="P:UnityEditor.SketchUpImporter.northCorrection">
			<summary>Retrieves the north correction value imported from the SketchUp file.</summary>
		</member>
		<member name="T:UnityEditor.ActionOnDotNetUnhandledException">
			<summary>The behavior in case of unhandled .NET exception.</summary>
		</member>
		<member name="M:UnityEditor.PhysicsVisualizationSettings.SetShowSphereColliders(System.Boolean)">
			<summary>Should SphereColliders be shown.</summary>
		</member>
		<member name="M:UnityEditor.SketchUpImporter.GetScenes()">
			<summary>The method returns an array of SketchUpImportScene which represents SketchUp scenes.</summary>
		</member>
		<member name="T:UnityEditor.SplashScreenStyle">
			<summary>The style of builtin splash screen to use.</summary>
		</member>
		<member name="M:UnityEditor.PhysicsVisualizationSettings.GetShowCapsuleColliders()">
			<summary>Should CapsuleColliders be shown.</summary>
		</member>
		<member name="M:UnityEditor.SketchUpImporter.GetDefaultCamera()">
			<summary>The default camera or the camera of the active Scene which the SketchUp file was saved with.</summary>
		</member>
		<member name="M:UnityEditor.PhysicsVisualizationSettings.SetShowCapsuleColliders(System.Boolean)">
			<summary>Should CapsuleColliders be shown.</summary>
		</member>
		<member name="T:UnityEditor.GraphicsJobMode">
			<summary>Enum used to specify the graphics jobs mode to use.</summary>
		</member>
		<member name="M:UnityEditor.PhysicsVisualizationSettings.GetShowMeshColliders(UnityEditor.PhysicsVisualizationSettings.MeshColliderType)">
			<summary>Should MeshColliders be shown.</summary>
		</member>
		<member name="T:UnityEditor.IconKind">
			<summary>Icon kind.</summary>
		</member>
		<member name="M:UnityEditor.PhysicsVisualizationSettings.SetShowMeshColliders(UnityEditor.PhysicsVisualizationSettings.MeshColliderType,System.Boolean)">
			<summary>Should MeshColliders be shown.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.LabelField(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.GUIContent)">
			<summary>Makes a label field. (Useful for showing read-only info.)</summary>
		</member>
		<member name="M:UnityEditor.PhysicsVisualizationSettings.GetShowTerrainColliders()">
			<summary>Should TerrainColliders be shown.</summary>
		</member>
		<member name="T:UnityEditor.PlayerSettings">
			<summary>Player Settings is where you define various parameters for the final game that you will build in Unity. Some of these values are used in the Resolution Dialog that launches when you open a standalone game.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.LabelField(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.GUIContent,UnityEngine.GUIStyle)">
			<summary>Makes a label field. (Useful for showing read-only info.)</summary>
		</member>
		<member name="M:UnityEditor.PhysicsVisualizationSettings.SetShowTerrainColliders(System.Boolean)">
			<summary>Should TerrainColliders be shown.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.ToggleLeft(UnityEngine.Rect,System.String,System.Boolean)">
			<summary>Makes a toggle field where the toggle is to the left and the label immediately to the right of it.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.ToggleLeft(UnityEngine.Rect,System.String,System.Boolean,UnityEngine.GUIStyle)">
			<summary>Makes a toggle field where the toggle is to the left and the label immediately to the right of it.</summary>
		</member>
		<member name="P:UnityEditor.PlayerSettings.companyName">
			<summary>The name of your company.</summary>
		</member>
		<member name="M:UnityEditor.PhysicsVisualizationSettings.GetShowPhysicsSceneMask()">
			<summary>Return a mask representing scenes that are enabled by display filter</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.ToggleLeft(UnityEngine.Rect,UnityEngine.GUIContent,System.Boolean)">
			<summary>Makes a toggle field where the toggle is to the left and the label immediately to the right of it.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.ToggleLeft(UnityEngine.Rect,UnityEngine.GUIContent,System.Boolean,UnityEngine.GUIStyle)">
			<summary>Makes a toggle field where the toggle is to the left and the label immediately to the right of it.</summary>
		</member>
		<member name="P:UnityEditor.PlayerSettings.productName">
			<summary>The name of your product.</summary>
		</member>
		<member name="M:UnityEditor.PhysicsVisualizationSettings.SetShowPhysicsSceneMask(System.Int32)">
			<summary>Should the scene mask be considered by the display filter.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.TextField(UnityEngine.Rect,System.String)">
			<summary>Makes a text field.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.TextField(UnityEngine.Rect,System.String,UnityEngine.GUIStyle)">
			<summary>Makes a text field.</summary>
		</member>
		<member name="P:UnityEditor.PlayerSettings.showUnitySplashScreen">
			<summary>Should the builtin Unity splash screen be shown?</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.TextField(UnityEngine.Rect,System.String,System.String)">
			<summary>Makes a text field.</summary>
		</member>
		<member name="M:UnityEditor.PhysicsVisualizationSettings.InitDebugDraw()">
			<summary>Initializes the physics debug visualization system. The system must be initialized for any physics objects to be visualized. It is normally initialized by the PhysicsDebugWindow.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.TextField(UnityEngine.Rect,System.String,System.String,UnityEngine.GUIStyle)">
			<summary>Makes a text field.</summary>
		</member>
		<member name="P:UnityEditor.PlayerSettings.splashScreenStyle">
			<summary>The style to use for the builtin Unity splash screen.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.TextField(UnityEngine.Rect,UnityEngine.GUIContent,System.String)">
			<summary>Makes a text field.</summary>
		</member>
		<member name="M:UnityEditor.PhysicsVisualizationSettings.DeinitDebugDraw()">
			<summary>Deinitializes the physics debug visualization system and tracking of changes Colliders.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.TextField(UnityEngine.Rect,UnityEngine.GUIContent,System.String,UnityEngine.GUIStyle)">
			<summary>Makes a text field.</summary>
		</member>
		<member name="P:UnityEditor.PlayerSettings.cloudProjectId">
			<summary>A unique cloud project identifier. It is unique for every project (Read Only).</summary>
		</member>
		<member name="M:UnityEditor.PhysicsVisualizationSettings.ClearMouseHighlight()">
			<summary>Clears the highlighted Collider.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.DelayedTextField(UnityEngine.Rect,System.String)">
			<summary>Makes a delayed text field.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.DelayedTextField(UnityEngine.Rect,System.String,UnityEngine.GUIStyle)">
			<summary>Makes a delayed text field.</summary>
		</member>
		<member name="P:UnityEditor.PlayerSettings.colorSpace">
			<summary>Set the rendering color space for the current project.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.DelayedTextField(UnityEngine.Rect,System.String,System.String)">
			<summary>Makes a delayed text field.</summary>
		</member>
		<member name="M:UnityEditor.PhysicsVisualizationSettings.HasMouseHighlight()">
			<summary>Returns true if there currently is any kind of physics object highlighted.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.DelayedTextField(UnityEngine.Rect,System.String,System.String,UnityEngine.GUIStyle)">
			<summary>Makes a delayed text field.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.DelayedTextField(UnityEngine.Rect,UnityEngine.GUIContent,System.String)">
			<summary>Makes a delayed text field.</summary>
		</member>
		<member name="P:UnityEditor.PlayerSettings.defaultScreenWidth">
			<summary>Default horizontal dimension of stand-alone player window.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.DelayedTextField(UnityEngine.Rect,UnityEngine.GUIContent,System.String,UnityEngine.GUIStyle)">
			<summary>Makes a delayed text field.</summary>
		</member>
		<member name="M:UnityEditor.PhysicsVisualizationSettings.UpdateMouseHighlight(UnityEngine.Vector2)">
			<summary>Updates the mouse-over highlight at the given mouse position in screen space.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.DelayedTextField(UnityEngine.Rect,UnityEditor.SerializedProperty)">
			<summary>Makes a delayed text field.</summary>
		</member>
		<member name="P:UnityEditor.PlayerSettings.defaultScreenHeight">
			<summary>Default vertical dimension of stand-alone player window.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.DelayedTextField(UnityEngine.Rect,UnityEditor.SerializedProperty,UnityEngine.GUIContent)">
			<summary>Makes a delayed text field.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.DelayedTextField(UnityEngine.Rect,UnityEngine.GUIContent,System.Int32,System.String)">
			<summary>Makes a delayed text field.</summary>
		</member>
		<member name="T:UnityEditor.ResolutionDialogSetting">
			<summary>Resolution dialog setting.</summary>
		</member>
		<member name="T:UnityEditor.ScriptingImplementation">
			<summary>Scripting implementation (backend).</summary>
		</member>
		<member name="P:UnityEditor.PlayerSettings.defaultWebScreenWidth">
			<summary>Default horizontal dimension of web player window.</summary>
		</member>
		<member name="P:UnityEditor.PlayerSettings.defaultWebScreenHeight">
			<summary>Default vertical dimension of web player window.</summary>
		</member>
		<member name="P:UnityEditor.PlayerSettings.displayResolutionDialog">
			<summary>Defines the behaviour of the Resolution Dialog on product launch.</summary>
		</member>
		<member name="T:UnityEditor.UndoPropertyModification">
			<summary>See Also: Undo.postprocessModifications.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.DelayedTextField(UnityEngine.Rect,UnityEngine.GUIContent,System.Int32,System.String,UnityEngine.GUIStyle)">
			<summary>Makes a delayed text field.</summary>
		</member>
		<member name="P:UnityEditor.PlayerSettings.defaultIsFullScreen">
			<summary>If enabled, the game will default to fullscreen mode.</summary>
		</member>
		<member name="T:UnityEditor.CloudProjectSettings">
			<summary>Use this class to retrieve information about the currently selected project and the current Unity ID that is logged in.</summary>
		</member>
		<member name="P:UnityEditor.PlayerSettings.macRetinaSupport">
			<summary>Enable Retina support for macOS.</summary>
		</member>
		<member name="P:UnityEditor.CloudProjectSettings.userId">
			<summary>The user ID of the currently logged-in Unity ID account (Read Only).</summary>
		</member>
		<member name="P:UnityEditor.PlayerSettings.runInBackground">
			<summary>If enabled, your game will continue to run after lost focus.</summary>
		</member>
		<member name="P:UnityEditor.CloudProjectSettings.userName">
			<summary>The user name of the currently logged in Unity ID account (Read Only).</summary>
		</member>
		<member name="M:UnityEditor.PhysicsVisualizationSettings.SetShowForAllFilters(System.Boolean)">
			<summary>Enables or disables all filtering items.</summary>
		</member>
		<member name="M:UnityEditor.PrefabUtility.CreatePrefab(System.String,UnityEngine.GameObject)">
			<summary>Creates a Prefab from a game object hierarchy.</summary>
		</member>
		<member name="M:UnityEditor.PhysicsVisualizationSettings.GetShowStaticColliders(UnityEditor.PhysicsVisualizationSettings.FilterWorkflow)">
			<summary>Should the Colliders without a Rigidbody component be considered by the display filter.</summary>
		</member>
		<member name="M:UnityEditor.PrefabUtility.CreatePrefab(System.String,UnityEngine.GameObject,UnityEditor.ReplacePrefabOptions)">
			<summary>Creates a Prefab from a game object hierarchy.</summary>
		</member>
		<member name="M:UnityEditor.PhysicsVisualizationSettings.SetShowStaticColliders(UnityEditor.PhysicsVisualizationSettings.FilterWorkflow,System.Boolean)">
			<summary>Should the Colliders without a Rigidbody component be considered by the display filter.</summary>
		</member>
		<member name="M:UnityEditor.PhysicsVisualizationSettings.GetShowTriggers(UnityEditor.PhysicsVisualizationSettings.FilterWorkflow)">
			<summary>Should the triggers be considered by the display filter.</summary>
		</member>
		<member name="M:UnityEditor.PrefabUtility.InstantiatePrefab(UnityEngine.Object)">
			<summary>Instantiates the given Prefab in a given Scene.</summary>
		</member>
		<member name="M:UnityEditor.PrefabUtility.InstantiatePrefab(UnityEngine.Object,UnityEngine.SceneManagement.Scene)">
			<summary>Instantiates the given Prefab in a given Scene.</summary>
		</member>
		<member name="M:UnityEditor.PhysicsVisualizationSettings.SetShowTriggers(UnityEditor.PhysicsVisualizationSettings.FilterWorkflow,System.Boolean)">
			<summary>Should the triggers be considered by the display filter.</summary>
		</member>
		<member name="M:UnityEditor.PrefabUtility.InstantiatePrefab(UnityEngine.Object,UnityEngine.Transform)">
			<summary>Instantiates the given Prefab in a given Scene.</summary>
		</member>
		<member name="M:UnityEditor.PhysicsVisualizationSettings.GetShowRigidbodies(UnityEditor.PhysicsVisualizationSettings.FilterWorkflow)">
			<summary>Should any Rigidbodies be considered by the display filter.</summary>
		</member>
		<member name="M:UnityEditor.PrefabUtility.ReplacePrefab(UnityEngine.GameObject,UnityEngine.Object)">
			<summary>Replaces the targetPrefab with a copy of the game object hierarchy go.</summary>
		</member>
		<member name="M:UnityEditor.PrefabUtility.ReplacePrefab(UnityEngine.GameObject,UnityEngine.Object,UnityEditor.ReplacePrefabOptions)">
			<summary>Replaces the targetPrefab with a copy of the game object hierarchy go.</summary>
		</member>
		<member name="M:UnityEditor.PhysicsVisualizationSettings.SetShowRigidbodies(UnityEditor.PhysicsVisualizationSettings.FilterWorkflow,System.Boolean)">
			<summary>Should any Rigidbodies be considered by the display filter.</summary>
		</member>
		<member name="M:UnityEditor.PrefabUtility.GetCorrespondingObjectFromSource(TObject)">
			<summary>Returns the corresponding asset object of source, or null if it can't be found.</summary>
		</member>
		<member name="M:UnityEditor.PrefabUtility.GetCorrespondingObjectFromOriginalSource(TObject)">
			<summary>Returns the object of origin for the given object.</summary>
		</member>
		<member name="M:UnityEditor.PhysicsVisualizationSettings.GetShowKinematicBodies(UnityEditor.PhysicsVisualizationSettings.FilterWorkflow)">
			<summary>Should the kinematic Rigidbodies be considered by the display filter.</summary>
		</member>
		<member name="P:UnityEditor.SpriteRect.spriteID">
			<summary>GUID to uniquely identify the SpriteRect data. This will be populated to Sprite.spriteID to identify the SpriteRect used to generate the Sprite.</summary>
		</member>
		<member name="M:UnityEditor.PrefabUtility.GetCorrespondingObjectFromSourceAtPath(TObject,System.String)">
			<summary>Returns the corresponding object of the given object from a given Prefab Asset path.</summary>
		</member>
		<member name="M:UnityEditor.PhysicsVisualizationSettings.SetShowKinematicBodies(UnityEditor.PhysicsVisualizationSettings.FilterWorkflow,System.Boolean)">
			<summary>Should the kinematic Rigidbodies be considered by the display filter.</summary>
		</member>
		<member name="M:UnityEditor.PrefabUtility.GetPrefabType(UnityEngine.Object)">
			<summary>Given an object, returns its Prefab type (None, if it's not a Prefab).</summary>
		</member>
		<member name="M:UnityEditor.SceneView.MoveToView()">
			<summary>Transforms all selected object to the scene pivot.</summary>
		</member>
		<member name="M:UnityEditor.PrefabUtility.IsAddedGameObjectOverride(UnityEngine.GameObject)">
			<summary>Is this GameObject added as a child to a Prefab instance as an override?</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.ColorField(UnityEngine.Color,UnityEngine.GUILayoutOption[])">
			<summary>Make a field for selecting a Color.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.ColorField(System.String,UnityEngine.Color,UnityEngine.GUILayoutOption[])">
			<summary>Make a field for selecting a Color.</summary>
		</member>
		<member name="M:UnityEditor.SpriteRect.GetSpriteIDFromSerializedProperty(UnityEditor.SerializedProperty)">
			<summary>Helper method to get SpriteRect.spriteID from a SerializedProperty.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.ColorField(UnityEngine.GUIContent,UnityEngine.Color,UnityEngine.GUILayoutOption[])">
			<summary>Make a field for selecting a Color.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.ColorField(UnityEngine.GUIContent,UnityEngine.Color,System.Boolean,System.Boolean,System.Boolean,UnityEditor.ColorPickerHDRConfig,UnityEngine.GUILayoutOption[])">
			<summary>Make a field for selecting a Color.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.ColorField(UnityEngine.GUIContent,UnityEngine.Color,System.Boolean,System.Boolean,System.Boolean,UnityEngine.GUILayoutOption[])">
			<summary>Make a field for selecting a Color.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.CurveField(UnityEngine.AnimationCurve,UnityEngine.GUILayoutOption[])">
			<summary>Make a field for editing an AnimationCurve.</summary>
		</member>
		<member name="M:UnityEditor.PrefabUtility.UnpackPrefabInstance(UnityEngine.GameObject,UnityEditor.PrefabUnpackMode,UnityEditor.InteractionMode)">
			<summary>Unpacks a given Prefab instance so that it is replaced with the contents of the Prefab Asset while retaining all override values.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.CurveField(System.String,UnityEngine.AnimationCurve,UnityEngine.GUILayoutOption[])">
			<summary>Make a field for editing an AnimationCurve.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.CurveField(UnityEngine.GUIContent,UnityEngine.AnimationCurve,UnityEngine.GUILayoutOption[])">
			<summary>Make a field for editing an AnimationCurve.</summary>
		</member>
		<member name="M:UnityEditor.PrefabUtility.IsPartOfPrefabThatCanBeAppliedTo(UnityEngine.Object)">
			<summary>Is this object part of a Prefab that cannot be applied to?</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.CurveField(UnityEngine.AnimationCurve,UnityEngine.Color,UnityEngine.Rect,UnityEngine.GUILayoutOption[])">
			<summary>Make a field for editing an AnimationCurve.</summary>
		</member>
		<member name="T:UnityEditor.ExpressionEvaluator">
			<summary>Evaluates simple math expressions; supports int / float and operators: + - * / % ^ ( ).</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.CurveField(System.String,UnityEngine.AnimationCurve,UnityEngine.Color,UnityEngine.Rect,UnityEngine.GUILayoutOption[])">
			<summary>Make a field for editing an AnimationCurve.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.CurveField(UnityEngine.GUIContent,UnityEngine.AnimationCurve,UnityEngine.Color,UnityEngine.Rect,UnityEngine.GUILayoutOption[])">
			<summary>Make a field for editing an AnimationCurve.</summary>
		</member>
		<member name="M:UnityEditor.PrefabUtility.GetPrefabInstanceStatus(UnityEngine.Object)">
			<summary>Enum value with status about whether a Prefab instance is properly connected to its asset.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.CurveField(UnityEditor.SerializedProperty,UnityEngine.Color,UnityEngine.Rect,UnityEngine.GUILayoutOption[])">
			<summary>Make a field for editing an AnimationCurve.</summary>
		</member>
		<member name="M:UnityEditor.ExpressionEvaluator.Evaluate(System.String,T&)">
			<summary>Evaluates a math expression and returns the result as a float or int.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.CurveField(UnityEditor.SerializedProperty,UnityEngine.Color,UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.GUILayoutOption[])">
			<summary>Make a field for editing an AnimationCurve.</summary>
		</member>
		<member name="M:UnityEditor.PrefabUtility.GetPrefabAssetType(UnityEngine.Object)">
			<summary>Enum value indicating the type of Prefab Asset, such as Regular Prefab, Model Prefab and Prefab Variant.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.InspectorTitlebar(System.Boolean,UnityEngine.Object)">
			<summary>Make an inspector-window-like titlebar.</summary>
		</member>
		<member name="M:UnityEditor.PhysicsVisualizationSettings.GetShowSleepingBodies(UnityEditor.PhysicsVisualizationSettings.FilterWorkflow)">
			<summary>Should the sleeping Rigidbodies be considered by the display filter.</summary>
		</member>
		<member name="M:UnityEditor.PhysicsVisualizationSettings.SetShowSleepingBodies(UnityEditor.PhysicsVisualizationSettings.FilterWorkflow,System.Boolean)">
			<summary>Should the sleeping Rigidbodies be considered by the display filter.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.InspectorTitlebar(System.Boolean,UnityEngine.Object,System.Boolean)">
			<summary>Make an inspector-window-like titlebar.</summary>
		</member>
		<member name="M:UnityEditor.PhysicsVisualizationSettings.GetShowCollisionLayer(UnityEditor.PhysicsVisualizationSettings.FilterWorkflow,System.Int32)">
			<summary>Should the given layer be considered by the display filter.</summary>
		</member>
		<member name="M:UnityEditor.PhysicsVisualizationSettings.SetShowCollisionLayer(UnityEditor.PhysicsVisualizationSettings.FilterWorkflow,System.Int32,System.Boolean)">
			<summary>Should the given layer be considered by the display filter.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.InspectorTitlebar(System.Boolean,UnityEngine.Object[])">
			<summary>Make an inspector-window-like titlebar.</summary>
		</member>
		<member name="M:UnityEditor.PhysicsVisualizationSettings.GetShowCollisionLayerMask(UnityEditor.PhysicsVisualizationSettings.FilterWorkflow)">
			<summary>Should the mask representing the layers be considered by the display filter.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.InspectorTitlebar(System.Boolean,UnityEngine.Object[],System.Boolean)">
			<summary>Make an inspector-window-like titlebar.</summary>
		</member>
		<member name="M:UnityEditor.PhysicsVisualizationSettings.SetShowCollisionLayerMask(UnityEditor.PhysicsVisualizationSettings.FilterWorkflow,System.Int32)">
			<summary>Should the mask representing the layers be considered by the display filter.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.InspectorTitlebar(System.Boolean,UnityEditor.Editor)">
			<summary>Make an inspector-window-like titlebar.</summary>
		</member>
		<member name="M:UnityEditor.PhysicsVisualizationSettings.GetShowBoxColliders(UnityEditor.PhysicsVisualizationSettings.FilterWorkflow)">
			<summary>Should BoxColliders be shown.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.InspectorTitlebar(UnityEngine.Object[])">
			<summary>Make an inspector-window-like titlebar.</summary>
		</member>
		<member name="M:UnityEditor.PhysicsVisualizationSettings.SetShowBoxColliders(UnityEditor.PhysicsVisualizationSettings.FilterWorkflow,System.Boolean)">
			<summary>Should BoxColliders be shown.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.HelpBox(System.String,UnityEditor.MessageType)">
			<summary>Make a help box with a message to the user.</summary>
		</member>
		<member name="M:UnityEditor.PrefabUtility.LoadPrefabContents(System.String)">
			<summary>Loads a Prefab Asset at a given path into an isolated Scene and returns the root GameObject of the Prefab.</summary>
		</member>
		<member name="P:UnityEditor.PlayerSettings.captureSingleScreen">
			<summary>Defines if fullscreen games should darken secondary displays.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.HelpBox(System.String,UnityEditor.MessageType,System.Boolean)">
			<summary>Make a help box with a message to the user.</summary>
		</member>
		<member name="P:UnityEditor.PlayerSettings.usePlayerLog">
			<summary>Write a log file with debugging information.</summary>
		</member>
		<member name="T:UnityEditor.Il2CppCompilerConfiguration">
			<summary>C++ compiler configuration used when compiling IL2CPP generated code.</summary>
		</member>
		<member name="P:UnityEditor.PlayerSettings.resizableWindow">
			<summary>Use resizable window in standalone player builds.</summary>
		</member>
		<member name="P:UnityEditor.PlayerSettings.bakeCollisionMeshes">
			<summary>Pre bake collision meshes on player build.</summary>
		</member>
		<member name="T:UnityEditor.AspectRatio">
			<summary>Aspect ratio.</summary>
		</member>
		<member name="P:UnityEditor.PlayerSettings.useMacAppStoreValidation">
			<summary>Enable receipt validation for the Mac App Store.</summary>
		</member>
		<member name="M:UnityEditor.PhysicsVisualizationSettings.GetShowSphereColliders(UnityEditor.PhysicsVisualizationSettings.FilterWorkflow)">
			<summary>Should SphereColliders be shown.</summary>
		</member>
		<member name="T:UnityEditor.FontTextureCase">
			<summary>Texture case constants for TrueTypeFontImporter.</summary>
		</member>
		<member name="T:UnityEditor.PlayerSettings.Android">
			<summary>Android specific player settings.</summary>
		</member>
		<member name="P:UnityEditor.PlayerSettings.macFullscreenMode">
			<summary>Define how to handle fullscreen mode in macOS standalones.</summary>
		</member>
		<member name="P:UnityEditor.PlayerSettings.d3d9FullscreenMode">
			<summary>Define how to handle fullscreen mode in Windows standalones (Direct3D 9 mode).</summary>
		</member>
		<member name="T:UnityEditor.FontRenderingMode">
			<summary>Font rendering mode constants for TrueTypeFontImporter.</summary>
		</member>
		<member name="P:UnityEditor.PlayerSettings.d3d11FullscreenMode">
			<summary>Define how to handle fullscreen mode in Windows standalones (Direct3D 11 mode).</summary>
		</member>
		<member name="M:UnityEditor.PhysicsVisualizationSettings.SetShowSphereColliders(UnityEditor.PhysicsVisualizationSettings.FilterWorkflow,System.Boolean)">
			<summary>Should SphereColliders be shown.</summary>
		</member>
		<member name="T:UnityEditor.AscentCalculationMode">
			<summary>Method used for calculating a font's ascent.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.TextArea(UnityEngine.Rect,System.String)">
			<summary>Makes a text area.</summary>
		</member>
		<member name="M:UnityEditor.HandleUtility.DistanceToArc(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Single)">
			<summary>Pixel distance from mouse pointer to a 3D section of a disc.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.TextArea(UnityEngine.Rect,System.String,UnityEngine.GUIStyle)">
			<summary>Makes a text area.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.SelectableLabel(UnityEngine.Rect,System.String)">
			<summary>Makes a selectable label field. (Useful for showing read-only info that can be copy-pasted.)</summary>
		</member>
		<member name="M:UnityEditor.HandleUtility.ClosestPointToArc(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Single)">
			<summary>Get the point on an arc (in 3D space) which is closest to the current mouse position.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.SelectableLabel(UnityEngine.Rect,System.String,UnityEngine.GUIStyle)">
			<summary>Makes a selectable label field. (Useful for showing read-only info that can be copy-pasted.)</summary>
		</member>
		<member name="M:UnityEditor.PhysicsVisualizationSettings.GetShowCapsuleColliders(UnityEditor.PhysicsVisualizationSettings.FilterWorkflow)">
			<summary>Should CapsuleColliders be shown.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.PasswordField(UnityEngine.Rect,System.String)">
			<summary>Makes a text field where the user can enter a password.</summary>
		</member>
		<member name="M:UnityEditor.HandleUtility.DistanceToPolyLine(UnityEngine.Vector3[])">
			<summary>Pixel distance from mouse pointer to a polyline.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.PasswordField(UnityEngine.Rect,System.String,UnityEngine.GUIStyle)">
			<summary>Makes a text field where the user can enter a password.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.PasswordField(UnityEngine.Rect,System.String,System.String)">
			<summary>Makes a text field where the user can enter a password.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.PasswordField(UnityEngine.Rect,System.String,System.String,UnityEngine.GUIStyle)">
			<summary>Makes a text field where the user can enter a password.</summary>
		</member>
		<member name="M:UnityEditor.HandleUtility.ClosestPointToPolyLine(UnityEngine.Vector3[])">
			<summary>Get the point on a polyline (in 3D space) which is closest to the current mouse position.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.PasswordField(UnityEngine.Rect,UnityEngine.GUIContent,System.String)">
			<summary>Makes a text field where the user can enter a password.</summary>
		</member>
		<member name="T:UnityEditor.TrueTypeFontImporter">
			<summary>AssetImporter for importing Fonts.</summary>
		</member>
		<member name="M:UnityEditor.PhysicsVisualizationSettings.SetShowCapsuleColliders(UnityEditor.PhysicsVisualizationSettings.FilterWorkflow,System.Boolean)">
			<summary>Should CapsuleColliders be shown.</summary>
		</member>
		<member name="M:UnityEditor.PhysicsVisualizationSettings.GetShowMeshColliders(UnityEditor.PhysicsVisualizationSettings.FilterWorkflow,UnityEditor.PhysicsVisualizationSettings.MeshColliderType)">
			<summary>Should MeshColliders be shown.</summary>
		</member>
		<member name="P:UnityEditor.TrueTypeFontImporter.fontSize">
			<summary>Font size to use for importing the characters.</summary>
		</member>
		<member name="M:UnityEditor.PhysicsVisualizationSettings.SetShowMeshColliders(UnityEditor.PhysicsVisualizationSettings.FilterWorkflow,UnityEditor.PhysicsVisualizationSettings.MeshColliderType,System.Boolean)">
			<summary>Should MeshColliders be shown.</summary>
		</member>
		<member name="P:UnityEditor.TrueTypeFontImporter.includeFontData">
			<summary>If this is enabled, the actual font will be embedded into the asset for Dynamic fonts.</summary>
		</member>
		<member name="M:UnityEditor.PhysicsVisualizationSettings.GetShowTerrainColliders(UnityEditor.PhysicsVisualizationSettings.FilterWorkflow)">
			<summary>Should TerrainColliders be shown.</summary>
		</member>
		<member name="M:UnityEditor.PhysicsVisualizationSettings.SetShowTerrainColliders(UnityEditor.PhysicsVisualizationSettings.FilterWorkflow,System.Boolean)">
			<summary>Should TerrainColliders be shown.</summary>
		</member>
		<member name="P:UnityEditor.TrueTypeFontImporter.ascentCalculationMode">
			<summary>Calculation mode for determining font's ascent.</summary>
		</member>
		<member name="M:UnityEditor.PhysicsVisualizationSettings.GetShowPhysicsSceneMask(UnityEditor.PhysicsVisualizationSettings.FilterWorkflow)">
			<summary>Return a mask representing scenes that are enabled by display filter</summary>
		</member>
		<member name="M:UnityEditor.PhysicsVisualizationSettings.SetShowPhysicsSceneMask(UnityEditor.PhysicsVisualizationSettings.FilterWorkflow,System.Int32)">
			<summary>Should the scene mask be considered by the display filter.</summary>
		</member>
		<member name="P:UnityEditor.TrueTypeFontImporter.customCharacters">
			<summary>A custom set of characters to be included in the Font Texture.</summary>
		</member>
		<member name="M:UnityEditor.PhysicsVisualizationSettings.SetShowForAllFilters(UnityEditor.PhysicsVisualizationSettings.FilterWorkflow,System.Boolean)">
			<summary>Enables or disables all filtering items.</summary>
		</member>
		<member name="P:UnityEditor.TrueTypeFontImporter.characterSpacing">
			<summary>Spacing between character images in the generated texture in pixels. This is useful if you want to render text using a shader which samples pixels outside of the character area (like an outline shader).</summary>
		</member>
		<member name="T:UnityEditor.PhysicsVisualizationSettings.FilterWorkflow">
			<summary></summary>
		</member>
		<member name="P:UnityEditor.TrueTypeFontImporter.characterPadding">
			<summary>Border pixels added to character images for padding. This is useful if you want to render text using a shader which needs to render outside of the character area (like an outline shader).</summary>
		</member>
		<member name="T:UnityEditor.PhysicsVisualizationSettings.MeshColliderType">
			<summary>Is a MeshCollider convex.</summary>
		</member>
		<member name="T:UnityEditor.PlayerSettings.iOS">
			<summary>iOS specific player settings.</summary>
		</member>
		<member name="P:UnityEditor.TrueTypeFontImporter.fontRenderingMode">
			<summary>Font rendering mode to use for this font.</summary>
		</member>
		<member name="P:UnityEditor.PlayerSettings.fullScreenMode">
			<summary>Platform agnostic setting to define fullscreen behavior. Not all platforms support all modes.</summary>
		</member>
		<member name="P:UnityEditor.PlayerSettings.virtualRealitySupported">
			<summary>Enable Virtual Reality support on the current build target.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.PasswordField(UnityEngine.Rect,UnityEngine.GUIContent,System.String,UnityEngine.GUIStyle)">
			<summary>Makes a text field where the user can enter a password.</summary>
		</member>
		<member name="P:UnityEditor.PlayerSettings.singlePassStereoRendering">
			<summary>Should Unity support single-pass stereo rendering?</summary>
		</member>
		<member name="M:UnityEditor.HandleUtility.AddControl(System.Int32,System.Single)">
			<summary>Record a distance measurement from a handle.</summary>
		</member>
		<member name="P:UnityEditor.TrueTypeFontImporter.shouldRoundAdvanceValue">
			<summary>Set this property to true if you want to round the internal advance width of the font to the nearest integer.</summary>
		</member>
		<member name="P:UnityEditor.PlayerSettings.stereoRenderingPath">
			<summary>Active stereo rendering path</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.FloatField(UnityEngine.Rect,System.Single)">
			<summary>Makes a text field for entering floats.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.FloatField(UnityEngine.Rect,System.Single,UnityEngine.GUIStyle)">
			<summary>Makes a text field for entering floats.</summary>
		</member>
		<member name="P:UnityEditor.TrueTypeFontImporter.fontTTFName">
			<summary>The internal font name of the TTF file.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.FloatField(UnityEngine.Rect,System.String,System.Single)">
			<summary>Makes a text field for entering floats.</summary>
		</member>
		<member name="P:UnityEditor.PlayerSettings.protectGraphicsMemory">
			<summary>Protect graphics memory.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.FloatField(UnityEngine.Rect,System.String,System.Single,UnityEngine.GUIStyle)">
			<summary>Makes a text field for entering floats.</summary>
		</member>
		<member name="P:UnityEditor.TrueTypeFontImporter.fontTextureCase">
			<summary>Use this to adjust which characters should be imported.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.FloatField(UnityEngine.Rect,UnityEngine.GUIContent,System.Single)">
			<summary>Makes a text field for entering floats.</summary>
		</member>
		<member name="P:UnityEditor.PlayerSettings.enableFrameTimingStats">
			<summary>Enable frame timing statistics.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.FloatField(UnityEngine.Rect,UnityEngine.GUIContent,System.Single,UnityEngine.GUIStyle)">
			<summary>Makes a text field for entering floats.</summary>
		</member>
		<member name="P:UnityEditor.TrueTypeFontImporter.fontReferences">
			<summary>References to other fonts to be used looking for fallbacks.</summary>
		</member>
		<member name="P:UnityEditor.PlayerSettings.useHDRDisplay">
			<summary>Switch display to HDR mode (if available).</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.DelayedFloatField(UnityEngine.Rect,System.Single)">
			<summary>Makes a delayed text field for entering floats.</summary>
		</member>
		<member name="P:UnityEditor.TrueTypeFontImporter.fontNames">
			<summary>An array of font names, to be used when includeFontData is set to false.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.DelayedFloatField(UnityEngine.Rect,System.Single,UnityEngine.GUIStyle)">
			<summary>Makes a delayed text field for entering floats.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.DelayedFloatField(UnityEngine.Rect,System.String,System.Single)">
			<summary>Makes a delayed text field for entering floats.</summary>
		</member>
		<member name="P:UnityEditor.PlayerSettings.visibleInBackground">
			<summary>On Windows, show the application in the background if Fullscreen Windowed mode is used.</summary>
		</member>
		<member name="T:UnityEditor.GridBrush">
			<summary>Default built-in brush for painting or erasing tiles and/or gamobjects on a grid.</summary>
		</member>
		<member name="P:UnityEditor.GridBrush.size">
			<summary>Size of the brush in cells.</summary>
		</member>
		<member name="M:UnityEditor.HandleUtility.AddDefaultControl(System.Int32)">
			<summary>Add the ID for a default control. This will be picked if nothing else is.</summary>
		</member>
		<member name="P:UnityEditor.GridBrush.pivot">
			<summary>Pivot of the brush.</summary>
		</member>
		<member name="M:UnityEditor.HandleUtility.GetHandleSize(UnityEngine.Vector3)">
			<summary>Get world space size of a manipulator handle at given position.</summary>
		</member>
		<member name="P:UnityEditor.GridBrush.BrushCell[] UnityEditor.GridBrush.cells">
			<summary>All the brush cells the brush holds.</summary>
		</member>
		<member name="M:UnityEditor.HandleUtility.WorldToGUIPoint(UnityEngine.Vector3)">
			<summary>Convert a world space point to a 2D GUI position.</summary>
		</member>
		<member name="P:UnityEditor.GridBrush.cellCount">
			<summary>Number of brush cells in the brush.</summary>
		</member>
		<member name="M:UnityEditor.HandleUtility.WorldToGUIPointWithDepth(UnityEngine.Vector3)">
			<summary>Convert a world space point to a 2D GUI position.</summary>
		</member>
		<member name="M:UnityEditor.GridBrush.Init(UnityEngine.Vector3Int)">
			<summary>Initializes the content of the GridBrush.</summary>
		</member>
		<member name="M:UnityEditor.HandleUtility.GUIPointToScreenPixelCoordinate(UnityEngine.Vector2)">
			<summary>Converts a 2D GUI position to screen pixel coordinates.</summary>
		</member>
		<member name="M:UnityEditor.GridBrush.Init(UnityEngine.Vector3Int,UnityEngine.Vector3Int)">
			<summary>Initializes the content of the GridBrush.</summary>
		</member>
		<member name="M:UnityEditor.HandleUtility.GUIPointToWorldRay(UnityEngine.Vector2)">
			<summary>Convert 2D GUI position to a world space ray.</summary>
		</member>
		<member name="M:UnityEditor.GridBrush.Paint(UnityEngine.GridLayout,UnityEngine.GameObject,UnityEngine.Vector3Int)">
			<summary>Paints tiles and GameObjects into a given position within the selected layers.</summary>
		</member>
		<member name="M:UnityEditor.HandleUtility.WorldPointToSizedRect(UnityEngine.Vector3,UnityEngine.GUIContent,UnityEngine.GUIStyle)">
			<summary>Calculate a rectangle to display a 2D GUI element near a projected point in 3D space.</summary>
		</member>
		<member name="M:UnityEditor.GridBrush.Erase(UnityEngine.GridLayout,UnityEngine.GameObject,UnityEngine.Vector3Int)">
			<summary>Erases tiles and GameObjects in a given position within the selected layers.</summary>
		</member>
		<member name="T:UnityEditor.PlayerSettings.Facebook">
			<summary>Facebook specific Player settings.</summary>
		</member>
		<member name="M:UnityEditor.HandleUtility.PickRectObjects(UnityEngine.Rect)">
			<summary>Pick GameObjects that lie within a specified screen rectangle.</summary>
		</member>
		<member name="M:UnityEditor.GridBrush.BoxFill(UnityEngine.GridLayout,UnityEngine.GameObject,UnityEngine.BoundsInt)">
			<summary>Box fills tiles and GameObjects into given bounds within the selected layers.</summary>
		</member>
		<member name="M:UnityEditor.HandleUtility.PickRectObjects(UnityEngine.Rect,System.Boolean)">
			<summary>Pick GameObjects that lie within a specified screen rectangle.</summary>
		</member>
		<member name="M:UnityEditor.GridBrush.BoxErase(UnityEngine.GridLayout,UnityEngine.GameObject,UnityEngine.BoundsInt)">
			<summary>Erases tiles and GameObjects from given bounds within the selected layers.</summary>
		</member>
		<member name="M:UnityEditor.HandleUtility.PickGameObject(UnityEngine.Vector2,System.Int32&)">
			<summary>Pick game object closest to specified position.</summary>
		</member>
		<member name="T:UnityEditor.PlayerSettings.PS4">
			<summary>Player Settings for the PlayStation®4.</summary>
		</member>
		<member name="M:UnityEditor.HandleUtility.PickGameObject(UnityEngine.Vector2,UnityEngine.GameObject[],System.Int32&)">
			<summary>Pick game object closest to specified position.</summary>
		</member>
		<member name="M:UnityEditor.GridBrush.FloodFill(UnityEngine.GridLayout,UnityEngine.GameObject,UnityEngine.Vector3Int)">
			<summary>Flood fills tiles and GameObjects starting from a given position within the selected layers.</summary>
		</member>
		<member name="M:UnityEditor.HandleUtility.PickGameObject(UnityEngine.Vector2,System.Boolean)">
			<summary>Pick game object closest to specified position.</summary>
		</member>
		<member name="M:UnityEditor.HandleUtility.PickGameObject(UnityEngine.Vector2,System.Boolean,UnityEngine.GameObject[])">
			<summary>Pick game object closest to specified position.</summary>
		</member>
		<member name="M:UnityEditor.GridBrush.Rotate(UnityEngine.GridBrushBase.RotationDirection,UnityEngine.GridLayout.CellLayout)">
			<summary>Rotates the brush by 90 degrees in the given direction.</summary>
		</member>
		<member name="M:UnityEditor.HandleUtility.PickGameObject(UnityEngine.Vector2,System.Boolean,UnityEngine.GameObject[],UnityEngine.GameObject[])">
			<summary>Pick game object closest to specified position.</summary>
		</member>
		<member name="M:UnityEditor.GridBrush.Flip(UnityEngine.GridBrushBase.FlipAxis,UnityEngine.GridLayout.CellLayout)">
			<summary>Flips the brush in the given axis.</summary>
		</member>
		<member name="M:UnityEditor.HandleUtility.PushCamera(UnityEngine.Camera)">
			<summary>Store all camera settings.</summary>
		</member>
		<member name="M:UnityEditor.GridBrush.Pick(UnityEngine.GridLayout,UnityEngine.GameObject,UnityEngine.BoundsInt,UnityEngine.Vector3Int)">
			<summary>Picks tiles from selected tile maps and child GameObjects, given the coordinates of the cells.</summary>
		</member>
		<member name="M:UnityEditor.HandleUtility.PopCamera(UnityEngine.Camera)">
			<summary>Retrieve all camera settings.</summary>
		</member>
		<member name="M:UnityEditor.GridBrush.MoveStart(UnityEngine.GridLayout,UnityEngine.GameObject,UnityEngine.BoundsInt)">
			<summary>MoveEnd is called when user starts moving the area previously selected with the selection marquee.</summary>
		</member>
		<member name="M:UnityEditor.HandleUtility.RaySnap(UnityEngine.Ray)">
			<summary>Casts ray against the Scene and report if an object lies in its path.</summary>
		</member>
		<member name="M:UnityEditor.GridBrush.MoveEnd(UnityEngine.GridLayout,UnityEngine.GameObject,UnityEngine.BoundsInt)">
			<summary>MoveEnd is called when user has ended the move of the area previously selected with the selection marquee.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.DelayedFloatField(UnityEngine.Rect,System.String,System.Single,UnityEngine.GUIStyle)">
			<summary>Makes a delayed text field for entering floats.</summary>
		</member>
		<member name="T:UnityEditor.GUIDrawer">
			<summary>Base class for PropertyDrawer and DecoratorDrawer.</summary>
		</member>
		<member name="T:UnityEditor.PropertyDrawer">
			<summary>Base class to derive custom property drawers from. Use this to create custom drawers for your own Serializable classes or for script variables with custom PropertyAttributes.</summary>
		</member>
		<member name="P:UnityEditor.PropertyDrawer.attribute">
			<summary>The PropertyAttribute for the property. Not applicable for custom class drawers. (Read Only)</summary>
		</member>
		<member name="M:UnityEditor.TrueTypeFontImporter.GenerateEditableFont(System.String)">
			<summary>Create an editable copy of the font asset at path.</summary>
		</member>
		<member name="P:UnityEditor.PropertyDrawer.fieldInfo">
			<summary>The reflection FieldInfo for the member this property represents. (Read Only)</summary>
		</member>
		<member name="M:UnityEditor.PropertyDrawer.OnGUI(UnityEngine.Rect,UnityEditor.SerializedProperty,UnityEngine.GUIContent)">
			<summary>Override this method to make your own IMGUI based GUI for the property.</summary>
		</member>
		<member name="M:UnityEditor.PropertyDrawer.CreatePropertyGUI(UnityEditor.SerializedProperty)">
			<summary>Override this method to make your own UIElements based GUI for the property.</summary>
		</member>
		<member name="M:UnityEditor.PropertyDrawer.GetPropertyHeight(UnityEditor.SerializedProperty,UnityEngine.GUIContent)">
			<summary>Override this method to specify how tall the GUI for this field is in pixels.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.DelayedFloatField(UnityEngine.Rect,UnityEngine.GUIContent,System.Single)">
			<summary>Makes a delayed text field for entering floats.</summary>
		</member>
		<member name="T:UnityEditor.GridPaintSortingAttribute">
			<summary>Use this attribute to add an option to customize the sorting of Active Targets in the Active Tilemap list of the Tile Palette window.</summary>
		</member>
		<member name="M:UnityEditor.PropertyDrawer.CanCacheInspectorGUI(UnityEditor.SerializedProperty)">
			<summary>Override this method to determine whether the inspector GUI for your property can be cached.</summary>
		</member>
		<member name="T:UnityEditor.GridSelection">
			<summary>Stores the selection made on a GridLayout.</summary>
		</member>
		<member name="T:UnityEditor.GridPalette">
			<summary>GridPalette stores settings for Palette assets when shown in the Palette window.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.DelayedFloatField(UnityEngine.Rect,UnityEngine.GUIContent,System.Single,UnityEngine.GUIStyle)">
			<summary>Makes a delayed text field for entering floats.</summary>
		</member>
		<member name="P:UnityEditor.GridSelection.active">
			<summary>Whether there is an active GridSelection made on a GridLayout.</summary>
		</member>
		<member name="P:UnityEditor.PlayerSettings.allowFullscreenSwitch">
			<summary>If enabled, allows the user to switch between full screen and windowed mode using OS specific keyboard short cuts.</summary>
		</member>
		<member name="F:UnityEditor.GridPalette.CellSizing UnityEditor.GridPalette.cellSizing">
			<summary>Determines the sizing of cells for a Palette.</summary>
		</member>
		<member name="P:UnityEditor.PlayerSettings.forceSingleInstance">
			<summary>Restrict standalone players to a single concurrent running instance.</summary>
		</member>
		<member name="P:UnityEditor.GridSelection.position">
			<summary>The cell coordinates of the active GridSelection made on the GridLayout.</summary>
		</member>
		<member name="T:UnityEditor.GridPalette.CellSizing">
			<summary>Controls the sizing of cells for a Palette.</summary>
		</member>
		<member name="P:UnityEditor.GridSelection.target">
			<summary>The GameObject of the GridLayout where the active GridSelection was made.</summary>
		</member>
		<member name="P:UnityEditor.PlayerSettings.resolutionDialogBanner">
			<summary>The image to display in the Resolution Dialog window.</summary>
		</member>
		<member name="P:UnityEditor.GridSelection.grid">
			<summary>The Grid of the target of the active GridSelection.</summary>
		</member>
		<member name="P:UnityEditor.PlayerSettings.virtualRealitySplashScreen">
			<summary>Virtual Reality specific splash screen.</summary>
		</member>
		<member name="M:UnityEditor.GridSelection.Select(UnityEngine.Object,UnityEngine.BoundsInt)">
			<summary>Creates a new GridSelection and sets it as the active GridSelection.</summary>
		</member>
		<member name="P:UnityEditor.PlayerSettings.iPhoneBundleIdentifier">
			<summary>The bundle identifier of the iPhone application.</summary>
		</member>
		<member name="M:UnityEditor.GridSelection.Clear()">
			<summary>Clears the active GridSelection.</summary>
		</member>
		<member name="P:UnityEditor.PlayerSettings.scriptingRuntimeVersion">
			<summary>The scripting runtime version setting. Change this to set the version the Editor uses and restart the Editor to apply the change.</summary>
		</member>
		<member name="P:UnityEditor.PlayerSettings.allowUnsafeCode">
			<summary>Allow 'unsafe' C# code code to be compiled for predefined assemblies.</summary>
		</member>
		<member name="T:UnityEditor.EditorAnalytics">
			<summary>Editor API for the EditorAnalytics feature.</summary>
		</member>
		<member name="P:UnityEditor.PlayerSettings.gcIncremental">
			<summary>Allows you to enable or disable incremental mode for garbage collection.</summary>
		</member>
		<member name="T:UnityEditor.EditorAnalyticsSessionInfo">
			<summary>Provides access to Editor Analytics session information.</summary>
		</member>
		<member name="P:UnityEditor.EditorAnalytics.enabled">
			<summary>Returns true when EditorAnalytics is enabled.</summary>
		</member>
		<member name="P:UnityEditor.PlayerSettings.keystorePass">
			<summary>Password used for interacting with the Android Keystore.</summary>
		</member>
		<member name="M:UnityEditor.HandleUtility.Repaint()">
			<summary>Repaint the current view.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.DelayedFloatField(UnityEngine.Rect,UnityEditor.SerializedProperty)">
			<summary>Makes a delayed text field for entering floats.</summary>
		</member>
		<member name="T:UnityEditor.Help">
			<summary>Helper class to access Unity documentation.</summary>
		</member>
		<member name="M:UnityEditor.Help.HasHelpForObject(UnityEngine.Object)">
			<summary>Is there a help page for this object?</summary>
		</member>
		<member name="M:UnityEditor.Help.HasHelpForObject(UnityEngine.Object,System.Boolean)">
			<summary>Is there a help page for this object?</summary>
		</member>
		<member name="P:UnityEditor.PlayerSettings.keyaliasPass">
			<summary>Password for the key used for signing an Android application.</summary>
		</member>
		<member name="M:UnityEditor.Help.GetHelpURLForObject(UnityEngine.Object)">
			<summary>Get the URL for this object's documentation.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.DelayedFloatField(UnityEngine.Rect,UnityEditor.SerializedProperty,UnityEngine.GUIContent)">
			<summary>Makes a delayed text field for entering floats.</summary>
		</member>
		<member name="P:UnityEditor.PlayerSettings.gpuSkinning">
			<summary>Enable GPU skinning on capable platforms.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.DoubleField(UnityEngine.Rect,System.Double)">
			<summary>Makes a text field for entering doubles.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.DoubleField(UnityEngine.Rect,System.Double,UnityEngine.GUIStyle)">
			<summary>Makes a text field for entering doubles.</summary>
		</member>
		<member name="M:UnityEditor.Help.ShowHelpForObject(UnityEngine.Object)">
			<summary>Show help page for this object.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.DoubleField(UnityEngine.Rect,System.String,System.Double)">
			<summary>Makes a text field for entering doubles.</summary>
		</member>
		<member name="P:UnityEditor.PlayerSettings.graphicsJobs">
			<summary>Enable graphics jobs (multi threaded rendering).</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.DoubleField(UnityEngine.Rect,System.String,System.Double,UnityEngine.GUIStyle)">
			<summary>Makes a text field for entering doubles.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.DoubleField(UnityEngine.Rect,UnityEngine.GUIContent,System.Double)">
			<summary>Makes a text field for entering doubles.</summary>
		</member>
		<member name="M:UnityEditor.Help.ShowHelpPage(System.String)">
			<summary>Show a help page.</summary>
		</member>
		<member name="P:UnityEditor.PlayerSettings.graphicsJobMode">
			<summary>Selects the graphics job mode to use on platforms that support both Native and Legacy graphics jobs.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.DoubleField(UnityEngine.Rect,UnityEngine.GUIContent,System.Double,UnityEngine.GUIStyle)">
			<summary>Makes a text field for entering doubles.</summary>
		</member>
		<member name="M:UnityEditor.Help.BrowseURL(System.String)">
			<summary>Open url in the default web browser.</summary>
		</member>
		<member name="P:UnityEditor.PlayerSettings.xboxEnableAvatar">
			<summary>Xbox 360 Avatars.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.DelayedDoubleField(UnityEngine.Rect,System.Double)">
			<summary>Makes a delayed text field for entering doubles.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.DelayedDoubleField(UnityEngine.Rect,System.Double,UnityEngine.GUIStyle)">
			<summary>Makes a delayed text field for entering doubles.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.DelayedDoubleField(UnityEngine.Rect,System.String,System.Double)">
			<summary>Makes a delayed text field for entering doubles.</summary>
		</member>
		<member name="P:UnityEditor.PlayerSettings.enableInternalProfiler">
			<summary>Enables internal profiler.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.DelayedDoubleField(UnityEngine.Rect,System.String,System.Double,UnityEngine.GUIStyle)">
			<summary>Makes a delayed text field for entering doubles.</summary>
		</member>
		<member name="T:UnityEditor.PlayerSettings.tvOS">
			<summary>tvOS specific player settings.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.DelayedDoubleField(UnityEngine.Rect,UnityEngine.GUIContent,System.Double)">
			<summary>Makes a delayed text field for entering doubles.</summary>
		</member>
		<member name="P:UnityEditor.PlayerSettings.actionOnDotNetUnhandledException">
			<summary>Sets the crash behavior on .NET unhandled exception.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.DelayedDoubleField(UnityEngine.Rect,UnityEngine.GUIContent,System.Double,UnityEngine.GUIStyle)">
			<summary>Makes a delayed text field for entering doubles.</summary>
		</member>
		<member name="P:UnityEditor.PlayerSettings.logObjCUncaughtExceptions">
			<summary>Are ObjC uncaught exceptions logged?</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.IntField(UnityEngine.Rect,System.Int32)">
			<summary>Makes a text field for entering integers.</summary>
		</member>
		<member name="T:UnityEditor.PlayerSettings.SplashScreenLogo">
			<summary>A single logo that is shown during the Splash Screen. Controls the Sprite that is displayed and its duration.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.IntField(UnityEngine.Rect,System.Int32,UnityEngine.GUIStyle)">
			<summary>Makes a text field for entering integers.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.IntField(UnityEngine.Rect,System.String,System.Int32)">
			<summary>Makes a text field for entering integers.</summary>
		</member>
		<member name="P:UnityEditor.PlayerSettings.enableCrashReportAPI">
			<summary>Enables CrashReport API.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.IntField(UnityEngine.Rect,System.String,System.Int32,UnityEngine.GUIStyle)">
			<summary>Makes a text field for entering integers.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.IntField(UnityEngine.Rect,UnityEngine.GUIContent,System.Int32)">
			<summary>Makes a text field for entering integers.</summary>
		</member>
		<member name="T:UnityEditor.PlayerSettings.VRWindowsMixedReality">
			<summary>Windows Mixed Reality specific Player Settings.</summary>
		</member>
		<member name="M:UnityEditor.PrefabUtility.UnloadPrefabContents(UnityEngine.GameObject)">
			<summary>Releases the content from a Prefab previously loaded with LoadPrefabContents from memory.</summary>
		</member>
		<member name="P:UnityEditor.CloudProjectSettings.projectId">
			<summary>A unique cloud project identifier. It is unique for every project (Read Only).</summary>
		</member>
		<member name="T:UnityEditor.ITerrainLayerCustomUI">
			<summary>Provides an interface to display a custom TerrainLayer UI in the Terrain Layers inspector.</summary>
		</member>
		<member name="P:UnityEditor.CloudProjectSettings.projectName">
			<summary>The name of the project entry in the dashboard associated with this project (Read Only).</summary>
		</member>
		<member name="M:UnityEditor.ITerrainLayerCustomUI.OnTerrainLayerGUI(UnityEngine.TerrainLayer,UnityEngine.Terrain)">
			<summary>Draws the custom GUI for the terrain layer.</summary>
		</member>
		<member name="T:UnityEditor.PrefabUtility.PrefabInstanceUpdated">
			<summary>Delegate for method that is called after Prefab instances in the Scene have been updated.</summary>
		</member>
		<member name="T:UnityEditor.PlayerSettings.SplashScreen">
			<summary>Interface to splash screen player settings.</summary>
		</member>
		<member name="T:UnityEditor.TerrainLayerUtility">
			<summary>A set of helper functions for using terrain layers.</summary>
		</member>
		<member name="P:UnityEditor.CloudProjectSettings.organizationId">
			<summary>The ID of the organization that this project belongs to. (Read Only)</summary>
		</member>
		<member name="M:UnityEditor.EditorAnalytics.RegisterEventWithLimit(System.String,System.Int32,System.Int32,System.String)">
			<summary>This API is used for registering an Editor Analytics event. It is meant for internal use only and is likely to change in the future. User code should never use this API.</summary>
		</member>
		<member name="M:UnityEditor.EditorAnalytics.RegisterEventWithLimit(System.String,System.Int32,System.Int32,System.String,System.Int32)">
			<summary>This API is used for registering an Editor Analytics event. It is meant for internal use only and is likely to change in the future. User code should never use this API.</summary>
		</member>
		<member name="M:UnityEditor.TerrainLayerUtility.ShowTerrainLayersSelectionHelper(UnityEngine.Terrain,System.Int32)">
			<summary>Helper function to show the layer selection window for selecting terrain layers in inspector.</summary>
		</member>
		<member name="P:UnityEditor.CloudProjectSettings.organizationName">
			<summary>The name of the organization that this project belongs to. (Read Only)</summary>
		</member>
		<member name="T:UnityEditor.PrefabAssetType">
			<summary>Enum indicating the type of Prefab Asset, such as Regular, Model and Variant.</summary>
		</member>
		<member name="M:UnityEditor.EditorAnalytics.SendEventWithLimit(System.String,System.Object)">
			<summary>This API is used to send an Editor Analytics event. It is meant for internal use only and is likely to change in the future. User code should never use this API.</summary>
		</member>
		<member name="M:UnityEditor.EditorAnalytics.SendEventWithLimit(System.String,System.Object,System.Int32)">
			<summary>This API is used to send an Editor Analytics event. It is meant for internal use only and is likely to change in the future. User code should never use this API.</summary>
		</member>
		<member name="M:UnityEditor.TerrainLayerUtility.ValidateDiffuseTextureUI(UnityEngine.Texture2D)">
			<summary>Checks whether the texture is a valid TerrainLayer diffuse texture. If it detects that the texture is not valid, it displays a warning message that identifies the issue.</summary>
		</member>
		<member name="T:UnityEditor.PrefabInstanceStatus">
			<summary>Enum with status about whether a Prefab instance is properly connected to its asset.</summary>
		</member>
		<member name="M:UnityEditor.TerrainLayerUtility.CheckNormalMapTextureType(UnityEngine.Texture2D)">
			<summary>Checks whether the texture is correctly imported as a normal map texture.</summary>
		</member>
		<member name="T:UnityEditor.RemoveAssetOptions">
			<summary>Options for removing assets</summary>
		</member>
		<member name="M:UnityEditor.TerrainLayerUtility.ValidateNormalMapTextureUI(UnityEngine.Texture2D,System.Boolean)">
			<summary>Checks whether the texture is a valid TerrainLayer normal map texture. If it detects that the texture is not valid, it displays a warning message that identifies the issue.</summary>
		</member>
		<member name="T:UnityEditor.PrefabUnpackMode">
			<summary>Enum used to determine how a Prefab should be unpacked.</summary>
		</member>
		<member name="T:UnityEditor.ImportAssetOptions">
			<summary>Asset importing options.</summary>
		</member>
		<member name="M:UnityEditor.TerrainLayerUtility.ValidateMaskMapTextureUI(UnityEngine.Texture2D)">
			<summary>Checks whether the texture is a valid TerrainLayer mask map texture. If it detects that the texture is not valid, it displays a warning message that identifies the issue.</summary>
		</member>
		<member name="T:UnityEditor.PlayerSettings.Switch">
			<summary>Nintendo Switch Player settings.</summary>
		</member>
		<member name="T:UnityEditor.LODUtility">
			<summary>LOD Utility Helpers.</summary>
		</member>
		<member name="M:UnityEditor.TerrainLayerUtility.TilingSettingsUI(UnityEngine.TerrainLayer)">
			<summary>Displays the tiling settings UI.</summary>
		</member>
		<member name="T:UnityEditor.StatusQueryOptions">
			<summary>Options for querying the version control system status of a file.</summary>
		</member>
		<member name="T:UnityEditor.PlayerSettings.WSAImageScale">
			<summary>Various image scales, supported by Windows Store Apps.</summary>
		</member>
		<member name="M:UnityEditor.TerrainLayerUtility.TilingSettingsUI(UnityEditor.SerializedProperty,UnityEditor.SerializedProperty)">
			<summary>Displays the tiling settings UI.</summary>
		</member>
		<member name="M:UnityEditor.LODUtility.CalculateLODGroupBoundingBox(UnityEngine.LODGroup)">
			<summary>Recalculate the bounding region for the given LODGroup.</summary>
		</member>
		<member name="T:AssetModificationProcessor">
			<summary></summary>
		</member>
		<member name="T:UnityEditor.AssetModificationProcessor">
			<summary></summary>
		</member>
		<member name="T:UnityEditor.WebGLExceptionSupport">
			<summary>Options for Exception support in WebGL.</summary>
		</member>
		<member name="T:UnityEditor.PlayerSettings.WSAImageType">
			<summary>Image types, supported by Windows Store Apps.</summary>
		</member>
		<member name="T:UnityEditor.iOSTargetOSVersion">
			<summary>Supported iOS deployment versions.</summary>
		</member>
		<member name="T:UnityEditor.WebGLCompressionFormat">
			<summary>An enum containing different compression types.</summary>
		</member>
		<member name="F:UnityEditor.iOSTargetOSVersion.iOS_4_0">
			<summary>iOS 4.0.</summary>
		</member>
		<member name="T:UnityEditor.iOSShowActivityIndicatorOnLoading">
			<summary>Activity Indicator on loading.</summary>
		</member>
		<member name="P:UnityEditor.PlayerSettings.applicationIdentifier">
			<summary>The application identifier for the currently selected build target.</summary>
		</member>
		<member name="M:UnityEditor.SceneView.MoveToView(UnityEngine.Transform)">
			<summary>Transforms all selected object to the scene pivot.</summary>
		</member>
		<member name="M:UnityEditor.SceneView.FrameSelected()">
			<summary>Frame the object selection in the Scene view.</summary>
		</member>
		<member name="P:UnityEditor.PlayerSettings.bundleVersion">
			<summary>Application bundle version shared between iOS &amp; Android platforms.</summary>
		</member>
		<member name="M:UnityEditor.SceneView.FrameSelected(System.Boolean)">
			<summary>Frame the object selection in the Scene view.</summary>
		</member>
		<member name="M:UnityEditor.SceneView.FrameSelected(System.Boolean,System.Boolean)">
			<summary>Frame the object selection in the Scene view.</summary>
		</member>
		<member name="P:UnityEditor.PlayerSettings.statusBarHidden">
			<summary>Returns if status bar should be hidden. Supported on iOS only; on Android, the status bar is always hidden.</summary>
		</member>
		<member name="F:UnityEditor.iOSTargetOSVersion.iOS_4_1">
			<summary>iOS 4.1.</summary>
		</member>
		<member name="M:UnityEditor.SceneView.Frame(UnityEngine.Bounds,System.Boolean)">
			<summary>Frames the given bounds in the Scene view.</summary>
		</member>
		<member name="P:UnityEditor.PlayerSettings.strippingLevel">
			<summary>Deprecated. Use PlayerSettings.GetManagedStrippingLevel and PlayerSettings.SetManagedStrippingLevel instead.</summary>
		</member>
		<member name="F:UnityEditor.iOSTargetOSVersion.iOS_4_2">
			<summary>iOS 4.2.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.IntField(UnityEngine.Rect,UnityEngine.GUIContent,System.Int32,UnityEngine.GUIStyle)">
			<summary>Makes a text field for entering integers.</summary>
		</member>
		<member name="M:UnityEditor.SceneView.CameraMode UnityEditor.SceneView.AddCameraMode(System.String,System.String)">
			<summary>Add a custom camera mode to the Scene view camera mode list.</summary>
		</member>
		<member name="P:UnityEditor.PlayerSettings.stripEngineCode">
			<summary>Remove unused Engine code from your build (IL2CPP-only).</summary>
		</member>
		<member name="F:UnityEditor.iOSTargetOSVersion.iOS_4_3">
			<summary>iOS 4.3.</summary>
		</member>
		<member name="T:UnityEditor.ScriptableWizard">
			<summary>Derive from this class to create an editor wizard.</summary>
		</member>
		<member name="M:UnityEditor.SceneView.ClearUserDefinedCameraModes()">
			<summary>Remove all user-defined camera modes.</summary>
		</member>
		<member name="P:UnityEditor.PlayerSettings.defaultInterfaceOrientation">
			<summary>Default screen orientation for mobiles.</summary>
		</member>
		<member name="F:UnityEditor.iOSTargetOSVersion.iOS_5_0">
			<summary>iOS 5.0.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.DelayedIntField(UnityEngine.Rect,System.Int32)">
			<summary>Makes a delayed text field for entering integers.</summary>
		</member>
		<member name="P:UnityEditor.ScriptableWizard.helpString">
			<summary>Allows you to set the help text of the wizard.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.DelayedIntField(UnityEngine.Rect,System.Int32,UnityEngine.GUIStyle)">
			<summary>Makes a delayed text field for entering integers.</summary>
		</member>
		<member name="M:UnityEditor.SceneView.CameraMode UnityEditor.SceneView.GetBuiltinCameraMode(UnityEditor.DrawCameraMode)">
			<summary>Gets the built-in CameraMode that matches the specified DrawCameraMode.</summary>
		</member>
		<member name="P:UnityEditor.PlayerSettings.allowedAutorotateToPortrait">
			<summary>Is auto-rotation to portrait supported?</summary>
		</member>
		<member name="F:UnityEditor.iOSTargetOSVersion.iOS_5_1">
			<summary>iOS 5.1.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.DelayedIntField(UnityEngine.Rect,System.String,System.Int32)">
			<summary>Makes a delayed text field for entering integers.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.DelayedIntField(UnityEngine.Rect,System.String,System.Int32,UnityEngine.GUIStyle)">
			<summary>Makes a delayed text field for entering integers.</summary>
		</member>
		<member name="P:UnityEditor.ScriptableWizard.errorString">
			<summary>Allows you to set the error text of the wizard.</summary>
		</member>
		<member name="T:UnityEditor.SceneView.CameraMode">
			<summary>Describes a built-in Scene view mode.</summary>
		</member>
		<member name="P:UnityEditor.PlayerSettings.allowedAutorotateToPortraitUpsideDown">
			<summary>Is auto-rotation to portrait upside-down supported?</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.DelayedIntField(UnityEngine.Rect,UnityEngine.GUIContent,System.Int32)">
			<summary>Makes a delayed text field for entering integers.</summary>
		</member>
		<member name="F:UnityEditor.iOSTargetOSVersion.iOS_6_0">
			<summary>iOS 6.0.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.DelayedIntField(UnityEngine.Rect,UnityEngine.GUIContent,System.Int32,UnityEngine.GUIStyle)">
			<summary>Makes a delayed text field for entering integers.</summary>
		</member>
		<member name="P:UnityEditor.ScriptableWizard.createButtonName">
			<summary>Allows you to set the text shown on the create button of the wizard.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.DelayedIntField(UnityEngine.Rect,UnityEditor.SerializedProperty)">
			<summary>Makes a delayed text field for entering integers.</summary>
		</member>
		<member name="F:UnityEditor.iOSTargetOSVersion.iOS_7_0">
			<summary>iOS 7.0.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.DelayedIntField(UnityEngine.Rect,UnityEditor.SerializedProperty,UnityEngine.GUIContent)">
			<summary>Makes a delayed text field for entering integers.</summary>
		</member>
		<member name="P:UnityEditor.PlayerSettings.allowedAutorotateToLandscapeRight">
			<summary>Is auto-rotation to landscape right supported?</summary>
		</member>
		<member name="T:UnityEditor.SceneView.SceneViewState">
			<summary>A collection of graphic settings for this SceneView. All graphic settings are boolean.</summary>
		</member>
		<member name="T:UnityEditor.iOSStatusBarStyle">
			<summary>iOS status bar style.</summary>
		</member>
		<member name="T:UnityEditor.SceneView.CameraSettings">
			<summary>Use this class to set SceneView Camera properties.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.HelpBox(UnityEngine.GUIContent,System.Boolean)">
			<summary>Make a help box with a message to the user.</summary>
		</member>
		<member name="T:UnityEditor.iOSAppInBackgroundBehavior">
			<summary>Application behavior when entering background.</summary>
		</member>
		<member name="T:UnityEditor.iOSBackgroundMode">
			<summary>Background modes supported by the application corresponding to project settings in Xcode.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.Space()">
			<summary>Make a small space between the previous control and the following.</summary>
		</member>
		<member name="P:UnityEditor.PlayerSettings.allowedAutorotateToLandscapeLeft">
			<summary>Is auto-rotation to landscape left supported?</summary>
		</member>
		<member name="T:UnityEditor.iOSLaunchScreenImageType">
			<summary>iOS launch screen settings.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.BeginToggleGroup(System.String,System.Boolean)">
			<summary>Begin a vertical group with a toggle to enable or disable all the controls within at once.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.BeginToggleGroup(UnityEngine.GUIContent,System.Boolean)">
			<summary>Begin a vertical group with a toggle to enable or disable all the controls within at once.</summary>
		</member>
		<member name="F:UnityEditor.iOSLaunchScreenImageType.iPhonePortraitImage">
			<summary>Portrait oriented launch screen image on the iPhone.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.EndToggleGroup()">
			<summary>Close a group started with BeginToggleGroup.</summary>
		</member>
		<member name="F:UnityEditor.iOSLaunchScreenImageType.iPhoneLandscapeImage">
			<summary>Landscape oriented launch screen image on the iPhone.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.BeginHorizontal(UnityEngine.GUILayoutOption[])">
			<summary>Begin a horizontal group and get its rect back.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.BeginHorizontal(UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
			<summary>Begin a horizontal group and get its rect back.</summary>
		</member>
		<member name="F:UnityEditor.iOSLaunchScreenImageType.iPadImage">
			<summary>Launch screen image on the iPad.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.BeginHorizontal(UnityEngine.GUIContent,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
			<summary>Begin a horizontal group and get its rect back.</summary>
		</member>
		<member name="T:UnityEditor.iOSLaunchScreenType">
			<summary>iOS launch screen settings.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.EndHorizontal()">
			<summary>Close a group started with BeginHorizontal.</summary>
		</member>
		<member name="T:UnityEditor.ProvisioningProfileType">
			<summary>The type of the iOS provisioning profile if manual signing is used.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.BeginVertical(UnityEngine.GUILayoutOption[])">
			<summary>Begin a vertical group and get its rect back.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.BeginVertical(UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
			<summary>Begin a vertical group and get its rect back.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.BeginVertical(UnityEngine.GUIContent,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
			<summary>Begin a vertical group and get its rect back.</summary>
		</member>
		<member name="T:UnityEditor.iOSDeviceRequirement">
			<summary>A device requirement description used for configuration of App Slicing.</summary>
		</member>
		<member name="T:UnityEditor.ShaderUtil.ShaderPropertyType">
			<summary>Type of a given texture property.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.EndVertical()">
			<summary>Close a group started with BeginVertical.</summary>
		</member>
		<member name="P:UnityEditor.iOSDeviceRequirement.values">
			<summary>The values of the device requirement description.</summary>
		</member>
		<member name="T:UnityEditor.ShaderData">
			<summary>This class describes a shader.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.BeginScrollView(UnityEngine.Vector2,UnityEngine.GUILayoutOption[])">
			<summary>Begin an automatically laid out scrollview.</summary>
		</member>
		<member name="T:UnityEditor.tvOSSdkVersion">
			<summary>Supported tvOS SDK versions.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.BeginScrollView(UnityEngine.Vector2,System.Boolean,System.Boolean,UnityEngine.GUILayoutOption[])">
			<summary>Begin an automatically laid out scrollview.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.BeginScrollView(UnityEngine.Vector2,UnityEngine.GUIStyle,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
			<summary>Begin an automatically laid out scrollview.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.BeginScrollView(UnityEngine.Vector2,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
			<summary>Begin an automatically laid out scrollview.</summary>
		</member>
		<member name="M:UnityEditor.ShaderData.Subshader UnityEditor.ShaderData.GetSubshader(System.Int32)">
			<summary>Get a subshader.</summary>
		</member>
		<member name="T:UnityEditor.tvOSTargetOSVersion">
			<summary>Supported tvOS deployment versions.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.BeginScrollView(UnityEngine.Vector2,System.Boolean,System.Boolean,UnityEngine.GUIStyle,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
			<summary>Begin an automatically laid out scrollview.</summary>
		</member>
		<member name="T:UnityEditor.WebGLLinkerTarget">
			<summary>The build format options available when building to WebGL.</summary>
		</member>
		<member name="P:UnityEditor.PlayerSettings.useAnimatedAutorotation">
			<summary>Let the OS autorotate the screen as the device orientation changes.</summary>
		</member>
		<member name="T:UnityEditor.ShaderData.Subshader">
			<summary>This class describes a subshader.</summary>
		</member>
		<member name="P:UnityEditor.PlayerSettings.use32BitDisplayBuffer">
			<summary>32-bit Display Buffer is used.</summary>
		</member>
		<member name="F:UnityEditor.tvOSTargetOSVersion.tvOS_9_0">
			<summary>Target tvOS 9.0.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.LongField(UnityEngine.Rect,System.Int64)">
			<summary>Makes a text field for entering long integers.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.BeginScrollView(UnityEngine.Vector2,System.Boolean,System.Boolean,UnityEngine.GUIStyle,UnityEngine.GUIStyle,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
			<summary>Begin an automatically laid out scrollview.</summary>
		</member>
		<member name="T:UnityEditor.StaticEditorFlags">
			<summary>Static Editor Flags.</summary>
		</member>
		<member name="P:UnityEditor.PlayerSettings.preserveFramebufferAlpha">
			<summary>When enabled, preserves the alpha value in the framebuffer to support rendering over native UI on Android.</summary>
		</member>
		<member name="T:UnityEditor.ShaderData.Pass">
			<summary>This class describes a pass of a subshader.</summary>
		</member>
		<member name="F:UnityEditor.tvOSTargetOSVersion.tvOS_9_1">
			<summary>Target tvOS 9.1.</summary>
		</member>
		<member name="P:UnityEditor.PlayerSettings.apiCompatibilityLevel">
			<summary>Deprecated. Use PlayerSettings.GetApiCompatibilityLevel and PlayerSettings.SetApiCompatibilityLevel instead.</summary>
		</member>
		<member name="T:UnityEditor.ScriptCompiler">
			<summary>Represents different C# compilers that can be used to compile C# scripts.</summary>
		</member>
		<member name="T:UnityEditor.StaticOcclusionCulling">
			<summary>StaticOcclusionCulling lets you perform static occlusion culling operations.</summary>
		</member>
		<member name="P:UnityEditor.PlayerSettings.stripUnusedMeshComponents">
			<summary>Should unused Mesh components be excluded from game build?</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.EndScrollView()">
			<summary>Ends a scrollview started with a call to BeginScrollView.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.EndScrollView(System.Boolean)">
			<summary>Ends a scrollview started with a call to BeginScrollView.</summary>
		</member>
		<member name="P:UnityEditor.StaticOcclusionCulling.isRunning">
			<summary>Used to check if asynchronous generation of static occlusion culling data is still running.</summary>
		</member>
		<member name="P:UnityEditor.PlayerSettings.advancedLicense">
			<summary>Is the advanced version being used?</summary>
		</member>
		<member name="T:UnityEditor.Unwrapping">
			<summary>This class holds everything you may need in regard to uv-unwrapping.</summary>
		</member>
		<member name="T:UnityEditor.Undo">
			<summary>Lets you register undo operations on specific objects you are about to perform changes on.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.PropertyField(UnityEditor.SerializedProperty,UnityEngine.GUILayoutOption[])">
			<summary>Make a field for SerializedProperty.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.LongField(UnityEngine.Rect,System.Int64,UnityEngine.GUIStyle)">
			<summary>Makes a text field for entering long integers.</summary>
		</member>
		<member name="P:UnityEditor.StaticOcclusionCulling.doesSceneHaveManualPortals">
			<summary>Does the Scene contain any occlusion portals that were added manually rather than automatically?</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.PropertyField(UnityEditor.SerializedProperty,UnityEngine.GUIContent,UnityEngine.GUILayoutOption[])">
			<summary>Make a field for SerializedProperty.</summary>
		</member>
		<member name="P:UnityEditor.PlayerSettings.aotOptions">
			<summary>Additional AOT compilation options. Shared by AOT platforms.</summary>
		</member>
		<member name="M:UnityEditor.Unwrapping.GeneratePerTriangleUV(UnityEngine.Mesh)">
			<summary>Will generate per-triangle uv (3 UVs for each triangle) with default settings.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.PropertyField(UnityEditor.SerializedProperty,System.Boolean,UnityEngine.GUILayoutOption[])">
			<summary>Make a field for SerializedProperty.</summary>
		</member>
		<member name="F:UnityEditor.Undo.UndoRedoCallback UnityEditor.Undo.undoRedoPerformed">
			<summary>Callback that is triggered after an undo or redo was executed.</summary>
		</member>
		<member name="M:UnityEditor.Unwrapping.GeneratePerTriangleUV(UnityEngine.Mesh,UnityEditor.UnwrapParam)">
			<summary>Will generate per-triangle uv (3 UVs for each triangle) with default settings.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.PropertyField(UnityEditor.SerializedProperty,UnityEngine.GUIContent,System.Boolean,UnityEngine.GUILayoutOption[])">
			<summary>Make a field for SerializedProperty.</summary>
		</member>
		<member name="P:UnityEditor.StaticOcclusionCulling.umbraDataSize">
			<summary>Returns the size in bytes that the PVS data is currently taking up in this Scene on disk.</summary>
		</member>
		<member name="P:UnityEditor.PlayerSettings.defaultCursor">
			<summary>The default cursor for your application.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.LongField(UnityEngine.Rect,System.String,System.Int64)">
			<summary>Makes a text field for entering long integers.</summary>
		</member>
		<member name="F:UnityEditor.Undo.WillFlushUndoRecord UnityEditor.Undo.willFlushUndoRecord">
			<summary>Invoked before the Undo system performs a flush.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.GetControlRect(UnityEngine.GUILayoutOption[])">
			<summary>Get a rect for an Editor control.</summary>
		</member>
		<member name="M:UnityEditor.Unwrapping.GenerateSecondaryUVSet(UnityEngine.Mesh)">
			<summary>Will auto generate uv2 with default settings for provided mesh, and fill them in.</summary>
		</member>
		<member name="M:UnityEditor.StaticOcclusionCulling.Compute()">
			<summary>Used to generate static occlusion culling data.</summary>
		</member>
		<member name="P:UnityEditor.PlayerSettings.cursorHotspot">
			<summary>Default cursor's click position in pixels from the top left corner of the cursor image.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.GetControlRect(System.Boolean,UnityEngine.GUILayoutOption[])">
			<summary>Get a rect for an Editor control.</summary>
		</member>
		<member name="T:UnityEditor.SerializedPropertyType">
			<summary>Type of a SerializedProperty.</summary>
		</member>
		<member name="M:UnityEditor.StaticOcclusionCulling.GenerateInBackground()">
			<summary>Used to compute static occlusion culling data asynchronously.</summary>
		</member>
		<member name="M:UnityEditor.Unwrapping.GenerateSecondaryUVSet(UnityEngine.Mesh,UnityEditor.UnwrapParam)">
			<summary>Will auto generate uv2 with default settings for provided mesh, and fill them in.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.LongField(UnityEngine.Rect,System.String,System.Int64,UnityEngine.GUIStyle)">
			<summary>Makes a text field for entering long integers.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.LongField(UnityEngine.Rect,UnityEngine.GUIContent,System.Int64)">
			<summary>Makes a text field for entering long integers.</summary>
		</member>
		<member name="M:UnityEditor.Undo.RegisterCompleteObjectUndo(UnityEngine.Object,System.String)">
			<summary>Stores a copy of the object states on the undo stack.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.LongField(UnityEngine.Rect,UnityEngine.GUIContent,System.Int64,UnityEngine.GUIStyle)">
			<summary>Makes a text field for entering long integers.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.Popup(UnityEngine.Rect,System.Int32,System.String[])">
			<summary>Makes a generic popup selection field.</summary>
		</member>
		<member name="M:UnityEditor.Undo.RegisterCompleteObjectUndo(UnityEngine.Object[],System.String)">
			<summary>Stores a copy of the object states on the undo stack.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.GetControlRect(System.Boolean,System.Single,UnityEngine.GUILayoutOption[])">
			<summary>Get a rect for an Editor control.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.Popup(UnityEngine.Rect,System.Int32,System.String[],UnityEngine.GUIStyle)">
			<summary>Makes a generic popup selection field.</summary>
		</member>
		<member name="P:UnityEditor.EditorAnalyticsSessionInfo.id">
			<summary>A random, unique GUID identifying the current Editor session.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.Popup(UnityEngine.Rect,System.Int32,UnityEngine.GUIContent[])">
			<summary>Makes a generic popup selection field.</summary>
		</member>
		<member name="P:UnityEditor.PlayerSettings.accelerometerFrequency">
			<summary>Accelerometer update frequency.</summary>
		</member>
		<member name="M:UnityEditor.StaticOcclusionCulling.Cancel()">
			<summary>Used to cancel asynchronous generation of static occlusion culling data.</summary>
		</member>
		<member name="T:UnityEditor.VertexChannelCompressionFlags">
			<summary>Use these enum flags to specify which elements of a vertex to compress.</summary>
		</member>
		<member name="M:UnityEditor.Undo.SetTransformParent(UnityEngine.Transform,UnityEngine.Transform,System.String)">
			<summary>Sets the parent of transform to the new parent and records an undo operation.</summary>
		</member>
		<member name="T:UnityEditor.SerializedProperty">
			<summary>SerializedProperty and SerializedObject are classes for editing properties on objects in a completely generic way that automatically handles undo and styling UI for Prefabs.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.Popup(UnityEngine.Rect,System.Int32,UnityEngine.GUIContent[],UnityEngine.GUIStyle)">
			<summary>Makes a generic popup selection field.</summary>
		</member>
		<member name="P:UnityEditor.PlayerSettings.useDirect3D11">
			<summary>Should Direct3D 11 be used when available?</summary>
		</member>
		<member name="M:UnityEditor.StaticOcclusionCulling.Clear()">
			<summary>Clears the PVS of the opened Scene.</summary>
		</member>
		<member name="M:UnityEditor.Undo.MoveGameObjectToScene(UnityEngine.GameObject,UnityEngine.SceneManagement.Scene,System.String)">
			<summary></summary>
		</member>
		<member name="P:UnityEditor.SerializedProperty.serializedObject">
			<summary></summary>
		</member>
		<member name="P:UnityEditor.PlayerSettings.stereoscopic3D">
			<summary>Should player render in stereoscopic 3d on supported hardware?</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.Popup(UnityEngine.Rect,System.String,System.Int32,System.String[])">
			<summary>Makes a generic popup selection field.</summary>
		</member>
		<member name="M:UnityEditor.Undo.RegisterCreatedObjectUndo(UnityEngine.Object,System.String)">
			<summary>Register an undo operations for a newly created object.</summary>
		</member>
		<member name="P:UnityEditor.SerializedProperty.exposedReferenceValue">
			<summary>A reference to another Object in the Scene. This reference is resolved in the context of the SerializedObject containing the SerializedProperty.</summary>
		</member>
		<member name="P:UnityEditor.PlayerSettings.muteOtherAudioSources">
			<summary>Stops or allows audio from other applications to play in the background while your Unity application is running.</summary>
		</member>
		<member name="T:UnityEditor.StaticOcclusionCullingVisualization">
			<summary>Used to visualize static occlusion culling at development time in Scene view.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.Popup(UnityEngine.Rect,System.String,System.Int32,System.String[],UnityEngine.GUIStyle)">
			<summary>Makes a generic popup selection field.</summary>
		</member>
		<member name="T:UnityEngine.U2D.Interface.Event">
			<summary>A UnityGUI event.</summary>
		</member>
		<member name="M:UnityEditor.Undo.DestroyObjectImmediate(UnityEngine.Object)">
			<summary>Destroys the object and records an undo operation so that it can be recreated.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.Popup(UnityEngine.Rect,UnityEngine.GUIContent,System.Int32,UnityEngine.GUIContent[])">
			<summary>Makes a generic popup selection field.</summary>
		</member>
		<member name="P:UnityEditor.StaticOcclusionCullingVisualization.showOcclusionCulling">
			<summary>If set to true, visualization of target volumes is enabled.</summary>
		</member>
		<member name="M:UnityEditor.Undo.AddComponent(UnityEngine.GameObject,System.Type)">
			<summary>Adds a component to the game object and registers an undo operation for this action.</summary>
		</member>
		<member name="P:UnityEditor.SerializedProperty.hasMultipleDifferentValues">
			<summary>Does this property represent multiple different values due to multi-object editing? (Read Only)</summary>
		</member>
		<member name="P:UnityEditor.PlayerSettings.legacyClampBlendShapeWeights">
			<summary>Defines whether the BlendShape weight range in SkinnedMeshRenderers is clamped.</summary>
		</member>
		<member name="M:UnityEditor.Undo.AddComponent(UnityEngine.GameObject)">
			<summary>Adds a component to the game object and registers an undo operation for this action.</summary>
		</member>
		<member name="P:UnityEngine.U2D.Interface.Event.type">
			<summary>The type of event.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.Popup(UnityEngine.Rect,UnityEngine.GUIContent,System.Int32,UnityEngine.GUIContent[],UnityEngine.GUIStyle)">
			<summary>Makes a generic popup selection field.</summary>
		</member>
		<member name="M:UnityEditor.GridBrush.Reset()">
			<summary>Clear all data of the brush.</summary>
		</member>
		<member name="P:UnityEngine.U2D.Interface.Event.commandName">
			<summary>The name of an ExecuteCommand or ValidateCommand Event.</summary>
		</member>
		<member name="P:UnityEditor.SerializedProperty.displayName">
			<summary>Nice display name of the property. (Read Only)</summary>
		</member>
		<member name="P:UnityEditor.PlayerSettings.enableMetalAPIValidation">
			<summary>Enables Metal API validation in the Editor.</summary>
		</member>
		<member name="P:UnityEditor.StaticOcclusionCullingVisualization.showPreVisualization">
			<summary>If set to true, the visualization lines of the PVS volumes will show all cells rather than cells after culling.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.GetControlRect(System.Boolean,System.Single,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
			<summary>Get a rect for an Editor control.</summary>
		</member>
		<member name="T:UnityEditor.PlayerSettings.WSAInputSource">
			<summary>Where Unity takes input from (subscripbes to events).</summary>
		</member>
		<member name="F:UnityEditor.iOSTargetOSVersion.iOS_7_1">
			<summary>iOS 7.1.</summary>
		</member>
		<member name="P:UnityEditor.ScriptableWizard.otherButtonName">
			<summary>Allows you to set the text shown on the optional other button of the wizard. Leave this parameter out to leave the button out.</summary>
		</member>
		<member name="P:UnityEditor.SerializedProperty.name">
			<summary>Name of the property. (Read Only)</summary>
		</member>
		<member name="P:UnityEngine.U2D.Interface.Event.control">
			<summary>Is Control key held down? (Read Only)</summary>
		</member>
		<member name="M:UnityEditor.Undo.RegisterFullObjectHierarchyUndo(UnityEngine.Object,System.String)">
			<summary>Copy the states of a hierarchy of objects onto the undo stack.</summary>
		</member>
		<member name="M:UnityEditor.Undo.RegisterFullObjectHierarchyUndo(UnityEngine.Object)">
			<summary>Copy the states of a hierarchy of objects onto the undo stack.</summary>
		</member>
		<member name="P:UnityEditor.EditorAnalyticsSessionInfo.sessionCount">
			<summary>The number of Editor sessions that have occurred since the current instance of the Unity Editor was installed.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.EnumPopup(UnityEngine.Rect,System.Enum)">
			<summary>Makes an enum popup selection field.</summary>
		</member>
		<member name="P:UnityEditor.PlayerSettings.firstStreamedLevelWithResources">
			<summary>First level to have access to all Resources.Load assets in Streamed Web Players.</summary>
		</member>
		<member name="T:UnityEditor.PlayerSettings.WSASupportedFileType">
			<summary>Describes supported file type for File Type Association declaration.</summary>
		</member>
		<member name="P:UnityEditor.StaticOcclusionCullingVisualization.showViewVolumes">
			<summary>If set to true, visualization of view volumes is enabled.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.BeginFadeGroup(System.Single)">
			<summary>Begins a group that can be be hidden/shown and the transition will be animated.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.EnumPopup(UnityEngine.Rect,System.Enum,UnityEngine.GUIStyle)">
			<summary>Makes an enum popup selection field.</summary>
		</member>
		<member name="P:UnityEditor.ScriptableWizard.isValid">
			<summary>Allows you to enable and disable the wizard create button, so that the user can not click it.</summary>
		</member>
		<member name="M:UnityEditor.GridBrush.UpdateSizeAndPivot(UnityEngine.Vector3Int,UnityEngine.Vector3Int)">
			<summary>Updates the size, pivot and the number of layers of the brush.</summary>
		</member>
		<member name="F:UnityEditor.iOSTargetOSVersion.iOS_8_0">
			<summary>iOS 8.0.</summary>
		</member>
		<member name="P:UnityEditor.SerializedProperty.type">
			<summary>Type name of the property. (Read Only)</summary>
		</member>
		<member name="P:UnityEngine.U2D.Interface.Event.alt">
			<summary>Is Alt/Option key held down? (Read Only)</summary>
		</member>
		<member name="M:UnityEditor.Undo.RecordObject(UnityEngine.Object,System.String)">
			<summary>Records any changes done on the object after the RecordObject function.</summary>
		</member>
		<member name="P:UnityEditor.EditorAnalyticsSessionInfo.elapsedTime">
			<summary>The length of the current session, in milliseconds.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.EnumPopup(UnityEngine.Rect,System.String,System.Enum)">
			<summary>Makes an enum popup selection field.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.EnumPopup(UnityEngine.Rect,System.String,System.Enum,UnityEngine.GUIStyle)">
			<summary>Makes an enum popup selection field.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.EnumPopup(UnityEngine.Rect,UnityEngine.GUIContent,System.Enum)">
			<summary>Makes an enum popup selection field.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.EndFadeGroup()">
			<summary>Closes a group started with BeginFadeGroup.</summary>
		</member>
		<member name="F:UnityEditor.iOSTargetOSVersion.iOS_8_1">
			<summary>iOS 8.1.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.EnumPopup(UnityEngine.Rect,UnityEngine.GUIContent,System.Enum,UnityEngine.GUIStyle)">
			<summary>Makes an enum popup selection field.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.EnumPopup(UnityEngine.Rect,UnityEngine.GUIContent,System.Enum,System.Func`2<System.Enum,System.Boolean>,System.Boolean,UnityEngine.GUIStyle)">
			<summary>Makes an enum popup selection field.</summary>
		</member>
		<member name="T:UnityEditor.AndroidArchitecture">
			<summary>Android CPU architecture.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.IntPopup(UnityEngine.Rect,System.Int32,System.String[],System.Int32[])">
			<summary>Makes an integer popup selection field.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.IntPopup(UnityEngine.Rect,System.Int32,System.String[],System.Int32[],UnityEngine.GUIStyle)">
			<summary>Makes an integer popup selection field.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.IntPopup(UnityEngine.Rect,System.Int32,UnityEngine.GUIContent[],System.Int32[])">
			<summary>Makes an integer popup selection field.</summary>
		</member>
		<member name="T:UnityEditor.AndroidSdkVersions">
			<summary>Supported Android SDK versions.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.IntPopup(UnityEngine.Rect,System.Int32,UnityEngine.GUIContent[],System.Int32[],UnityEngine.GUIStyle)">
			<summary>Makes an integer popup selection field.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.IntPopup(UnityEngine.Rect,UnityEngine.GUIContent,System.Int32,UnityEngine.GUIContent[],System.Int32[])">
			<summary>Makes an integer popup selection field.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.IntPopup(UnityEngine.Rect,UnityEngine.GUIContent,System.Int32,UnityEngine.GUIContent[],System.Int32[],UnityEngine.GUIStyle)">
			<summary>Makes an integer popup selection field.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.IntPopup(UnityEngine.Rect,UnityEditor.SerializedProperty,UnityEngine.GUIContent[],System.Int32[])">
			<summary>Makes an integer popup selection field.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.IntPopup(UnityEngine.Rect,UnityEditor.SerializedProperty,UnityEngine.GUIContent[],System.Int32[],UnityEngine.GUIContent)">
			<summary>Makes an integer popup selection field.</summary>
		</member>
		<member name="T:UnityEditor.AndroidPreferredInstallLocation">
			<summary>Preferred application install location.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.IntPopup(UnityEngine.Rect,System.String,System.Int32,System.String[],System.Int32[])">
			<summary>Makes an integer popup selection field.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.IntPopup(UnityEngine.Rect,System.String,System.Int32,System.String[],System.Int32[],UnityEngine.GUIStyle)">
			<summary>Makes an integer popup selection field.</summary>
		</member>
		<member name="T:UnityEditor.AndroidShowActivityIndicatorOnLoading">
			<summary>Application should show ActivityIndicator when loading.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.TagField(UnityEngine.Rect,System.String)">
			<summary>Makes a tag selection field.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.TagField(UnityEngine.Rect,System.String,UnityEngine.GUIStyle)">
			<summary>Makes a tag selection field.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.TagField(UnityEngine.Rect,System.String,System.String)">
			<summary>Makes a tag selection field.</summary>
		</member>
		<member name="T:UnityEditor.AndroidGamepadSupportLevel">
			<summary>Gamepad support level for Android TV.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.TagField(UnityEngine.Rect,System.String,System.String,UnityEngine.GUIStyle)">
			<summary>Makes a tag selection field.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.TagField(UnityEngine.Rect,UnityEngine.GUIContent,System.String)">
			<summary>Makes a tag selection field.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.TagField(UnityEngine.Rect,UnityEngine.GUIContent,System.String,UnityEngine.GUIStyle)">
			<summary>Makes a tag selection field.</summary>
		</member>
		<member name="T:UnityEditor.AndroidSplashScreenScale">
			<summary>Android splash screen scale modes.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.LayerField(UnityEngine.Rect,System.Int32)">
			<summary>Makes a layer selection field.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.LayerField(UnityEngine.Rect,System.Int32,UnityEngine.GUIStyle)">
			<summary>Makes a layer selection field.</summary>
		</member>
		<member name="T:UnityEditor.AndroidBlitType">
			<summary>Describes the method for how content is displayed on the screen.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.LayerField(UnityEngine.Rect,System.String,System.Int32)">
			<summary>Makes a layer selection field.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.LayerField(UnityEngine.Rect,System.String,System.Int32,UnityEngine.GUIStyle)">
			<summary>Makes a layer selection field.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.LayerField(UnityEngine.Rect,UnityEngine.GUIContent,System.Int32)">
			<summary>Makes a layer selection field.</summary>
		</member>
		<member name="T:UnityEditor.AppleMobileArchitecture">
			<summary>Apple Mobile CPU architecture.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.LayerField(UnityEngine.Rect,UnityEngine.GUIContent,System.Int32,UnityEngine.GUIStyle)">
			<summary>Makes a layer selection field.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.BeginBuildTargetSelectionGrouping()">
			<summary>Begin a build target grouping and get the selected BuildTargetGroup back.</summary>
		</member>
		<member name="T:UnityEditor.iOSSdkVersion">
			<summary>Supported iOS SDK versions.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.MaskField(UnityEngine.Rect,UnityEngine.GUIContent,System.Int32,System.String[])">
			<summary>Makes a field for masks.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.MaskField(UnityEngine.Rect,UnityEngine.GUIContent,System.Int32,System.String[],UnityEngine.GUIStyle)">
			<summary>Makes a field for masks.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.EndBuildTargetSelectionGrouping()">
			<summary>Close a group started with BeginBuildTargetSelectionGrouping.</summary>
		</member>
		<member name="M:UnityEditor.Undo.RecordObjects(UnityEngine.Object[],System.String)">
			<summary>Records multiple undoable objects in a single call. This is the same as calling Undo.RecordObject multiple times.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.DropdownButton(UnityEngine.GUIContent,UnityEngine.FocusType,UnityEngine.GUILayoutOption[])">
			<summary>Make a button that reacts to mouse down, for displaying your own dropdown content.</summary>
		</member>
		<member name="P:UnityEditor.PlayerSettings.locationUsageDescription">
			<summary>Describes the reason for access to the user's location data.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.DropdownButton(UnityEngine.GUIContent,UnityEngine.FocusType,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
			<summary>Make a button that reacts to mouse down, for displaying your own dropdown content.</summary>
		</member>
		<member name="P:UnityEditor.PlayerSettings.renderingPath">
			<summary>Which rendering path is enabled?</summary>
		</member>
		<member name="M:UnityEditor.GridBrush.SetTile(UnityEngine.Vector3Int,UnityEngine.Tilemaps.TileBase)">
			<summary>Sets a Tile at the position in the brush.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.EnumMaskField(System.Enum,UnityEngine.GUILayoutOption[])">
			<summary>This method is obsolete. Use EditorGUILayout.EnumFlagsField instead.Make a field for enum based masks.</summary>
		</member>
		<member name="M:UnityEditor.Undo.ClearUndo(UnityEngine.Object)">
			<summary>Removes all Undo operation for the identifier object registered using Undo.RegisterCompleteObjectUndo from the undo stack.</summary>
		</member>
		<member name="P:UnityEditor.SerializedProperty.arrayElementType">
			<summary>Type name of the element in an array property. (Read Only)</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.EnumMaskField(System.Enum,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
			<summary>This method is obsolete. Use EditorGUILayout.EnumFlagsField instead.Make a field for enum based masks.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.EnumMaskField(System.String,System.Enum,UnityEngine.GUILayoutOption[])">
			<summary>This method is obsolete. Use EditorGUILayout.EnumFlagsField instead.Make a field for enum based masks.</summary>
		</member>
		<member name="P:UnityEditor.PlayerSettings.vulkanEnableSetSRGBWrite">
			<summary>Enables Graphics.SetSRGBWrite() on Vulkan renderer.</summary>
		</member>
		<member name="M:UnityEditor.Undo.PerformUndo()">
			<summary>Perform an Undo operation.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.EnumMaskField(System.String,System.Enum,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
			<summary>This method is obsolete. Use EditorGUILayout.EnumFlagsField instead.Make a field for enum based masks.</summary>
		</member>
		<member name="P:UnityEditor.SerializedProperty.tooltip">
			<summary>Tooltip of the property. (Read Only)</summary>
		</member>
		<member name="P:UnityEditor.StaticOcclusionCullingVisualization.showPortals">
			<summary>If set to true, visualization of portals is enabled.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.EnumMaskField(UnityEngine.GUIContent,System.Enum,UnityEngine.GUILayoutOption[])">
			<summary>This method is obsolete. Use EditorGUILayout.EnumFlagsField instead.Make a field for enum based masks.</summary>
		</member>
		<member name="P:UnityEditor.PlayerSettings.vulkanUseSWCommandBuffers">
			<summary>Use software command buffers for building rendering commands on Vulkan.</summary>
		</member>
		<member name="M:UnityEditor.Undo.PerformRedo()">
			<summary>Perform an Redo operation.</summary>
		</member>
		<member name="P:UnityEditor.StaticOcclusionCullingVisualization.showVisibilityLines">
			<summary>If set to true, visualization of portals is enabled.</summary>
		</member>
		<member name="P:UnityEditor.SerializedProperty.depth">
			<summary>Nesting depth of the property. (Read Only)</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.EnumMaskField(UnityEngine.GUIContent,System.Enum,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
			<summary>This method is obsolete. Use EditorGUILayout.EnumFlagsField instead.Make a field for enum based masks.</summary>
		</member>
		<member name="P:UnityEditor.SerializedProperty.propertyPath">
			<summary>Full path of the property. (Read Only)</summary>
		</member>
		<member name="M:UnityEditor.Undo.IncrementCurrentGroup()">
			<summary>Unity automatically groups undo operations by the current group index.</summary>
		</member>
		<member name="P:UnityEditor.PlayerSettings.enable360StereoCapture">
			<summary>Enable 360 Stereo Capture support on the current build target.</summary>
		</member>
		<member name="P:UnityEditor.StaticOcclusionCullingVisualization.showGeometryCulling">
			<summary>If set to true, culling of geometry is enabled.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.EnumMaskPopup(System.String,System.Enum,UnityEngine.GUILayoutOption[])">
			<summary>This method is obsolete. Use EditorGUILayout.EnumFlagsField instead.Make an enum popup selection field for a bitmask.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.EnumMaskPopup(System.String,System.Enum,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
			<summary>This method is obsolete. Use EditorGUILayout.EnumFlagsField instead.Make an enum popup selection field for a bitmask.</summary>
		</member>
		<member name="P:UnityEditor.SerializedProperty.editable">
			<summary>Is this property editable? (Read Only)</summary>
		</member>
		<member name="M:UnityEditor.Undo.GetCurrentGroup()">
			<summary>Unity automatically groups undo operations by the current group index.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.EnumMaskPopup(UnityEngine.GUIContent,System.Enum,UnityEngine.GUILayoutOption[])">
			<summary>This method is obsolete. Use EditorGUILayout.EnumFlagsField instead.Make an enum popup selection field for a bitmask.</summary>
		</member>
		<member name="M:UnityEditor.PlayerSettings.SetPropertyInt(System.String,System.Int32,UnityEditor.BuildTargetGroup)">
			<summary>Sets a PlayerSettings named int property.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.EnumMaskPopup(UnityEngine.GUIContent,System.Enum,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
			<summary>This method is obsolete. Use EditorGUILayout.EnumFlagsField instead.Make an enum popup selection field for a bitmask.</summary>
		</member>
		<member name="M:UnityEditor.PlayerSettings.SetPropertyInt(System.String,System.Int32)">
			<summary>Sets a PlayerSettings named int property.</summary>
		</member>
		<member name="M:UnityEditor.Undo.GetCurrentGroupName()">
			<summary>Get the name that will be shown in the UI for the current undo group.</summary>
		</member>
		<member name="M:UnityEditor.PlayerSettings.SetPropertyInt(System.String,System.Int32,UnityEditor.BuildTarget)">
			<summary>Sets a PlayerSettings named int property.</summary>
		</member>
		<member name="M:UnityEditor.ScriptableWizard.DrawWizardGUI()">
			<summary>Will be called for drawing contents when the ScriptableWizard needs to update its GUI.</summary>
		</member>
		<member name="M:UnityEditor.Undo.SetCurrentGroupName(System.String)">
			<summary>Set the name of the current undo group.</summary>
		</member>
		<member name="T:UnityEditor.PlayerSettings.WSAFileTypeAssociations">
			<summary>Describes File Type Association declaration.</summary>
		</member>
		<member name="T:UnityEditor.iOSTargetDevice">
			<summary>Target iOS device.</summary>
		</member>
		<member name="M:UnityEditor.Undo.RevertAllInCurrentGroup()">
			<summary>Performs the last undo operation but does not record a redo operation.</summary>
		</member>
		<member name="T:UnityEditor.PlayerSettings.WSA">
			<summary>Windows Store Apps specific player settings.</summary>
		</member>
		<member name="P:UnityEngine.U2D.Interface.Event.shift">
			<summary>Is Shift held down? (Read Only)</summary>
		</member>
		<member name="M:UnityEditor.GridBrush.SetMatrix(UnityEngine.Vector3Int,UnityEngine.Matrix4x4)">
			<summary>Sets a transform matrix at the position in the brush. This matrix is used specifically for tiles on a Tilemap and not GameObjects of the brush cell.</summary>
		</member>
		<member name="M:UnityEditor.PlayerSettings.GetPropertyInt(System.String,UnityEditor.BuildTargetGroup)">
			<summary>Returns a PlayerSettings named int property (with an optional build target it should apply to).</summary>
		</member>
		<member name="P:UnityEngine.U2D.Interface.Event.keyCode">
			<summary>The raw key code for keyboard events.</summary>
		</member>
		<member name="M:UnityEditor.PlayerSettings.GetPropertyInt(System.String)">
			<summary>Returns a PlayerSettings named int property (with an optional build target it should apply to).</summary>
		</member>
		<member name="M:UnityEditor.GridBrush.SetColor(UnityEngine.Vector3Int,UnityEngine.Color)">
			<summary>Sets a tint color at the position in the brush.</summary>
		</member>
		<member name="P:UnityEngine.U2D.Interface.Event.mousePosition">
			<summary>The mouse position.</summary>
		</member>
		<member name="M:UnityEditor.PlayerSettings.GetPropertyOptionalInt(System.String,System.Int32&,UnityEditor.BuildTargetGroup)">
			<summary>Searches for property and assigns it's value to given variable.</summary>
		</member>
		<member name="M:UnityEditor.GridBrush.GetCellIndex(UnityEngine.Vector3Int)">
			<summary>Gets the index to the GridBrush.BrushCell based on the position of the BrushCell.</summary>
		</member>
		<member name="M:UnityEditor.PlayerSettings.GetPropertyOptionalInt(System.String,System.Int32&)">
			<summary>Searches for property and assigns it's value to given variable.</summary>
		</member>
		<member name="M:UnityEditor.GridBrush.GetCellIndex(System.Int32,System.Int32,System.Int32)">
			<summary>Gets the index to the GridBrush.BrushCell based on the position of the BrushCell.</summary>
		</member>
		<member name="M:UnityEditor.GridBrush.GetCellIndex(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
			<summary>Gets the index to the GridBrush.BrushCell based on the position of the BrushCell.</summary>
		</member>
		<member name="M:UnityEditor.PlayerSettings.SetPropertyBool(System.String,System.Boolean,UnityEditor.BuildTargetGroup)">
			<summary>Sets a PlayerSettings named bool property.</summary>
		</member>
		<member name="P:UnityEngine.U2D.Interface.Event.button">
			<summary>Which mouse button was pressed.</summary>
		</member>
		<member name="M:UnityEditor.PlayerSettings.SetPropertyBool(System.String,System.Boolean)">
			<summary>Sets a PlayerSettings named bool property.</summary>
		</member>
		<member name="M:UnityEditor.GridBrush.GetCellIndexWrapAround(System.Int32,System.Int32,System.Int32)">
			<summary>Gets the index to the GridBrush.BrushCell based on the position of the BrushCell. Wraps each coordinate if it is larger than the size of the GridBrush.</summary>
		</member>
		<member name="M:UnityEditor.PlayerSettings.SetPropertyBool(System.String,System.Boolean,UnityEditor.BuildTarget)">
			<summary>Sets a PlayerSettings named bool property.</summary>
		</member>
		<member name="P:UnityEngine.U2D.Interface.Event.modifiers">
			<summary>Which modifier keys are held down.</summary>
		</member>
		<member name="T:UnityEditor.GridBrush.BrushCell">
			<summary>Brush Cell stores the data to be painted in a grid cell.</summary>
		</member>
		<member name="M:UnityEditor.PlayerSettings.GetPropertyBool(System.String,UnityEditor.BuildTargetGroup)">
			<summary>Returns a PlayerSettings named bool property (with an optional build target it should apply to).</summary>
		</member>
		<member name="M:UnityEditor.PlayerSettings.GetPropertyBool(System.String)">
			<summary>Returns a PlayerSettings named bool property (with an optional build target it should apply to).</summary>
		</member>
		<member name="M:UnityEngine.U2D.Interface.Event.Use()">
			<summary>Use this event.</summary>
		</member>
		<member name="M:UnityEditor.PlayerSettings.GetPropertyOptionalBool(System.String,System.Boolean&,UnityEditor.BuildTargetGroup)">
			<summary>Searches for property and assigns it's value to given variable.</summary>
		</member>
		<member name="T:UnityEditor.GridBrushEditor">
			<summary>Editor for GridBrush.</summary>
		</member>
		<member name="M:UnityEngine.U2D.Interface.Event.GetTypeForControl(System.Int32)">
			<summary>Get a filtered event type for a given control ID.</summary>
		</member>
		<member name="M:UnityEditor.ScriptableWizard.DisplayWizard(System.String)">
			<summary>Creates a wizard.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.MaskField(UnityEngine.Rect,System.String,System.Int32,System.String[])">
			<summary>Makes a field for masks.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.BeginFoldoutHeaderGroup(System.Boolean,System.String,UnityEngine.GUIStyle,System.Action`1<UnityEngine.Rect>,UnityEngine.GUIStyle)">
			<summary>Make a label with a foldout arrow to the left of it.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.BeginFoldoutHeaderGroup(System.Boolean,UnityEngine.GUIContent,UnityEngine.GUIStyle,System.Action`1<UnityEngine.Rect>,UnityEngine.GUIStyle)">
			<summary>Make a label with a foldout arrow to the left of it.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.MaskField(UnityEngine.Rect,System.String,System.Int32,System.String[],UnityEngine.GUIStyle)">
			<summary>Makes a field for masks.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.MaskField(UnityEngine.Rect,System.Int32,System.String[])">
			<summary>Makes a field for masks.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.EndFoldoutHeaderGroup()">
			<summary>Closes a group started with BeginFoldoutHeaderGroup.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.MaskField(UnityEngine.Rect,System.Int32,System.String[],UnityEngine.GUIStyle)">
			<summary>Makes a field for masks.</summary>
		</member>
		<member name="T:UnityEditor.TextureImporter">
			<summary>Texture importer lets you modify Texture2D import settings from editor scripts.</summary>
		</member>
		<member name="P:UnityEditor.SerializedProperty.isExpanded">
			<summary>Is this property expanded in the inspector?</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.GradientField(UnityEngine.Gradient,UnityEngine.GUILayoutOption[])">
			<summary>Make a field for editing a Gradient.</summary>
		</member>
		<member name="M:UnityEditor.ScriptableWizard.DisplayWizard(System.String,System.String)">
			<summary>Creates a wizard.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.Foldout(UnityEngine.Rect,System.Boolean,System.String)">
			<summary>Makes a label with a foldout arrow to the left of it.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.GradientField(System.String,UnityEngine.Gradient,UnityEngine.GUILayoutOption[])">
			<summary>Make a field for editing a Gradient.</summary>
		</member>
		<member name="P:UnityEditor.TextureImporter.textureFormat">
			<summary>Format of imported texture.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.Foldout(UnityEngine.Rect,System.Boolean,System.String,UnityEngine.GUIStyle)">
			<summary>Makes a label with a foldout arrow to the left of it.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.GradientField(UnityEngine.GUIContent,UnityEngine.Gradient,UnityEngine.GUILayoutOption[])">
			<summary>Make a field for editing a Gradient.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.Foldout(UnityEngine.Rect,System.Boolean,System.String,System.Boolean)">
			<summary>Makes a label with a foldout arrow to the left of it.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.GradientField(UnityEngine.GUIContent,UnityEngine.Gradient,System.Boolean,UnityEngine.GUILayoutOption[])">
			<summary>Make a field for editing a Gradient.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.Foldout(UnityEngine.Rect,System.Boolean,System.String,System.Boolean,UnityEngine.GUIStyle)">
			<summary>Makes a label with a foldout arrow to the left of it.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.GradientField(UnityEditor.SerializedProperty,UnityEngine.GUILayoutOption[])">
			<summary>Make a field for editing a Gradient.</summary>
		</member>
		<member name="P:UnityEditor.TextureImporter.maxTextureSize">
			<summary>Maximum texture size.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.Foldout(UnityEngine.Rect,System.Boolean,UnityEngine.GUIContent)">
			<summary>Makes a label with a foldout arrow to the left of it.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.GradientField(System.String,UnityEditor.SerializedProperty,UnityEngine.GUILayoutOption[])">
			<summary>Make a field for editing a Gradient.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.Foldout(UnityEngine.Rect,System.Boolean,UnityEngine.GUIContent,UnityEngine.GUIStyle)">
			<summary>Makes a label with a foldout arrow to the left of it.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.GradientField(UnityEngine.GUIContent,UnityEditor.SerializedProperty,UnityEngine.GUILayoutOption[])">
			<summary>Make a field for editing a Gradient.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.Foldout(UnityEngine.Rect,System.Boolean,UnityEngine.GUIContent,System.Boolean)">
			<summary>Makes a label with a foldout arrow to the left of it.</summary>
		</member>
		<member name="P:UnityEditor.TextureImporter.compressionQuality">
			<summary>Quality of Texture Compression in the range [0..100].</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.Foldout(UnityEngine.Rect,System.Boolean,UnityEngine.GUIContent,System.Boolean,UnityEngine.GUIStyle)">
			<summary>Makes a label with a foldout arrow to the left of it.</summary>
		</member>
		<member name="M:UnityEditor.ScriptableWizard.DisplayWizard(System.String,System.String,System.String)">
			<summary>Creates a wizard.</summary>
		</member>
		<member name="P:UnityEditor.TextureImporter.crunchedCompression">
			<summary>Use crunched compression when available.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.HandlePrefixLabel(UnityEngine.Rect,UnityEngine.Rect,UnityEngine.GUIContent,System.Int32)">
			<summary>Makes a label for some control.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.EditorToolbarForTarget(UnityEngine.Object)">
			<summary>Makes a toolbar populated with the collection of editor tools that match the EditorToolAttribute of the target object.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.HandlePrefixLabel(UnityEngine.Rect,UnityEngine.Rect,UnityEngine.GUIContent)">
			<summary>Makes a label for some control.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.HandlePrefixLabel(UnityEngine.Rect,UnityEngine.Rect,UnityEngine.GUIContent,System.Int32,UnityEngine.GUIStyle)">
			<summary>Makes a label for some control.</summary>
		</member>
		<member name="P:UnityEditor.TextureImporter.allowAlphaSplitting">
			<summary>Allows alpha splitting on relevant platforms for this texture.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.EditorToolbar(UnityEditor.EditorTools.EditorTool[])">
			<summary>Makes a toolbar populated with the specified collection of editor tools.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.GetPropertyHeight(UnityEditor.SerializedProperty,System.Boolean)">
			<summary>Get the height needed for a PropertyField control.</summary>
		</member>
		<member name="M:UnityEditor.ScriptableWizard.DisplayWizard(System.String,System.Type,System.String)">
			<summary>Creates a wizard.</summary>
		</member>
		<member name="M:UnityEditor.Undo.RevertAllDownToGroup(System.Int32)">
			<summary>Performs all undo operations up to the group index without storing a redo operation in the process.</summary>
		</member>
		<member name="P:UnityEditor.SerializedProperty.hasChildren">
			<summary>Does it have child properties? (Read Only)</summary>
		</member>
		<member name="P:UnityEditor.TextureImporter.androidETC2FallbackOverride">
			<summary>ETC2 texture decompression fallback override on Android devices that don't support ETC2.</summary>
		</member>
		<member name="M:UnityEditor.Undo.CollapseUndoOperations(System.Int32)">
			<summary>Collapses all undo operation up to group index together into one step.</summary>
		</member>
		<member name="P:UnityEditor.SerializedProperty.hasVisibleChildren">
			<summary>Does it have visible child properties? (Read Only)</summary>
		</member>
		<member name="P:UnityEditor.TextureImporter.textureCompression">
			<summary>Compression of imported texture.</summary>
		</member>
		<member name="P:UnityEditor.SerializedProperty.isInstantiatedPrefab">
			<summary>Is property part of a Prefab instance? (Read Only)</summary>
		</member>
		<member name="M:UnityEditor.Undo.ClearAll()">
			<summary>Removes all undo and redo operations from  respectively the undo and redo stacks.</summary>
		</member>
		<member name="P:UnityEditor.TextureImporter.alphaSource">
			<summary>Select how the alpha of the imported texture is generated.</summary>
		</member>
		<member name="P:UnityEditor.SerializedProperty.prefabOverride">
			<summary>Allows you to check whether a property's value is overriden (i.e. different to the Prefab it belongs to).</summary>
		</member>
		<member name="M:UnityEditor.Undo.FlushUndoRecordObjects()">
			<summary>Ensure objects recorded using RecordObject or ::ref:RecordObjects are registered as an undoable action. In most cases there is no reason to invoke FlushUndoRecordObjects since it's automatically done right after mouse-up and certain other events that conventionally marks the end of an action.</summary>
		</member>
		<member name="P:UnityEditor.TextureImporter.grayscaleToAlpha">
			<summary>Generate alpha channel from intensity?</summary>
		</member>
		<member name="P:UnityEditor.SerializedProperty.isDefaultOverride">
			<summary>Allows you to check whether his property is a default override.Certain properties on Prefab instances are default overrides.See PrefabUtility.IsDefaultOverride for more information.</summary>
		</member>
		<member name="P:UnityEditor.TextureImporter.generateCubemap">
			<summary>Cubemap generation mode.</summary>
		</member>
		<member name="P:UnityEditor.SerializedProperty.propertyType">
			<summary>Type of this property (Read Only).</summary>
		</member>
		<member name="T:UnityEditor.Undo.UndoRedoCallback">
			<summary>Delegate used for undoRedoPerformed.</summary>
		</member>
		<member name="P:UnityEditor.TextureImporter.npotScale">
			<summary>Scaling mode for non power of two textures.</summary>
		</member>
		<member name="P:UnityEditor.SerializedProperty.intValue">
			<summary>Value of an integer property.</summary>
		</member>
		<member name="T:UnityEditor.Undo.WillFlushUndoRecord">
			<summary>Delegate used for willFlushUndoRecord.</summary>
		</member>
		<member name="P:UnityEditor.TextureImporter.isReadable">
			<summary>Set this to true if you want texture data to be readable from scripts. Set it to false to prevent scripts from reading texture data.</summary>
		</member>
		<member name="T:UnityEngine.U2D.Interface.Texture2D">
			<summary>Class for texture handling.</summary>
		</member>
		<member name="P:UnityEditor.SerializedProperty.longValue">
			<summary>Value of a integer property as a long.</summary>
		</member>
		<member name="P:UnityEditor.TextureImporter.streamingMipmaps">
			<summary>Enable mipmap streaming for this texture.</summary>
		</member>
		<member name="T:UnityEditor.UnwrapParam">
			<summary>Unwrapping settings.</summary>
		</member>
		<member name="P:UnityEngine.U2D.Interface.Texture2D.format">
			<summary>The format of the pixel data in the texture (Read Only).</summary>
		</member>
		<member name="P:UnityEditor.SerializedProperty.boolValue">
			<summary>Value of a boolean property.</summary>
		</member>
		<member name="F:UnityEditor.UnwrapParam.angleError">
			<summary>Maximum allowed angle distortion (0..1).</summary>
		</member>
		<member name="P:UnityEditor.TextureImporter.streamingMipmapsPriority">
			<summary>Relative priority for this texture when reducing memory size in order to hit the memory budget.</summary>
		</member>
		<member name="P:UnityEditor.SerializedProperty.floatValue">
			<summary>Value of a float property.</summary>
		</member>
		<member name="M:UnityEngine.U2D.Interface.Texture2D.GetPixels32()">
			<summary>Get a block of pixel colors in Color32 format.</summary>
		</member>
		<member name="F:UnityEditor.UnwrapParam.areaError">
			<summary>Maximum allowed area distortion (0..1).</summary>
		</member>
		<member name="P:UnityEditor.TextureImporter.mipmapEnabled">
			<summary>Generate Mip Maps.</summary>
		</member>
		<member name="P:UnityEditor.SerializedProperty.doubleValue">
			<summary>Value of a float property as a double.</summary>
		</member>
		<member name="F:UnityEditor.UnwrapParam.hardAngle">
			<summary>This angle (in degrees) or greater between triangles will cause seam to be created.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUILayout.EditorToolbar(System.Collections.Generic.IList`1<T>)">
			<summary>Makes a toolbar populated with the specified collection of editor tools.</summary>
		</member>
		<member name="M:UnityEditor.ScriptableWizard.DisplayWizard(System.String,System.Type)">
			<summary>Creates a wizard.</summary>
		</member>
		<member name="M:UnityEditor.ScriptableWizard.DisplayWizard(System.String,System.Type,System.String,System.String)">
			<summary>Creates a wizard.</summary>
		</member>
		<member name="P:UnityEditor.SerializedProperty.stringValue">
			<summary>Value of a string property.</summary>
		</member>
		<member name="T:UnityEditor.EditorGUILayout.ToggleGroupScope">
			<summary>Begin a vertical group with a toggle to enable or disable all the controls within at once.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.GetPropertyHeight(UnityEditor.SerializedProperty,UnityEngine.GUIContent)">
			<summary>Get the height needed for a PropertyField control.</summary>
		</member>
		<member name="T:UnityEditor.SelectionMode">
			<summary>SelectionMode can be used to tweak the selection returned by Selection.GetTransforms.</summary>
		</member>
		<member name="P:UnityEditor.SerializedProperty.colorValue">
			<summary>Value of a color property.</summary>
		</member>
		<member name="T:UnityEditor.Selection">
			<summary>Access to the selection in the editor.</summary>
		</member>
		<member name="P:UnityEditor.SerializedProperty.animationCurveValue">
			<summary>Value of a animation curve property.</summary>
		</member>
		<member name="F:UnityEditor.Selection.selectionChanged">
			<summary>Delegate callback triggered when currently active/selected item has changed.</summary>
		</member>
		<member name="P:UnityEditor.SerializedProperty.objectReferenceValue">
			<summary>Value of an object reference property.</summary>
		</member>
		<member name="P:UnityEditor.Selection.transforms">
			<summary>Returns the top level selection, excluding Prefabs.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.GetPropertyHeight(UnityEditor.SerializedProperty)">
			<summary>Get the height needed for a PropertyField control.</summary>
		</member>
		<member name="P:UnityEditor.SerializedProperty.enumValueIndex">
			<summary>Enum index of an enum property.</summary>
		</member>
		<member name="P:UnityEditor.Selection.activeTransform">
			<summary>Returns the active transform. (The one shown in the inspector).</summary>
		</member>
		<member name="P:UnityEditor.GridBrushEditor.brush">
			<summary>The GridBrush that is the target for this editor.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.GetPropertyHeight(UnityEditor.SerializedProperty,UnityEngine.GUIContent,System.Boolean)">
			<summary>Get the height needed for a PropertyField control.</summary>
		</member>
		<member name="T:UnityEditor.EditorGUILayout.HorizontalScope">
			<summary>Disposable helper class for managing BeginHorizontal / EndHorizontal.</summary>
		</member>
		<member name="P:UnityEditor.GridBrushEditor.validTargets">
			<summary>Returns all valid targets that the brush can edit.</summary>
		</member>
		<member name="T:UnityEditor.EditorGUILayout.VerticalScope">
			<summary>Disposable helper class for managing BeginVertical / EndVertical.</summary>
		</member>
		<member name="M:UnityEditor.GridBrushEditor.OnPaintSceneGUI(UnityEngine.GridLayout,UnityEngine.GameObject,UnityEngine.BoundsInt,UnityEngine.GridBrushBase.Tool,System.Boolean)">
			<summary>Callback for painting the GUI for the GridBrush in the Scene View.</summary>
		</member>
		<member name="M:UnityEditor.GridBrushEditor.OnSelectionInspectorGUI()">
			<summary>Callback for drawing the Inspector GUI when there is an active GridSelection made in a Tilemap.</summary>
		</member>
		<member name="T:UnityEditor.EditorGUILayout.ScrollViewScope">
			<summary>Disposable helper class for managing BeginScrollView / EndScrollView.</summary>
		</member>
		<member name="M:UnityEditor.GridBrushEditor.RegisterUndo(UnityEngine.GameObject,UnityEngine.GridBrushBase.Tool)">
			<summary>Callback for registering an Undo action before the GridBrushBase does the current GridBrushBase.Tool action.</summary>
		</member>
		<member name="M:UnityEditor.GridBrushEditor.PaintPreview(UnityEngine.GridLayout,UnityEngine.GameObject,UnityEngine.Vector3Int)">
			<summary>Paints preview data into a cell of a grid given the coordinates of the cell.</summary>
		</member>
		<member name="T:UnityEditor.EditorGUILayout.FadeGroupScope">
			<summary>Begins a group that can be be hidden/shown and the transition will be animated.</summary>
		</member>
		<member name="M:UnityEngine.U2D.Interface.Texture2D.SetPixels(UnityEngine.Color[])">
			<summary>Set a block of pixel colors.</summary>
		</member>
		<member name="P:UnityEditor.SerializedProperty.enumNames">
			<summary>Names of enumeration of an enum property.</summary>
		</member>
		<member name="P:UnityEditor.TextureImporter.borderMipmap">
			<summary>Keep texture borders the same when generating mipmaps?</summary>
		</member>
		<member name="P:UnityEditor.SerializedProperty.enumDisplayNames">
			<summary>Display-friendly names of enumeration of an enum property.</summary>
		</member>
		<member name="T:UnityEditor.PlayerSettings.XboxOne">
			<summary>Xbox One Specific Player Settings.</summary>
		</member>
		<member name="P:UnityEditor.TextureImporter.sRGBTexture">
			<summary>Is texture storing color data?</summary>
		</member>
		<member name="P:UnityEditor.SerializedProperty.vector2Value">
			<summary>Value of a 2D vector property.</summary>
		</member>
		<member name="F:UnityEditor.UnwrapParam.packMargin">
			<summary>How much uv-islands will be padded.</summary>
		</member>
		<member name="M:UnityEngine.U2D.Interface.Texture2D.Apply()">
			<summary>Actually apply all previous SetPixel and SetPixels changes.</summary>
		</member>
		<member name="P:UnityEditor.TextureImporter.mipMapsPreserveCoverage">
			<summary>Enables or disables coverage-preserving alpha MIP mapping.</summary>
		</member>
		<member name="P:UnityEditor.SerializedProperty.vector3Value">
			<summary>Value of a 3D vector property.</summary>
		</member>
		<member name="M:UnityEditor.UnwrapParam.SetDefaults(UnityEditor.UnwrapParam&)">
			<summary>Will set default values for params.</summary>
		</member>
		<member name="P:UnityEditor.TextureImporter.alphaTestReferenceValue">
			<summary>Returns or assigns the alpha test reference value.</summary>
		</member>
		<member name="P:UnityEditor.SerializedProperty.vector4Value">
			<summary>Value of a 4D vector property.</summary>
		</member>
		<member name="T:UnityEditor.AnimationUtility.OnCurveWasModified">
			<summary>Triggered when an animation curve inside an animation clip has been modified.</summary>
		</member>
		<member name="T:UnityEditor.AnimationMode">
			<summary></summary>
		</member>
		<member name="P:UnityEditor.TextureImporter.mipmapFilter">
			<summary>Mipmap filtering mode.</summary>
		</member>
		<member name="P:UnityEditor.SerializedProperty.vector2IntValue">
			<summary>Value of a 2D integer vector property.</summary>
		</member>
		<member name="T:UnityEditor.EditorCurveBinding">
			<summary>Defines how a curve is attached to an object that it controls.</summary>
		</member>
		<member name="P:UnityEditor.TextureImporter.fadeout">
			<summary>Fade out mip levels to gray color?</summary>
		</member>
		<member name="P:UnityEditor.AnimationMode.animatedPropertyColor">
			<summary>The color used to show that a property is currently being animated.</summary>
		</member>
		<member name="P:UnityEditor.SerializedProperty.vector3IntValue">
			<summary>Value of a 3D integer vector property.</summary>
		</member>
		<member name="F:UnityEditor.EditorCurveBinding.path">
			<summary>The transform path of the object that is animated.</summary>
		</member>
		<member name="P:UnityEditor.TextureImporter.mipmapFadeDistanceStart">
			<summary>Mip level where texture begins to fade out.</summary>
		</member>
		<member name="P:UnityEditor.AnimationMode.recordedPropertyColor">
			<summary>The color used to show that an animated property automatically records changes in the animation clip.</summary>
		</member>
		<member name="P:UnityEditor.SerializedProperty.quaternionValue">
			<summary>Value of a quaternion property.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.PropertyField(UnityEngine.Rect,UnityEditor.SerializedProperty)">
			<summary>Use this to make a field for a SerializedProperty in the Editor.</summary>
		</member>
		<member name="P:UnityEditor.TextureImporter.mipmapFadeDistanceEnd">
			<summary>Mip level where texture is faded out completely.</summary>
		</member>
		<member name="P:UnityEditor.TextureImporter.generateMipsInLinearSpace">
			<summary>Should mip maps be generated with gamma correction?</summary>
		</member>
		<member name="F:UnityEditor.EditorCurveBinding.propertyName">
			<summary>The name of the property to be animated.</summary>
		</member>
		<member name="P:UnityEditor.AnimationMode.candidatePropertyColor">
			<summary>The color used to show that an animated property has been modified.</summary>
		</member>
		<member name="P:UnityEditor.Selection.gameObjects">
			<summary>Returns the actual game object selection. Includes Prefabs, non-modifiable objects.</summary>
		</member>
		<member name="P:UnityEditor.EditorCurveBinding.type">
			<summary>The type of the property to be animated.</summary>
		</member>
		<member name="M:UnityEditor.GridBrushEditor.BoxFillPreview(UnityEngine.GridLayout,UnityEngine.GameObject,UnityEngine.BoundsInt)">
			<summary>Does a preview of what happens when a GridBrush.BoxFill is done with the same parameters.</summary>
		</member>
		<member name="P:UnityEditor.EditorAnalyticsSessionInfo.focusedElapsedTime">
			<summary>The total time, in milliseconds, that the Editor has been in focus during the current session.</summary>
		</member>
		<member name="P:UnityEditor.Selection.activeGameObject">
			<summary>Returns the active game object. (The one shown in the inspector).</summary>
		</member>
		<member name="M:UnityEditor.EditorCurveBinding.FloatCurve(System.String,System.Type,System.String)">
			<summary>Creates a preconfigured binding for a float curve.</summary>
		</member>
		<member name="M:UnityEditor.GridBrushEditor.FloodFillPreview(UnityEngine.GridLayout,UnityEngine.GameObject,UnityEngine.Vector3Int)">
			<summary>Does a preview of what happens when a GridBrush.FloodFill is done with the same parameters.</summary>
		</member>
		<member name="P:UnityEditor.Selection.activeObject">
			<summary>Returns the actual object selection. Includes Prefabs, non-modifiable objects.</summary>
		</member>
		<member name="M:UnityEditor.EditorCurveBinding.PPtrCurve(System.String,System.Type,System.String)">
			<summary>Creates a preconfigured binding for a curve that points to an Object.</summary>
		</member>
		<member name="M:UnityEditor.GridBrushEditor.ClearPreview()">
			<summary>Clears any preview drawn previously by the GridBrushEditor.</summary>
		</member>
		<member name="P:UnityEditor.Selection.activeContext">
			<summary>Returns the current context object, as was set via SetActiveObjectWithContext.</summary>
		</member>
		<member name="F:UnityEditor.iOSTargetDevice.iPhoneOnly">
			<summary>iPhone/iPod Only.</summary>
		</member>
		<member name="M:UnityEditor.PlayerSettings.GetPropertyOptionalBool(System.String,System.Boolean&)">
			<summary>Searches for property and assigns it's value to given variable.</summary>
		</member>
		<member name="M:UnityEditor.EditorCurveBinding.DiscreteCurve(System.String,System.Type,System.String)">
			<summary>Creates a preconfigured binding for a curve where values should not be interpolated.</summary>
		</member>
		<member name="P:UnityEditor.Selection.activeInstanceID">
			<summary>Returns the instanceID of the actual object selection. Includes Prefabs, non-modifiable objects.</summary>
		</member>
		<member name="T:UnityEditor.GridBrushEditorBase">
			<summary>Base class for Grid Brush Editor.</summary>
		</member>
		<member name="F:UnityEditor.iOSTargetDevice.iPadOnly">
			<summary>iPad Only.</summary>
		</member>
		<member name="P:UnityEditor.Selection.objects">
			<summary>The actual unfiltered selection from the Scene.</summary>
		</member>
		<member name="P:UnityEditor.GridBrushEditorBase.validTargets">
			<summary>Returns all valid targets that the brush can edit.</summary>
		</member>
		<member name="F:UnityEditor.iOSTargetDevice.iPhoneAndiPad">
			<summary>Universal : iPhone/iPod + iPad.</summary>
		</member>
		<member name="P:UnityEditor.Selection.instanceIDs">
			<summary>The actual unfiltered selection from the Scene returned as instance ids instead of objects.</summary>
		</member>
		<member name="M:UnityEditor.GridBrushEditorBase.OnPaintSceneGUI(UnityEngine.GridLayout,UnityEngine.GameObject,UnityEngine.BoundsInt,UnityEngine.GridBrushBase.Tool,System.Boolean)">
			<summary>Callback for painting the GUI for the GridBrush in the Scene view.</summary>
		</member>
		<member name="P:UnityEditor.Selection.assetGUIDs">
			<summary>Returns the guids of the selected assets.</summary>
		</member>
		<member name="M:UnityEditor.GridBrushEditorBase.OnPaintInspectorGUI()">
			<summary>Callback for painting the inspector GUI for the GridBrush in the tilemap palette.</summary>
		</member>
		<member name="T:UnityEditor.DrawCameraMode">
			<summary>Drawing modes for Handles.DrawCamera.</summary>
		</member>
		<member name="T:UnityEditor.ForceReserializeAssetsOptions">
			<summary>Options for AssetDatabase.ForceReserializeAssets.</summary>
		</member>
		<member name="M:UnityEditor.GridBrushEditorBase.OnSelectionInspectorGUI()">
			<summary>Callback for drawing the Inspector GUI when there is an active GridSelection made in a GridLayout.</summary>
		</member>
		<member name="M:UnityEditor.Selection.Contains(System.Int32)">
			<summary>Returns whether an object is contained in the current selection.</summary>
		</member>
		<member name="M:UnityEditor.AnimationMode.IsPropertyAnimated(UnityEngine.Object,System.String)">
			<summary>Is the specified property currently in animation mode and being animated?</summary>
		</member>
		<member name="P:UnityEditor.SerializedProperty.rectValue">
			<summary>Value of a rectangle property.</summary>
		</member>
		<member name="M:UnityEditor.AnimationMode.StopAnimationMode()">
			<summary>Stops Animation mode, reverts all properties that were animated in animation mode.</summary>
		</member>
		<member name="M:UnityEditor.PlayerSettings.SetPropertyString(System.String,System.String,UnityEditor.BuildTargetGroup)">
			<summary>Sets a PlayerSettings named string property.</summary>
		</member>
		<member name="P:UnityEditor.TextureImporter.linearTexture">
			<summary>Is texture storing non-color data?</summary>
		</member>
		<member name="M:UnityEditor.AnimationMode.StopAnimationMode(UnityEngine.Object)">
			<summary>Stops Animation mode, reverts all properties that were animated in animation mode.</summary>
		</member>
		<member name="M:UnityEditor.PlayerSettings.SetPropertyString(System.String,System.String)">
			<summary>Sets a PlayerSettings named string property.</summary>
		</member>
		<member name="M:UnityEditor.PlayerSettings.SetPropertyString(System.String,System.String,UnityEditor.BuildTarget)">
			<summary>Sets a PlayerSettings named string property.</summary>
		</member>
		<member name="P:UnityEditor.TextureImporter.normalmap">
			<summary>Is this texture a normal map?</summary>
		</member>
		<member name="M:UnityEditor.AnimationMode.InAnimationMode()">
			<summary>Are we currently in AnimationMode?</summary>
		</member>
		<member name="M:UnityEditor.AnimationMode.InAnimationMode(UnityEngine.Object)">
			<summary>Are we currently in AnimationMode?</summary>
		</member>
		<member name="M:UnityEditor.PlayerSettings.GetPropertyString(System.String,UnityEditor.BuildTargetGroup)">
			<summary>Returns a PlayerSettings named string property (with an optional build target it should apply to).</summary>
		</member>
		<member name="M:UnityEditor.PlayerSettings.GetPropertyString(System.String)">
			<summary>Returns a PlayerSettings named string property (with an optional build target it should apply to).</summary>
		</member>
		<member name="M:UnityEditor.PlayerSettings.GetPropertyOptionalString(System.String,System.String&,UnityEditor.BuildTargetGroup)">
			<summary>Searches for property and assigns it's value to given variable.</summary>
		</member>
		<member name="M:UnityEditor.PlayerSettings.GetPropertyOptionalString(System.String,System.String&)">
			<summary>Searches for property and assigns it's value to given variable.</summary>
		</member>
		<member name="T:UnityEditor.AssetPreview">
			<summary>Utility for fetching asset previews by instance ID of assets, See AssetPreview.GetAssetPreview. Since previews are loaded asynchronously methods are provided for requesting if all previews have been fully loaded, see AssetPreview.IsLoadingAssetPreviews. Loaded previews are stored in a cache, the size of the cache can be controlled by calling [AssetPreview.SetPreviewTextureCacheSize].</summary>
		</member>
		<member name="M:UnityEditor.AssetPreview.GetAssetPreview(UnityEngine.Object)">
			<summary>Returns a preview texture for an asset.</summary>
		</member>
		<member name="M:UnityEditor.AssetPreview.GetAssetPreview(System.Int32)">
			<summary>Returns a preview texture for an asset.</summary>
		</member>
		<member name="M:UnityEditor.AssetPreview.GetAssetPreview(System.Int32,System.Int32)">
			<summary>Returns a preview texture for an asset.</summary>
		</member>
		<member name="M:UnityEditor.PlayerSettings.HasAspectRatio(UnityEditor.AspectRatio)">
			<summary>Returns whether or not the specified aspect ratio is enabled.</summary>
		</member>
		<member name="M:UnityEditor.Selection.SetActiveObjectWithContext(UnityEngine.Object,UnityEngine.Object)">
			<summary>Selects an object with a context.</summary>
		</member>
		<member name="M:UnityEditor.PlayerSettings.SetAspectRatio(UnityEditor.AspectRatio,System.Boolean)">
			<summary>Enables the specified aspect ratio.</summary>
		</member>
		<member name="M:UnityEditor.Selection.GetTransforms(UnityEditor.SelectionMode)">
			<summary>Allows for fine grained control of the selection type using the SelectionMode bitmask.</summary>
		</member>
		<member name="M:UnityEditor.Selection.Contains(UnityEngine.Object)">
			<summary>Returns whether an object is contained in the current selection.</summary>
		</member>
		<member name="M:UnityEditor.Selection.GetFiltered(UnityEditor.SelectionMode)">
			<summary>Returns the current selection filtered by type and mode.</summary>
		</member>
		<member name="M:UnityEditor.Selection.GetFiltered(System.Type,UnityEditor.SelectionMode)">
			<summary>Returns the current selection filtered by type and mode.</summary>
		</member>
		<member name="T:UnityEditor.SerializedObject">
			<summary>SerializedObject and SerializedProperty are classes for editing serialized fields on Unity objects in a completely generic way. These classes automatically handle dirtying individual serialized fields so they will be processed by the Undo system and styled correctly for Prefab overrides when drawn in the Inspector.</summary>
		</member>
		<member name="M:UnityEditor.AssetPreview.IsLoadingAssetPreview(System.Int32)">
			<summary>Loading previews is asynchronous so it is useful to know if a specific asset preview is in the process of being loaded so client code e.g can repaint while waiting for the loading to finish.</summary>
		</member>
		<member name="M:UnityEditor.PlayerSettings.GetSupportedIconKindsForPlatform(System.String)">
			<summary>Retrieve all icon kinds supported by the specified platform.</summary>
		</member>
		<member name="P:UnityEditor.SerializedObject.targetObject">
			<summary>The inspected object (Read Only).</summary>
		</member>
		<member name="M:UnityEditor.PlayerSettings.GetPreloadedAssets()">
			<summary>Returns the assets that will be loaded at start up in the player and be kept alive until the player terminates.</summary>
		</member>
		<member name="M:UnityEditor.AssetPreview.IsLoadingAssetPreview(System.Int32,System.Int32)">
			<summary>Loading previews is asynchronous so it is useful to know if a specific asset preview is in the process of being loaded so client code e.g can repaint while waiting for the loading to finish.</summary>
		</member>
		<member name="P:UnityEditor.SerializedObject.targetObjects">
			<summary>The inspected objects (Read Only).</summary>
		</member>
		<member name="M:UnityEditor.PlayerSettings.SetPreloadedAssets(UnityEngine.Object[])">
			<summary>Assigns the assets that will be loaded at start up in the player and be kept alive until the player terminates.</summary>
		</member>
		<member name="M:UnityEditor.AssetPreview.IsLoadingAssetPreviews()">
			<summary>Loading previews is asynchronous so it is useful to know if any requested previews are in the process of being loaded so client code e.g can repaint while waiting.</summary>
		</member>
		<member name="P:UnityEditor.SerializedObject.context">
			<summary>The context used to store and resolve ExposedReference types. This is set by the SerializedObject constructor.</summary>
		</member>
		<member name="M:UnityEditor.AssetPreview.IsLoadingAssetPreviews(System.Int32)">
			<summary>Loading previews is asynchronous so it is useful to know if any requested previews are in the process of being loaded so client code e.g can repaint while waiting.</summary>
		</member>
		<member name="M:UnityEditor.PlayerSettings.GetGraphicsAPIs(UnityEditor.BuildTarget)">
			<summary>Get graphics APIs to be used on a build platform.</summary>
		</member>
		<member name="P:UnityEditor.SerializedObject.hasModifiedProperties">
			<summary>Is true when the SerializedObject has a modified property that has not been applied.</summary>
		</member>
		<member name="M:UnityEditor.AssetPreview.SetPreviewTextureCacheSize(System.Int32)">
			<summary>Set the asset preview cache to a size that can hold all visible previews on the screen at once.</summary>
		</member>
		<member name="T:UnityEditor.PlayerSettings.VROculus">
			<summary>Class used to access properties of the Oculus VR device.</summary>
		</member>
		<member name="M:UnityEditor.AssetPreview.SetPreviewTextureCacheSize(System.Int32,System.Int32)">
			<summary>Set the asset preview cache to a size that can hold all visible previews on the screen at once.</summary>
		</member>
		<member name="M:UnityEditor.PlayerSettings.SetGraphicsAPIs(UnityEditor.BuildTarget,UnityEngine.Rendering.GraphicsDeviceType[])">
			<summary>Sets the graphics APIs used on a build platform.</summary>
		</member>
		<member name="P:UnityEditor.SerializedObject.isEditingMultipleObjects">
			<summary>Does the serialized object represents multiple objects due to multi-object editing? (Read Only)</summary>
		</member>
		<member name="M:UnityEditor.AssetPreview.GetMiniThumbnail(UnityEngine.Object)">
			<summary>Returns the thumbnail for an object (like the ones you see in the project view).</summary>
		</member>
		<member name="T:UnityEditor.TextureImporterFormat">
			<summary>Imported texture format for TextureImporter.</summary>
		</member>
		<member name="M:UnityEditor.PlayerSettings.GetUseDefaultGraphicsAPIs(UnityEditor.BuildTarget)">
			<summary>Is a build platform using automatic graphics API choice?</summary>
		</member>
		<member name="T:UnityEditor.PlayerSettings.VRCardboard">
			<summary>Google Cardboard-specific Player Settings.</summary>
		</member>
		<member name="P:UnityEditor.SerializedObject.maxArraySizeForMultiEditing">
			<summary>Defines the maximum size beyond which arrays cannot be edited when multiple objects are selected.</summary>
		</member>
		<member name="M:UnityEditor.AssetPreview.GetMiniTypeThumbnail(System.Type)">
			<summary>Returns the thumbnail for the type.</summary>
		</member>
		<member name="M:UnityEditor.PlayerSettings.SetUseDefaultGraphicsAPIs(UnityEditor.BuildTarget,System.Boolean)">
			<summary>Should a build platform use automatic graphics API choice.</summary>
		</member>
		<member name="M:UnityEditor.AssetPreview.GetMiniTypeThumbnail(UnityEngine.Object)">
			<summary>Returns the thumbnail for the type.</summary>
		</member>
		<member name="T:UnityEditor.PlayerSettings.VRDaydream">
			<summary>Google VR-specific Player Settings.</summary>
		</member>
		<member name="T:UnityEditor.AssetImporter">
			<summary>Base class from which asset importers for specific asset types derive.</summary>
		</member>
		<member name="M:UnityEditor.PlayerSettings.GetScriptingDefineSymbolsForGroup(UnityEditor.BuildTargetGroup)">
			<summary>Get user-specified symbols for script compilation for the given build target group.</summary>
		</member>
		<member name="T:UnityEditor.AssetDatabase">
			<summary>An Interface for accessing assets and performing operations on assets.</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.ForceReserializeAssets(System.Collections.Generic.IEnumerable`1<System.String>,UnityEditor.ForceReserializeAssetsOptions)">
			<summary>Forcibly load and re-serialize the given assets, flushing any outstanding data changes to disk.</summary>
		</member>
		<member name="M:UnityEditor.SerializedObject.GetIterator()">
			<summary>Get the first serialized property.</summary>
		</member>
		<member name="T:UnityEditor.PlayerSettings.WebGL">
			<summary>WebGL specific player settings.</summary>
		</member>
		<member name="M:UnityEditor.SerializedObject.FindProperty(System.String)">
			<summary>Find serialized property by name.</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.TryGetGUIDAndLocalFileIdentifier(UnityEngine.Object,System.String&,System.Int32&)">
			<summary></summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.TryGetGUIDAndLocalFileIdentifier(System.Int32,System.String&,System.Int32&)">
			<summary></summary>
		</member>
		<member name="M:UnityEditor.SerializedObject.ApplyModifiedProperties()">
			<summary>Apply property modifications.</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.TryGetGUIDAndLocalFileIdentifier(UnityEngine.Object,System.String&,System.Int64&)">
			<summary></summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.TryGetGUIDAndLocalFileIdentifier(System.Int32,System.String&,System.Int64&)">
			<summary></summary>
		</member>
		<member name="M:UnityEditor.SerializedObject.SetIsDifferentCacheDirty()">
			<summary>Update hasMultipleDifferentValues cache on the next /Update()/ call.</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.ForceReserializeAssets()">
			<summary>Forcibly load and re-serialize the given assets, flushing any outstanding data changes to disk.</summary>
		</member>
		<member name="M:UnityEditor.SerializedObject.Update()">
			<summary>Update serialized object's representation.</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.RemoveObjectFromAsset(UnityEngine.Object)">
			<summary>Removes object from its asset (See Also: AssetDatabase.AddObjectToAsset).</summary>
		</member>
		<member name="M:UnityEditor.SerializedObject.UpdateIfDirtyOrScript()">
			<summary>This has been made obsolete. See SerializedObject.UpdateIfRequiredOrScript instead.</summary>
		</member>
		<member name="T:UnityEditor.TextureImporterMipFilter">
			<summary>Mip map filter for TextureImporter.</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.GetTextMetaDataPathFromAssetPath(System.String)">
			<summary>Gets the path to the text .meta file associated with an asset.</summary>
		</member>
		<member name="M:UnityEditor.SerializedObject.UpdateIfRequiredOrScript()">
			<summary>Update serialized object's representation, only if the object has been modified since the last call to Update or if it is a script.</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.FindAssets(System.String)">
			<summary>Search the asset database using the search filter string.</summary>
		</member>
		<member name="T:UnityEditor.TextureImporterGenerateCubemap">
			<summary>Cubemap generation mode for TextureImporter.</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.FindAssets(System.String,System.String[])">
			<summary>Search the asset database using the search filter string.</summary>
		</member>
		<member name="M:UnityEditor.SerializedObject.ApplyModifiedPropertiesWithoutUndo()">
			<summary>Applies property modifications without registering an undo operation.</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.FindAssets(UnityEditor.SearchFilter)">
			<summary>Search the asset database using the search filter string.</summary>
		</member>
		<member name="M:UnityEditor.SerializedObject.CopyFromSerializedProperty(UnityEditor.SerializedProperty)">
			<summary>Copies a value from a SerializedProperty to the corresponding serialized property on the serialized object.</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.Contains(UnityEngine.Object)">
			<summary>Is object an asset?</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.Contains(System.Int32)">
			<summary>Is object an asset?</summary>
		</member>
		<member name="M:UnityEditor.SerializedObject.CopyFromSerializedPropertyIfDifferent(UnityEditor.SerializedProperty)">
			<summary>Copies a changed value from a SerializedProperty to the corresponding serialized property on the serialized object.</summary>
		</member>
		<member name="P:UnityEditor.AssetImporter.assetPath">
			<summary>The path name of the asset for this importer. (Read Only)</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.CreateFolder(System.String,System.String)">
			<summary>Create a new folder.</summary>
		</member>
		<member name="M:UnityEditor.AnimationMode.StartAnimationMode()">
			<summary>Starts the animation mode.</summary>
		</member>
		<member name="P:UnityEditor.AssetImporter.importSettingsMissing">
			<summary>The value is true when no meta file is provided with the imported asset.</summary>
		</member>
		<member name="M:UnityEditor.PlayerSettings.SetScriptingDefineSymbolsForGroup(UnityEditor.BuildTargetGroup,System.String)">
			<summary>Set user-specified symbols for script compilation for the given build target group.</summary>
		</member>
		<member name="P:UnityEditor.AssetImporter.userData">
			<summary>Get or set any user data.</summary>
		</member>
		<member name="M:UnityEditor.PlayerSettings.GetArchitecture(UnityEditor.BuildTargetGroup)">
			<summary>Gets the BuildTargetPlatformGroup architecture.</summary>
		</member>
		<member name="M:UnityEditor.AnimationMode.StartAnimationMode(UnityEngine.Object)">
			<summary>Starts the animation mode.</summary>
		</member>
		<member name="P:UnityEditor.AssetImporter.assetBundleName">
			<summary>Get or set the AssetBundle name.</summary>
		</member>
		<member name="M:UnityEditor.PlayerSettings.SetArchitecture(UnityEditor.BuildTargetGroup,System.Int32)">
			<summary>Sets the BuildTargetPlatformGroup architecture.</summary>
		</member>
		<member name="P:UnityEditor.AssetImporter.assetBundleVariant">
			<summary>Get or set the AssetBundle variant.</summary>
		</member>
		<member name="M:UnityEditor.PlayerSettings.GetScriptingBackend(UnityEditor.BuildTargetGroup)">
			<summary>Gets the scripting framework for a BuildTargetPlatformGroup.</summary>
		</member>
		<member name="M:UnityEditor.AnimationMode.BeginSampling()">
			<summary>Initialise the start of the animation clip sampling.</summary>
		</member>
		<member name="T:UnityEditor.AndroidTargetDevice">
			<summary>Target Android device architecture.</summary>
		</member>
		<member name="M:UnityEditor.PlayerSettings.SetApplicationIdentifier(UnityEditor.BuildTargetGroup,System.String)">
			<summary>Set the application identifier for the specified platform.</summary>
		</member>
		<member name="M:UnityEditor.AssetImporter.SetAssetBundleNameAndVariant(System.String,System.String)">
			<summary>Set the AssetBundle name and variant.</summary>
		</member>
		<member name="M:UnityEditor.AnimationMode.EndSampling()">
			<summary>Finish the sampling of the animation clip.</summary>
		</member>
		<member name="F:UnityEditor.AndroidTargetDevice.x86">
			<summary>Intel only.</summary>
		</member>
		<member name="M:UnityEditor.PlayerSettings.GetApplicationIdentifier(UnityEditor.BuildTargetGroup)">
			<summary>Get the application identifier for the specified platform.</summary>
		</member>
		<member name="M:UnityEditor.AssetImporter.GetAtPath(System.String)">
			<summary>Retrieves the asset importer for the asset at path.</summary>
		</member>
		<member name="M:UnityEditor.AnimationMode.SampleAnimationClip(UnityEngine.GameObject,UnityEngine.AnimationClip,System.Single)">
			<summary></summary>
		</member>
		<member name="M:UnityEditor.PlayerSettings.SetScriptingBackend(UnityEditor.BuildTargetGroup,UnityEditor.ScriptingImplementation)">
			<summary>Sets the scripting framework for a BuildTargetPlatformGroup.</summary>
		</member>
		<member name="M:UnityEditor.AssetImporter.SaveAndReimport()">
			<summary>Save asset importer settings if asset importer is dirty.</summary>
		</member>
		<member name="M:UnityEditor.AnimationMode.AddPropertyModification(UnityEditor.EditorCurveBinding,UnityEditor.PropertyModification,System.Boolean)">
			<summary>Marks a property as currently being animated.</summary>
		</member>
		<member name="M:UnityEditor.PlayerSettings.GetDefaultScriptingBackend(UnityEditor.BuildTargetGroup)">
			<summary>Returns the default ScriptingImplementation used for the given platform group.</summary>
		</member>
		<member name="M:UnityEditor.AssetImporter.AddRemap(UnityEditor.AssetImporter.SourceAssetIdentifier,UnityEngine.Object)">
			<summary>Map a sub-asset from an imported asset (such as an FBX file) to an external Asset of the same type.</summary>
		</member>
		<member name="M:UnityEditor.AnimationMode.AddEditorCurveBinding(UnityEngine.GameObject,UnityEditor.EditorCurveBinding)">
			<summary>Marks a property defined by an EditorCurveBinding as currently being animated.</summary>
		</member>
		<member name="M:UnityEditor.PlayerSettings.SetIl2CppCompilerConfiguration(UnityEditor.BuildTargetGroup,UnityEditor.Il2CppCompilerConfiguration)">
			<summary>Sets compiler configuration used when compiling generated C++ code for a particular BuildTargetGroup.</summary>
		</member>
		<member name="M:UnityEditor.AssetImporter.RemoveRemap(UnityEditor.AssetImporter.SourceAssetIdentifier)">
			<summary>Removes an item from the map of external objects.</summary>
		</member>
		<member name="T:UnityEditor.AnimationClipCurveData">
			<summary>An AnimationClipCurveData object contains all the information needed to identify a specific curve in an AnimationClip. The curve animates a specific property of a component / material attached to a game object / animated bone.</summary>
		</member>
		<member name="M:UnityEditor.PlayerSettings.GetIl2CppCompilerConfiguration(UnityEditor.BuildTargetGroup)">
			<summary>Gets compiler configuration used when compiling generated C++ code for a particular BuildTargetGroup.</summary>
		</member>
		<member name="M:System.Collections.Generic.Dictionary`2<UnityEditor.AssetImporter.SourceAssetIdentifier,UnityEngine.Object> UnityEditor.AssetImporter.GetExternalObjectMap()">
			<summary>Gets a copy of the external object map used by the AssetImporter.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.PropertyField(UnityEngine.Rect,UnityEditor.SerializedProperty,System.Boolean)">
			<summary>Use this to make a field for a SerializedProperty in the Editor.</summary>
		</member>
		<member name="M:UnityEditor.PlayerSettings.GetIncrementalIl2CppBuild(UnityEditor.BuildTargetGroup)">
			<summary>Does IL2CPP platform use incremental build?</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.PropertyField(UnityEngine.Rect,UnityEditor.SerializedProperty,UnityEngine.GUIContent)">
			<summary>Use this to make a field for a SerializedProperty in the Editor.</summary>
		</member>
		<member name="M:UnityEditor.AssetImporter.SupportsRemappedAssetType(System.Type)">
			<summary>Checks if the AssetImporter supports remapping the given asset type.</summary>
		</member>
		<member name="M:UnityEditor.PlayerSettings.SetIncrementalIl2CppBuild(UnityEditor.BuildTargetGroup,System.Boolean)">
			<summary>Sets incremental build flag.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.PropertyField(UnityEngine.Rect,UnityEditor.SerializedProperty,UnityEngine.GUIContent,System.Boolean)">
			<summary>Use this to make a field for a SerializedProperty in the Editor.</summary>
		</member>
		<member name="T:UnityEditor.AssetImporter.SourceAssetIdentifier">
			<summary>Represents a unique identifier for a sub-asset embedded in an imported Asset (such as an FBX file).</summary>
		</member>
		<member name="M:UnityEditor.PlayerSettings.GetAdditionalIl2CppArgs()">
			<summary>IL2CPP build arguments.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.EnumMaskField(UnityEngine.Rect,System.Enum)">
			<summary>This method is obsolete. Use EditorGUI.EnumFlagsField instead.Makes a field for enum based masks.</summary>
		</member>
		<member name="F:UnityEditor.AnimationClipCurveData.path">
			<summary>The path of the game object / bone being animated.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.EnumMaskField(UnityEngine.Rect,System.Enum,UnityEngine.GUIStyle)">
			<summary>This method is obsolete. Use EditorGUI.EnumFlagsField instead.Makes a field for enum based masks.</summary>
		</member>
		<member name="T:UnityEditor.MaterialEditorExtensions">
			<summary>Extension methods for the Material asset type in the editor.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.EnumMaskField(UnityEngine.Rect,System.String,System.Enum)">
			<summary>This method is obsolete. Use EditorGUI.EnumFlagsField instead.Makes a field for enum based masks.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.EnumMaskField(UnityEngine.Rect,System.String,System.Enum,UnityEngine.GUIStyle)">
			<summary>This method is obsolete. Use EditorGUI.EnumFlagsField instead.Makes a field for enum based masks.</summary>
		</member>
		<member name="M:UnityEditor.MaterialEditorExtensions.PerformBumpMapCheck(UnityEngine.Material)">
			<summary>Iterates over all the Material properties with the MaterialProperty.PropFlags.Normal flag and checks that the textures referenced by these properties are imported as TextureImporterType.NormalMap.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.EnumMaskField(UnityEngine.Rect,UnityEngine.GUIContent,System.Enum)">
			<summary>This method is obsolete. Use EditorGUI.EnumFlagsField instead.Makes a field for enum based masks.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.EnumMaskField(UnityEngine.Rect,UnityEngine.GUIContent,System.Enum,UnityEngine.GUIStyle)">
			<summary>This method is obsolete. Use EditorGUI.EnumFlagsField instead.Makes a field for enum based masks.</summary>
		</member>
		<member name="T:UnityEditor.DDSImporter">
			<summary>Texture importer lets you modify Texture2D import settings for DDS textures from editor scripts.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.EnumMaskPopup(UnityEngine.Rect,System.String,System.Enum)">
			<summary>This method is obsolete. Use EditorGUI.EnumFlagsField instead.Makes an enum popup selection field for a bitmask.</summary>
		</member>
		<member name="T:UnityEditor.TextureImporterNPOTScale">
			<summary>Scaling mode for non power of two textures in TextureImporter.</summary>
		</member>
		<member name="M:UnityEditor.PlayerSettings.SetAdditionalIl2CppArgs(System.String)">
			<summary>IL2CPP build arguments.</summary>
		</member>
		<member name="P:UnityEditor.EditorAnalyticsSessionInfo.playbackElapsedTime">
			<summary>The total time, in milliseconds, that the Editor has been in playmode during the current session.</summary>
		</member>
		<member name="P:UnityEditor.DDSImporter.isReadable">
			<summary>Is texture data readable from scripts.</summary>
		</member>
		<member name="F:UnityEditor.AnimationClipCurveData.type">
			<summary>The type of the component / material being animated.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.EnumMaskPopup(UnityEngine.Rect,System.String,System.Enum,UnityEngine.GUIStyle)">
			<summary>This method is obsolete. Use EditorGUI.EnumFlagsField instead.Makes an enum popup selection field for a bitmask.</summary>
		</member>
		<member name="F:UnityEditor.AnimationClipCurveData.propertyName">
			<summary>The name of the property being animated.</summary>
		</member>
		<member name="P:UnityEditor.EditorAnalyticsSessionInfo.activeElapsedTime">
			<summary>The total time, in milliseconds, that the user interacted with the Editor since the beginning of the current session.</summary>
		</member>
		<member name="T:UnityEditor.IHVImageFormatImporter">
			<summary>Use IHVImageFormatImporter to modify Texture2D import settings for Textures in IHV (Independent Hardware Vendor) formats such as .DDS and .PVR from Editor scripts.</summary>
		</member>
		<member name="T:UnityEditor.TextureImporterNormalFilter">
			<summary>Normal map filtering mode for TextureImporter.</summary>
		</member>
		<member name="F:UnityEditor.AnimationClipCurveData.curve">
			<summary>The actual animation curve.</summary>
		</member>
		<member name="P:UnityEditor.EditorAnalyticsSessionInfo.userId">
			<summary>A random GUID uniquely identifying an Editor installation.</summary>
		</member>
		<member name="P:UnityEditor.IHVImageFormatImporter.isReadable">
			<summary>Is texture data readable from scripts.</summary>
		</member>
		<member name="T:UnityEditor.TextureImporterAlphaSource">
			<summary>Select how the alpha of the imported texture is generated.</summary>
		</member>
		<member name="T:UnityEditor.AnimationUtility">
			<summary>Editor utility functions for modifying animation clips.</summary>
		</member>
		<member name="P:UnityEditor.IHVImageFormatImporter.filterMode">
			<summary>Filtering mode of the texture.</summary>
		</member>
		<member name="F:UnityEditor.AnimationUtility.OnCurveWasModified UnityEditor.AnimationUtility.onCurveWasModified">
			<summary>Triggered when an animation curve inside an animation clip has been modified.</summary>
		</member>
		<member name="T:UnityEditor.TextureImporterSingleChannelComponent">
			<summary>Selects which Color/Alpha channel Single Channel Textures uses.</summary>
		</member>
		<member name="P:UnityEditor.IHVImageFormatImporter.wrapMode">
			<summary>Texture coordinate wrapping mode.</summary>
		</member>
		<member name="P:UnityEditor.IHVImageFormatImporter.wrapModeU">
			<summary>Texture U coordinate wrapping mode.</summary>
		</member>
		<member name="M:UnityEditor.AnimationUtility.GetAnimationClips(UnityEngine.Animation)">
			<summary>Returns the array of Animation Clips associated with the GameObject or component.</summary>
		</member>
		<member name="T:UnityEditor.TextureImporterType">
			<summary>Select this to set basic parameters depending on the purpose of your texture.</summary>
		</member>
		<member name="M:UnityEditor.AnimationUtility.GetAnimationClips(UnityEngine.GameObject)">
			<summary>Returns the array of Animation Clips associated with the GameObject or component.</summary>
		</member>
		<member name="M:UnityEditor.PlayerSettings.GetPlatformVuforiaEnabled(UnityEditor.BuildTargetGroup)">
			<summary>Gets the current value of the Vuforia AR checkbox in the Player Settings for the specified buildTargetGroup.</summary>
		</member>
		<member name="P:UnityEditor.IHVImageFormatImporter.wrapModeV">
			<summary>Texture V coordinate wrapping mode.</summary>
		</member>
		<member name="M:UnityEditor.AnimationUtility.SetAnimationClips(UnityEngine.Animation,UnityEngine.AnimationClip[])">
			<summary>Sets the array of AnimationClips to be referenced in the Animation component.</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.IsMainAsset(UnityEngine.Object)">
			<summary>Is asset a main asset in the project window?</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.EnumMaskPopup(UnityEngine.Rect,UnityEngine.GUIContent,System.Enum)">
			<summary>This method is obsolete. Use EditorGUI.EnumFlagsField instead.Makes an enum popup selection field for a bitmask.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.EnumMaskPopup(UnityEngine.Rect,UnityEngine.GUIContent,System.Enum,UnityEngine.GUIStyle)">
			<summary>This method is obsolete. Use EditorGUI.EnumFlagsField instead.Makes an enum popup selection field for a bitmask.</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.GetCurrentCacheServerIp()">
			<summary>Gets the IP address of the Cache Server currently in use by the Editor.</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.IsMainAsset(System.Int32)">
			<summary>Is asset a main asset in the project window?</summary>
		</member>
		<member name="T:UnityEditor.TextureImporterCompression">
			<summary>Select the kind of compression you want for your texture.</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.IsSubAsset(UnityEngine.Object)">
			<summary>Does the asset form part of another asset?</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.IsSubAsset(System.Int32)">
			<summary>Does the asset form part of another asset?</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.EnumMaskPopup(UnityEngine.Rect,UnityEngine.GUIContent,System.Enum,System.Int32&,System.Boolean&,UnityEngine.GUIStyle)">
			<summary>This method is obsolete. Use EditorGUI.EnumFlagsField instead.Makes an enum popup selection field for a bitmask.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.BeginFoldoutHeaderGroup(UnityEngine.Rect,System.Boolean,System.String,UnityEngine.GUIStyle,System.Action`1<UnityEngine.Rect>,UnityEngine.GUIStyle)">
			<summary>Make a label with a foldout arrow to the left of it.</summary>
		</member>
		<member name="M:UnityEditor.AnimationUtility.GetAnimatableBindings(UnityEngine.GameObject,UnityEngine.GameObject)">
			<summary>Returns all the animatable bindings that a specific game object has.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.BeginFoldoutHeaderGroup(UnityEngine.Rect,System.Boolean,UnityEngine.GUIContent,UnityEngine.GUIStyle,System.Action`1<UnityEngine.Rect>,UnityEngine.GUIStyle)">
			<summary>Make a label with a foldout arrow to the left of it.</summary>
		</member>
		<member name="T:UnityEditor.TextureResizeAlgorithm">
			<summary>For Texture to be scaled down choose resize algorithm. ( Applyed only when Texture dimension is bigger than Max Size ).</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.EndFoldoutHeaderGroup()">
			<summary></summary>
		</member>
		<member name="M:UnityEditor.AnimationUtility.GetAnimatableBindings(UnityEngine.ScriptableObject)">
			<summary>Returns all the animatable bindings that a specific game object has.</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.IsForeignAsset(UnityEngine.Object)">
			<summary>Determines whether the Asset is a foreign Asset.</summary>
		</member>
		<member name="T:UnityEditor.TextureImporterShape">
			<summary>Select the kind of shape of your texture.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.GradientField(UnityEngine.Rect,UnityEngine.Gradient)">
			<summary>Makes a field for editing a Gradient.</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.IsForeignAsset(System.Int32)">
			<summary>Determines whether the Asset is a foreign Asset.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.GradientField(UnityEngine.Rect,System.String,UnityEngine.Gradient)">
			<summary>Makes a field for editing a Gradient.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.GradientField(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.Gradient)">
			<summary>Makes a field for editing a Gradient.</summary>
		</member>
		<member name="T:UnityEditor.SpriteImportMode">
			<summary>Texture importer modes for Sprite import.</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.IsNativeAsset(UnityEngine.Object)">
			<summary>Determines whether the Asset is a native Asset.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.GradientField(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.Gradient,System.Boolean)">
			<summary>Makes a field for editing a Gradient.</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.IsNativeAsset(System.Int32)">
			<summary>Determines whether the Asset is a native Asset.</summary>
		</member>
		<member name="P:UnityEditor.IHVImageFormatImporter.wrapModeW">
			<summary>Texture W coordinate wrapping mode for Texture3D.</summary>
		</member>
		<member name="M:UnityEditor.PlayerSettings.SetPlatformVuforiaEnabled(UnityEditor.BuildTargetGroup,System.Boolean)">
			<summary>Sets the value of the Vuforia AR checkbox in the Player Settings for the specified buildTargetGroup.</summary>
		</member>
		<member name="P:UnityEditor.IHVImageFormatImporter.streamingMipmaps">
			<summary>Enable mipmap streaming for this texture.</summary>
		</member>
		<member name="M:UnityEditor.AnimationUtility.GetFloatValue(UnityEngine.GameObject,UnityEditor.EditorCurveBinding,System.Single&)">
			<summary>Retrieves the current float value by sampling a curve value on a specific game object.</summary>
		</member>
		<member name="T:UnityEditor.AndroidETC2FallbackOverride">
			<summary>This enumeration has values for different qualities to decompress an ETC2 texture on Android devices that don't support the ETC2 texture format.</summary>
		</member>
		<member name="P:UnityEditor.IHVImageFormatImporter.streamingMipmapsPriority">
			<summary>Relative priority for this texture when reducing memory size in order to hit the memory budget.</summary>
		</member>
		<member name="M:UnityEditor.PlayerSettings.SetManagedStrippingLevel(UnityEditor.BuildTargetGroup,UnityEditor.ManagedStrippingLevel)">
			<summary>Sets the managed code stripping level for specified BuildTargetGroup.</summary>
		</member>
		<member name="M:UnityEditor.AnimationUtility.GetAnimatedObject(UnityEngine.GameObject,UnityEditor.EditorCurveBinding)">
			<summary>Returns the animated object that the binding is pointing to.</summary>
		</member>
		<member name="M:UnityEditor.PlayerSettings.GetManagedStrippingLevel(UnityEditor.BuildTargetGroup)">
			<summary>Returns the ManagedStrippingLevel used for the given platform group.</summary>
		</member>
		<member name="T:UnityEditor.SpriteMetaData">
			<summary>Editor data used in producing a Sprite.</summary>
		</member>
		<member name="M:UnityEditor.AnimationUtility.GetCurveBindings(UnityEngine.AnimationClip)">
			<summary>Returns all the float curve bindings currently stored in the clip.</summary>
		</member>
		<member name="T:UnityEditor.ShaderImporter">
			<summary>Shader importer lets you modify shader import settings from Editor scripts.</summary>
		</member>
		<member name="F:UnityEditor.SpriteMetaData.name">
			<summary>Name of the Sprite.</summary>
		</member>
		<member name="M:UnityEditor.AnimationUtility.GetObjectReferenceCurveBindings(UnityEngine.AnimationClip)">
			<summary>Returns all the object reference curve bindings currently stored in the clip.</summary>
		</member>
		<member name="M:UnityEditor.PlayerSettings.GetApiCompatibilityLevel(UnityEditor.BuildTargetGroup)">
			<summary>Gets .NET API compatibility level for specified BuildTargetGroup.</summary>
		</member>
		<member name="M:UnityEditor.ShaderImporter.GetShader()">
			<summary>Gets the reference to the shader imported by this importer.</summary>
		</member>
		<member name="F:UnityEditor.SpriteMetaData.rect">
			<summary>Bounding rectangle of the sprite's graphic within the atlas image.</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.GenerateUniqueAssetPath(System.String)">
			<summary>Creates a new unique path for an asset.</summary>
		</member>
		<member name="M:UnityEditor.GridBrushEditorBase.OnMouseLeave()">
			<summary>Callback when the mouse cursor leaves a paintable region.</summary>
		</member>
		<member name="F:UnityEditor.SpriteMetaData.alignment">
			<summary>Edge-relative alignment of the sprite graphic.</summary>
		</member>
		<member name="M:UnityEditor.ShaderImporter.SetDefaultTextures(System.String[],UnityEngine.Texture[])">
			<summary>Sets the default textures for each texture material property.</summary>
		</member>
		<member name="M:UnityEditor.GridBrushEditorBase.OnMouseEnter()">
			<summary>Callback when the mouse cursor enters a paintable region.</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.StartAssetEditing()">
			<summary>Begin Asset importing. This lets you group several asset imports together into one larger import.</summary>
		</member>
		<member name="M:UnityEditor.GridBrushEditorBase.OnToolActivated(UnityEngine.GridBrushBase.Tool)">
			<summary>Callback when a Tool is activated.</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.StopAssetEditing()">
			<summary>Stop Asset importing. This lets you group several asset imports together into one larger import.</summary>
		</member>
		<member name="F:UnityEditor.SpriteMetaData.pivot">
			<summary>The pivot point of the Sprite, relative to its bounding rectangle.</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.ReleaseCachedFileHandles()">
			<summary>Calling this function will release file handles internally cached by Unity. This allows modifying asset or meta files safely thus avoiding potential file sharing IO errors.</summary>
		</member>
		<member name="M:UnityEditor.GridBrushEditorBase.OnToolDeactivated(UnityEngine.GridBrushBase.Tool)">
			<summary>Callback when a Tool is deactivated.</summary>
		</member>
		<member name="F:UnityEditor.SpriteMetaData.border">
			<summary>Edge border size for a sprite (in pixels).</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.ValidateMoveAsset(System.String,System.String)">
			<summary>Checks if an asset file can be moved from one folder to another. (Without actually moving the file).</summary>
		</member>
		<member name="M:UnityEditor.GridBrushEditorBase.RegisterUndo(UnityEngine.GameObject,UnityEngine.GridBrushBase.Tool)">
			<summary>Callback for registering an Undo action before the GridBrushBase does the current GridBrushBase.Tool action.</summary>
		</member>
		<member name="T:UnityEditor.TextureImporterSettings">
			<summary>Stores settings of a TextureImporter.</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.MoveAsset(System.String,System.String)">
			<summary>Move an asset file (or folder) from one folder to another.</summary>
		</member>
		<member name="M:UnityEditor.PlayerSettings.SetApiCompatibilityLevel(UnityEditor.BuildTargetGroup,UnityEditor.ApiCompatibilityLevel)">
			<summary>Sets .NET API compatibility level for specified BuildTargetGroup.</summary>
		</member>
		<member name="P:UnityEditor.TextureImporterSettings.textureType">
			<summary>Which type of texture are we dealing with here.</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.ExtractAsset(UnityEngine.Object,System.String)">
			<summary>Creates an external Asset from an object (such as a Material) by extracting it from within an imported asset (such as an FBX file).</summary>
		</member>
		<member name="M:UnityEditor.AnimationUtility.GetObjectReferenceCurve(UnityEngine.AnimationClip,UnityEditor.EditorCurveBinding)">
			<summary>Return the object reference curve that the binding is pointing to.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.GradientField(UnityEngine.Rect,UnityEditor.SerializedProperty)">
			<summary>Makes a field for editing a Gradient.</summary>
		</member>
		<member name="P:UnityEditor.TextureImporterSettings.textureShape">
			<summary>Shape of imported texture.</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.RenameAsset(System.String,System.String)">
			<summary>Rename an asset file.</summary>
		</member>
		<member name="M:UnityEditor.ShaderImporter.GetDefaultTexture(System.String)">
			<summary>Gets the default texture assigned to the shader importer for the shader property with given name.</summary>
		</member>
		<member name="P:UnityEditor.TextureImporterSettings.mipmapFilter">
			<summary>Mipmap filtering mode.</summary>
		</member>
		<member name="P:UnityEditor.TextureImporter.lightmap">
			<summary>Is this texture a lightmap?</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.GradientField(UnityEngine.Rect,UnityEditor.SerializedProperty,System.Boolean)">
			<summary>Makes a field for editing a Gradient.</summary>
		</member>
		<member name="M:UnityEditor.AnimationUtility.SetObjectReferenceCurve(UnityEngine.AnimationClip,UnityEditor.EditorCurveBinding,UnityEditor.ObjectReferenceKeyframe[])">
			<summary>Adds, modifies or removes an object reference curve in a given clip.</summary>
		</member>
		<member name="P:UnityEditor.SerializedProperty.rectIntValue">
			<summary>Value of a rectangle with integer values property.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.GradientField(UnityEngine.Rect,System.String,UnityEditor.SerializedProperty)">
			<summary>Makes a field for editing a Gradient.</summary>
		</member>
		<member name="M:UnityEditor.AnimationUtility.GetEditorCurve(UnityEngine.AnimationClip,UnityEditor.EditorCurveBinding)">
			<summary>Return the float curve that the binding is pointing to.</summary>
		</member>
		<member name="P:UnityEditor.TextureImporter.convertToNormalmap">
			<summary>Convert heightmap to normal map?</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.GradientField(UnityEngine.Rect,UnityEngine.GUIContent,UnityEditor.SerializedProperty)">
			<summary>Makes a field for editing a Gradient.</summary>
		</member>
		<member name="P:UnityEditor.SerializedProperty.boundsValue">
			<summary>Value of bounds property.</summary>
		</member>
		<member name="P:UnityEditor.TextureImporter.normalmapFilter">
			<summary>Normal map filtering mode.</summary>
		</member>
		<member name="M:UnityEditor.PlayerSettings.SetMobileMTRendering(UnityEditor.BuildTargetGroup,System.Boolean)">
			<summary>Enable or disable multithreaded rendering option for mobile platform.</summary>
		</member>
		<member name="P:UnityEditor.TextureImporterSettings.mipmapEnabled">
			<summary>Generate mip maps for the texture?</summary>
		</member>
		<member name="M:UnityEditor.ShaderImporter.SetNonModifiableTextures(System.String[],UnityEngine.Texture[])">
			<summary>Sets the non-modifiable textures for each texture material property.</summary>
		</member>
		<member name="M:UnityEditor.EditorGUI.DrawRect(UnityEngine.Rect,UnityEngine.Color)">
			<summary>Draws a filled rectangle of color at the specified position and size within the current editor window.</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.MoveAssetToTrash(System.String)">
			<summary>Moves the asset at path to the trash.</summary>
		</member>
		<member name="P:UnityEditor.SerializedProperty.boundsIntValue">
			<summary>Value of bounds with integer values property.</summary>
		</member>
		<member name="M:UnityEditor.AnimationUtility.SetEditorCurve(UnityEngine.AnimationClip,UnityEditor.EditorCurveBinding,UnityEngine.AnimationCurve)">
			<summary>Adds, modifies or removes an editor float curve in a given clip.</summary>
		</member>
		<member name="M:UnityEditor.AnimationUtility.TangentMode UnityEditor.AnimationUtility.GetKeyLeftTangentMode(UnityEngine.AnimationCurve,System.Int32)">
			<summary>Retrieve the left tangent mode of the keyframe at specified index.</summary>
		</member>
		<member name="P:UnityEditor.TextureImporter.heightmapScale">
			<summary>Amount of bumpyness in the heightmap.</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.DeleteAsset(System.String)">
			<summary>Deletes the asset file at path.</summary>
		</member>
		<member name="M:UnityEditor.AnimationUtility.TangentMode UnityEditor.AnimationUtility.GetKeyRightTangentMode(UnityEngine.AnimationCurve,System.Int32)">
			<summary>Retrieve the right tangent mode of the keyframe at specified index.</summary>
		</member>
		<member name="T:UnityEditor.EditorGUI.DisabledGroupScope">
			<summary>Create a group of controls that can be disabled.</summary>
		</member>
		<member name="P:UnityEditor.SerializedProperty.isArray">
			<summary>Is this property an array? (Read Only)</summary>
		</member>
		<member name="M:UnityEditor.AnimationUtility.GetKeyBroken(UnityEngine.AnimationCurve,System.Int32)">
			<summary>Retrieve the specified keyframe broken tangent flag.</summary>
		</member>
		<member name="T:UnityEditor.EditorGUI.DisabledScope">
			<summary>Create a group of controls that can be disabled.</summary>
		</member>
		<member name="M:UnityEditor.AnimationUtility.SetKeyLeftTangentMode(UnityEngine.AnimationCurve,System.Int32,UnityEditor.AnimationUtility.TangentMode)">
			<summary>Change the specified keyframe tangent mode.</summary>
		</member>
		<member name="T:UnityEditor.EditorGUI.ChangeCheckScope">
			<summary>Check if any control was changed inside a block of code.</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.ImportAsset(System.String,UnityEditor.ImportAssetOptions)">
			<summary>Import asset at path.</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.ImportAsset(System.String)">
			<summary>Import asset at path.</summary>
		</member>
		<member name="M:UnityEditor.AnimationUtility.SetKeyRightTangentMode(UnityEngine.AnimationCurve,System.Int32,UnityEditor.AnimationUtility.TangentMode)">
			<summary>Change the specified keyframe tangent mode.</summary>
		</member>
		<member name="P:UnityEditor.TextureImporter.anisoLevel">
			<summary>Anisotropic filtering level of the texture.</summary>
		</member>
		<member name="T:UnityEditor.EditorGUI.IndentLevelScope">
			<summary>Scope for managing the indent level of the field labels.</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.CopyAsset(System.String,System.String)">
			<summary>Duplicates the asset at path and stores it at newPath.</summary>
		</member>
		<member name="M:UnityEditor.AnimationUtility.SetKeyBroken(UnityEngine.AnimationCurve,System.Int32,System.Boolean)">
			<summary>Change the specified keyframe broken tangent flag.</summary>
		</member>
		<member name="P:UnityEditor.TextureImporter.filterMode">
			<summary>Filtering mode of the texture.</summary>
		</member>
		<member name="M:UnityEditor.AnimationUtility.TangentMode UnityEditor.AnimationUtility.GetKeyLeftTangentMode(UnityEngine.Keyframe)">
			<summary>Retrieve the left tangent mode of the keyframe at specified index.</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.WriteImportSettingsIfDirty(System.String)">
			<summary>Writes the import settings to disk.</summary>
		</member>
		<member name="M:UnityEditor.AnimationUtility.TangentMode UnityEditor.AnimationUtility.GetKeyRightTangentMode(UnityEngine.Keyframe)">
			<summary>Retrieve the right tangent mode of the keyframe at specified index.</summary>
		</member>
		<member name="T:UnityEditor.EditorGUI.PropertyScope">
			<summary>Create a Property wrapper, useful for making regular GUI controls work with SerializedProperty.</summary>
		</member>
		<member name="P:UnityEditor.TextureImporter.wrapMode">
			<summary>Texture coordinate wrapping mode.</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.GetSubFolders(System.String)">
			<summary>Given a path to a directory in the Assets folder, relative to the project folder, this method will return an array of all its subdirectories.</summary>
		</member>
		<member name="P:UnityEditor.TextureImporter.wrapModeU">
			<summary>Texture U coordinate wrapping mode.</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.IsValidFolder(System.String)">
			<summary>Given a path to a folder, returns true if it exists, false otherwise.</summary>
		</member>
		<member name="P:UnityEditor.TextureImporter.wrapModeV">
			<summary>Texture V coordinate wrapping mode.</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.CreateAsset(UnityEngine.Object,System.String)">
			<summary>Creates a new asset at path.</summary>
		</member>
		<member name="M:UnityEditor.ShaderImporter.GetNonModifiableTexture(System.String)">
			<summary>Gets the non-modifiable texture assigned to the shader importer for the shader property with given name.</summary>
		</member>
		<member name="T:UnityEditor.SpeedTreeImporter">
			<summary>AssetImportor for importing SpeedTree model assets.</summary>
		</member>
		<member name="P:UnityEditor.TextureImporter.wrapModeW">
			<summary>Texture W coordinate wrapping mode for Texture3D.</summary>
		</member>
		<member name="M:UnityEditor.PlayerSettings.GetMobileMTRendering(UnityEditor.BuildTargetGroup)">
			<summary>Check if multithreaded rendering option for mobile platform is enabled.</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.AddObjectToAsset(UnityEngine.Object,System.String)">
			<summary>Adds objectToAdd to an existing asset at path.</summary>
		</member>
		<member name="F:UnityEditor.SpeedTreeImporter.windQualityNames">
			<summary>Gets an array of name strings for wind quality value.</summary>
		</member>
		<member name="P:UnityEditor.SerializedProperty.arraySize">
			<summary>The number of elements in the array. If the SerializedObject contains multiple objects it will return the smallest number of elements. So it is always possible to iterate through the SerializedObject and only get properties found in all objects.</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.AddObjectToAsset(UnityEngine.Object,UnityEngine.Object)">
			<summary>Adds objectToAdd to an existing asset at path.</summary>
		</member>
		<member name="P:UnityEditor.SpeedTreeImporter.hasImported">
			<summary>Tells if the SPM file has been previously imported.</summary>
		</member>
		<member name="P:UnityEditor.SerializedProperty.isFixedBuffer">
			<summary>Is this property a fixed buffer? (Read Only)</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.SetMainObject(UnityEngine.Object,System.String)">
			<summary>Specifies which object in the asset file should become the main object after the next import.</summary>
		</member>
		<member name="P:UnityEditor.SpeedTreeImporter.materialFolderPath">
			<summary>Returns the folder path where generated materials will be placed in.</summary>
		</member>
		<member name="P:UnityEditor.SerializedProperty.fixedBufferSize">
			<summary>The number of elements in the fixed buffer. (Read Only)</summary>
		</member>
		<member name="P:UnityEditor.SpeedTreeImporter.MaterialLocation UnityEditor.SpeedTreeImporter.materialLocation">
			<summary>Material import location options.</summary>
		</member>
		<member name="M:UnityEditor.SerializedProperty.Copy()">
			<summary>Returns a copy of the SerializedProperty iterator in its current state. This is useful if you want to keep a reference to the current property but continue with the iteration.</summary>
		</member>
		<member name="P:UnityEditor.SpeedTreeImporter.isV8">
			<summary>Returns true if the asset is a SpeedTree v8 asset.</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.GetAssetPath(UnityEngine.Object)">
			<summary>Returns the path name relative to the project folder where the asset is stored.</summary>
		</member>
		<member name="M:UnityEditor.SerializedProperty.FindPropertyRelative(System.String)">
			<summary>Retrieves the SerializedProperty at a relative path to the current property.</summary>
		</member>
		<member name="P:UnityEditor.SpeedTreeImporter.defaultShader">
			<summary>Returns the default SpeedTree shader for the active render pipeline (either v7 or v8 according to the asset version).</summary>
		</member>
		<member name="P:UnityEditor.TextureImporterSettings.sRGBTexture">
			<summary>Is texture storing color data?</summary>
		</member>
		<member name="P:UnityEditor.TextureImporter.mipMapBias">
			<summary>Mip map bias of the texture.</summary>
		</member>
		<member name="M:UnityEditor.PlayerSettings.GetStackTraceLogType(UnityEngine.LogType)">
			<summary>Get stack trace logging options.</summary>
		</member>
		<member name="M:UnityEditor.PlayerSettings.SetStackTraceLogType(UnityEngine.LogType,UnityEngine.StackTraceLogType)">
			<summary></summary>
		</member>
		<member name="P:UnityEditor.TextureImporterSettings.fadeOut">
			<summary>Fade out mip levels to gray color?</summary>
		</member>
		<member name="P:UnityEditor.TextureImporterSettings.borderMipmap">
			<summary>Enable this to avoid colors seeping out to the edge of the lower Mip levels. Used for light cookies.</summary>
		</member>
		<member name="M:UnityEditor.SerializedProperty.GetEnumerator()">
			<summary>Retrieves an iterator that allows you to iterator over the current nexting of a serialized property.</summary>
		</member>
		<member name="P:UnityEditor.TextureImporterSettings.mipMapsPreserveCoverage">
			<summary>Enables or disables coverage-preserving alpha MIP mapping.</summary>
		</member>
		<member name="M:UnityEditor.SerializedProperty.GetArrayElementAtIndex(System.Int32)">
			<summary>Returns the element at the specified index in the array.</summary>
		</member>
		<member name="M:UnityEditor.PlayerSettings.GetPlatformIcons(UnityEditor.BuildTargetGroup,UnityEditor.PlatformIconKind)">
			<summary>Returns the list of available icon slots for the specified platform and  kind.</summary>
		</member>
		<member name="P:UnityEditor.TextureImporterSettings.alphaTestReferenceValue">
			<summary>Returns or assigns the alpha test reference value.</summary>
		</member>
		<member name="M:UnityEditor.SerializedProperty.NextVisible(System.Boolean)">
			<summary>Move to next visible property.</summary>
		</member>
		<member name="M:UnityEditor.PlayerSettings.SetPlatformIcons(UnityEditor.BuildTargetGroup,UnityEditor.PlatformIconKind,UnityEditor.PlatformIcon[])">
			<summary>Assign a list of icons for the specified platform and icon kind.</summary>
		</member>
		<member name="M:UnityEditor.SerializedProperty.ClearArray()">
			<summary>Remove all elements from the array.</summary>
		</member>
		<member name="P:UnityEditor.TextureImporterSettings.mipmapFadeDistanceStart">
			<summary>Mip level where texture begins to fade out to gray.</summary>
		</member>
		<member name="M:UnityEditor.PlayerSettings.GetSupportedIconKindsForPlatform(UnityEditor.BuildTargetGroup)">
			<summary>Retrieve all icon kinds supported by the specified platform.</summary>
		</member>
		<member name="M:UnityEditor.SerializedProperty.EqualContents(UnityEditor.SerializedProperty,UnityEditor.SerializedProperty)">
			<summary>See if contained serialized properties are equal.</summary>
		</member>
		<member name="P:UnityEditor.TextureImporterSettings.mipmapFadeDistanceEnd">
			<summary>Mip level where texture is faded out to gray completely.</summary>
		</member>
		<member name="M:UnityEditor.PlayerSettings.SetIconsForTargetGroup(UnityEditor.BuildTargetGroup,UnityEngine.Texture2D[],UnityEditor.IconKind)">
			<summary>Assign a list of icons for the specified platform.</summary>
		</member>
		<member name="M:UnityEditor.PlayerSettings.SetIconsForTargetGroup(UnityEditor.BuildTargetGroup,UnityEngine.Texture2D[])">
			<summary>Assign a list of icons for the specified platform.</summary>
		</member>
		<member name="M:UnityEditor.SerializedProperty.DataEquals(UnityEditor.SerializedProperty,UnityEditor.SerializedProperty)">
			<summary>Compares the data for two SerializedProperties. This method ignores paths and SerializedObjects.</summary>
		</member>
		<member name="P:UnityEditor.TextureImporterSettings.convertToNormalMap">
			<summary>Convert heightmap to normal map?</summary>
		</member>
		<member name="P:UnityEditor.TextureImporter.alphaIsTransparency">
			<summary>If the provided alpha channel is transparency, enable this to prefilter the color to avoid filtering artifacts.</summary>
		</member>
		<member name="M:UnityEditor.PlayerSettings.GetIconsForTargetGroup(UnityEditor.BuildTargetGroup,UnityEditor.IconKind)">
			<summary>Returns the list of assigned icons for the specified platform.</summary>
		</member>
		<member name="P:UnityEditor.TextureImporterSettings.heightmapScale">
			<summary>Amount of bumpyness in the heightmap.</summary>
		</member>
		<member name="P:UnityEditor.TextureImporter.qualifiesForSpritePacking">
			<summary>Returns true if this TextureImporter is setup for Sprite packing.</summary>
		</member>
		<member name="M:UnityEditor.AnimationUtility.GetKeyBroken(UnityEngine.Keyframe)">
			<summary>Retrieve the specified keyframe broken tangent flag.</summary>
		</member>
		<member name="P:UnityEditor.SpeedTreeImporter.defaultBillboardShader">
			<summary>Returns the default SpeedTree billboard shader for the active render pipeline, or null if the asset is a SpeedTree v8 asset.</summary>
		</member>
		<member name="P:UnityEditor.TextureImporterSettings.normalMapFilter">
			<summary>Normal map filtering mode.</summary>
		</member>
		<member name="P:UnityEditor.SpeedTreeImporter.scaleFactor">
			<summary>How much to scale the tree model compared to what is in the .spm file.</summary>
		</member>
		<member name="P:UnityEditor.SpeedTreeImporter.mainColor">
			<summary>Gets and sets a default main color.</summary>
		</member>
		<member name="P:UnityEditor.TextureImporterSettings.alphaSource">
			<summary>Select how the alpha of the imported texture is generated.</summary>
		</member>
		<member name="P:UnityEditor.SpeedTreeImporter.specColor">
			<summary>Gets and sets a default specular color.</summary>
		</member>
		<member name="P:UnityEditor.TextureImporterSettings.singleChannelComponent">
			<summary>Color or Alpha component Single Channel Textures uses.</summary>
		</member>
		<member name="P:UnityEditor.TextureImporter.spriteImportMode">
			<summary>Selects Single or Manual import mode for Sprite textures.</summary>
		</member>
		<member name="P:UnityEditor.SpeedTreeImporter.shininess">
			<summary>Gets and sets a default Shininess value.</summary>
		</member>
		<member name="P:UnityEditor.TextureImporterSettings.readable">
			<summary>Is texture data readable from scripts.</summary>
		</member>
		<member name="P:UnityEditor.SpeedTreeImporter.hueVariation">
			<summary>Gets and sets a default Hue variation color and amount (in alpha).</summary>
		</member>
		<member name="P:UnityEditor.TextureImporterSettings.streamingMipmaps">
			<summary>Enable mipmap streaming for this texture.</summary>
		</member>
		<member name="P:UnityEditor.SpeedTreeImporter.alphaTestRef">
			<summary>Gets and sets a default alpha test reference values.</summary>
		</member>
		<member name="P:UnityEditor.TextureImporterSettings.streamingMipmapsPriority">
			<summary>Relative priority for this texture when reducing memory size in order to hit the memory budget.</summary>
		</member>
		<member name="P:UnityEditor.SpeedTreeImporter.hasBillboard">
			<summary>Tells if there is a billboard LOD.</summary>
		</member>
		<member name="P:UnityEditor.TextureImporterSettings.npotScale">
			<summary>Scaling mode for non power of two textures.</summary>
		</member>
		<member name="P:UnityEditor.SpeedTreeImporter.enableSmoothLODTransition">
			<summary>Enables smooth LOD transitions.</summary>
		</member>
		<member name="M:UnityEditor.AnimationUtility.SetKeyLeftTangentMode(UnityEngine.Keyframe&,UnityEditor.AnimationUtility.TangentMode)">
			<summary>Change the specified keyframe tangent mode.</summary>
		</member>
		<member name="P:UnityEditor.TextureImporterSettings.generateCubemap">
			<summary>Cubemap generation mode.</summary>
		</member>
		<member name="P:UnityEditor.SpeedTreeImporter.animateCrossFading">
			<summary>Indicates if the cross-fade LOD transition, applied to the last mesh LOD and the billboard, should be animated.</summary>
		</member>
		<member name="P:UnityEditor.TextureImporter.spritesheet">
			<summary>Array representing the sections of the atlas corresponding to individual sprite graphics.</summary>
		</member>
		<member name="P:UnityEditor.TextureImporterSettings.cubemapConvolution">
			<summary>Convolution mode.</summary>
		</member>
		<member name="P:UnityEditor.SpeedTreeImporter.billboardTransitionCrossFadeWidth">
			<summary>Proportion of the last 3D mesh LOD region width which is used for cross-fading to billboard tree.</summary>
		</member>
		<member name="P:UnityEditor.TextureImporter.secondarySpriteTextures">
			<summary>Secondary textures for the imported Sprites.</summary>
		</member>
		<member name="M:UnityEditor.PlayerSettings.GetIconsForTargetGroup(UnityEditor.BuildTargetGroup)">
			<summary>Returns the list of assigned icons for the specified platform.</summary>
		</member>
		<member name="P:UnityEditor.TextureImporterSettings.filterMode">
			<summary>Filtering mode of the texture.</summary>
		</member>
		<member name="P:UnityEditor.SpeedTreeImporter.fadeOutWidth">
			<summary>Proportion of the billboard LOD region width which is used for fading out the billboard.</summary>
		</member>
		<member name="P:UnityEditor.TextureImporterSettings.aniso">
			<summary>Anisotropic filtering level of the texture.</summary>
		</member>
		<member name="M:UnityEditor.SerializedProperty.Next(System.Boolean)">
			<summary>Move to next property.</summary>
		</member>
		<member name="P:UnityEditor.TextureImporterSettings.mipmapBias">
			<summary>Mip map bias of the texture.</summary>
		</member>
		<member name="M:UnityEditor.SerializedProperty.Reset()">
			<summary>Move to first property of the object.</summary>
		</member>
		<member name="P:UnityEditor.TextureImporterSettings.wrapMode">
			<summary>Texture coordinate wrapping mode.</summary>
		</member>
		<member name="M:UnityEditor.SerializedProperty.CountRemaining()">
			<summary>Count remaining visible properties.</summary>
		</member>
		<member name="P:UnityEditor.TextureImporterSettings.wrapModeU">
			<summary>Texture U coordinate wrapping mode.</summary>
		</member>
		<member name="M:UnityEditor.SerializedProperty.CountInProperty()">
			<summary>Count visible children of this property, including this property itself.</summary>
		</member>
		<member name="P:UnityEditor.TextureImporterSettings.wrapModeV">
			<summary>Texture V coordinate wrapping mode.</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.GetAssetPath(System.Int32)">
			<summary>Returns the path name relative to the project folder where the asset is stored.</summary>
		</member>
		<member name="M:UnityEditor.SerializedProperty.DuplicateCommand()">
			<summary>Duplicates the serialized property.</summary>
		</member>
		<member name="P:UnityEditor.SpeedTreeImporter.castShadows">
			<summary>Gets and sets an array of booleans to enable shadow casting for each LOD.</summary>
		</member>
		<member name="P:UnityEditor.TextureImporterSettings.wrapModeW">
			<summary>Texture W coordinate wrapping mode for Texture3D.</summary>
		</member>
		<member name="M:UnityEditor.SerializedProperty.DeleteCommand()">
			<summary>Deletes the serialized property.</summary>
		</member>
		<member name="P:UnityEditor.SpeedTreeImporter.receiveShadows">
			<summary>Gets and sets an array of booleans to enable shadow receiving for each LOD.</summary>
		</member>
		<member name="P:UnityEditor.TextureImporterSettings.alphaIsTransparency">
			<summary>If the provided alpha channel is transparency, enable this to dilate the color to avoid filtering artifacts on the edges.</summary>
		</member>
		<member name="M:UnityEditor.SerializedProperty.GetEndProperty()">
			<summary>Retrieves the SerializedProperty that defines the end range of this property.</summary>
		</member>
		<member name="P:UnityEditor.SpeedTreeImporter.useLightProbes">
			<summary>Gets and sets an array of booleans to enable Light Probe lighting for each LOD.</summary>
		</member>
		<member name="M:UnityEditor.SerializedProperty.GetEndProperty(System.Boolean)">
			<summary>Retrieves the SerializedProperty that defines the end range of this property.</summary>
		</member>
		<member name="P:UnityEditor.TextureImporterSettings.spriteMode">
			<summary>Sprite texture import mode.</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.GetAssetOrScenePath(UnityEngine.Object)">
			<summary>Returns the path name relative to the project folder where the asset is stored.</summary>
		</member>
		<member name="P:UnityEditor.SpeedTreeImporter.enableBump">
			<summary>Gets and sets an array of booleans to enable normal mapping for each LOD.</summary>
		</member>
		<member name="M:UnityEditor.PlayerSettings.GetIconSizesForTargetGroup(UnityEditor.BuildTargetGroup,UnityEditor.IconKind)">
			<summary>Returns a list of icon sizes for the specified platform.</summary>
		</member>
		<member name="M:UnityEditor.AnimationUtility.SetKeyRightTangentMode(UnityEngine.Keyframe&,UnityEditor.AnimationUtility.TangentMode)">
			<summary>Change the specified keyframe tangent mode.</summary>
		</member>
		<member name="M:UnityEditor.PlayerSettings.GetIconSizesForTargetGroup(UnityEditor.BuildTargetGroup)">
			<summary>Returns a list of icon sizes for the specified platform.</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.GetTextMetaFilePathFromAssetPath(System.String)">
			<summary>Gets the path to the text .meta file associated with an asset.</summary>
		</member>
		<member name="M:UnityEditor.AnimationUtility.SetKeyBroken(UnityEngine.Keyframe&,System.Boolean)">
			<summary>Change the specified keyframe broken tangent flag.</summary>
		</member>
		<member name="P:UnityEditor.TextureImporterSettings.spritePixelsPerUnit">
			<summary>The number of pixels in the sprite that correspond to one unit in world space.</summary>
		</member>
		<member name="M:UnityEditor.PlayerSettings.GetAvailableVirtualRealitySDKs(UnityEditor.BuildTargetGroup)">
			<summary>Returns a list of the available Virtual Reality SDKs that are supported on a given BuildTargetGroup.</summary>
		</member>
		<member name="M:UnityEditor.AnimationUtility.GetAllCurves(UnityEngine.AnimationClip)">
			<summary>Retrieves all curves from a specific animation clip.</summary>
		</member>
		<member name="M:UnityEditor.AnimationUtility.GetAllCurves(UnityEngine.AnimationClip,System.Boolean)">
			<summary>Retrieves all curves from a specific animation clip.</summary>
		</member>
		<member name="P:UnityEditor.TextureImporterSettings.spritePixelsToUnits">
			<summary>Scale factor between pixels in the sprite graphic and world space units.</summary>
		</member>
		<member name="M:UnityEditor.PlayerSettings.GetVirtualRealitySupported(UnityEditor.BuildTargetGroup)">
			<summary>Returns whether or not Virtual Reality Support is enabled for a given BuildTargetGroup.</summary>
		</member>
		<member name="M:UnityEditor.AnimationUtility.GetFloatValue(UnityEngine.GameObject,System.String,System.Type,System.String,System.Single&)">
			<summary>Retrieves the current float value by sampling a curve value on a specific game object.</summary>
		</member>
		<member name="M:UnityEditor.AnimationUtility.SetEditorCurve(UnityEngine.AnimationClip,System.String,System.Type,System.String,UnityEngine.AnimationCurve)">
			<summary>Adds, modifies or removes an editor float curve in a given clip.</summary>
		</member>
		<member name="M:UnityEditor.AnimationUtility.GetEditorCurve(UnityEngine.AnimationClip,System.String,System.Type,System.String)">
			<summary>Return the float curve that the binding is pointing to.</summary>
		</member>
		<member name="P:UnityEditor.TextureImporterSettings.spriteTessellationDetail">
			<summary></summary>
		</member>
		<member name="M:UnityEditor.PlayerSettings.SetVirtualRealitySupported(UnityEditor.BuildTargetGroup,System.Boolean)">
			<summary>Sets whether or not Virtual Reality Support is enabled for a given BuildTargetGroup.</summary>
		</member>
		<member name="M:UnityEditor.AnimationUtility.GetAnimationEvents(UnityEngine.AnimationClip)">
			<summary>Retrieves all animation events associated with the animation clip.</summary>
		</member>
		<member name="M:UnityEditor.PlayerSettings.GetVirtualRealitySDKs(UnityEditor.BuildTargetGroup)">
			<summary>Get the List of Virtual Reality SDKs for a given BuildTargetGroup.</summary>
		</member>
		<member name="P:UnityEditor.TextureImporterSettings.spriteExtrude">
			<summary>The number of blank pixels to leave between the edge of the graphic and the mesh.</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.GetAssetPathFromTextMetaFilePath(System.String)">
			<summary>Gets the path to the asset file associated with a text .meta file.</summary>
		</member>
		<member name="P:UnityEditor.SpeedTreeImporter.enableHue">
			<summary>Gets and sets an array of booleans to enable Hue variation effect for each LOD.</summary>
		</member>
		<member name="M:UnityEditor.AnimationUtility.SetAnimationEvents(UnityEngine.AnimationClip,UnityEngine.AnimationEvent[])">
			<summary>Replaces all animation events in the animation clip.</summary>
		</member>
		<member name="M:UnityEditor.PlayerSettings.SetVirtualRealitySDKs(UnityEditor.BuildTargetGroup,System.String[])">
			<summary>Set the List of Virtual Reality SDKs for a given BuildTargetGroup.</summary>
		</member>
		<member name="P:UnityEditor.TextureImporterSettings.spriteMeshType">
			<summary></summary>
		</member>
		<member name="P:UnityEditor.SpeedTreeImporter.enableSubsurface">
			<summary>Gets and sets an array of booleans to enable Subsurface effect for each LOD (affects only SpeedTree v8 assets).</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.LoadAssetAtPath(System.String,System.Type)">
			<summary>Returns the first asset object of type type at given path assetPath.</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.LoadAssetAtPath(System.String)">
			<summary>Returns the first asset object of type type at given path assetPath.</summary>
		</member>
		<member name="M:UnityEditor.AnimationUtility.CalculateTransformPath(UnityEngine.Transform,UnityEngine.Transform)">
			<summary>Calculates path from root transform to target transform.</summary>
		</member>
		<member name="P:UnityEditor.TextureImporterSettings.spriteAlignment">
			<summary>Edge-relative alignment of the sprite graphic.</summary>
		</member>
		<member name="P:UnityEditor.SpeedTreeImporter.bestWindQuality">
			<summary>Returns the best-possible wind quality on this asset (configured in SpeedTree modeler).</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.LoadMainAssetAtPath(System.String)">
			<summary>Returns the main asset object at assetPath.</summary>
		</member>
		<member name="M:UnityEditor.SerializedProperty.InsertArrayElementAtIndex(System.Int32)">
			<summary>Insert an empty element at the specified index in the array.</summary>
		</member>
		<member name="P:UnityEditor.TextureImporterSettings.spritePivot">
			<summary>Pivot point of the Sprite relative to its graphic's rectangle.</summary>
		</member>
		<member name="M:UnityEditor.SerializedProperty.DeleteArrayElementAtIndex(System.Int32)">
			<summary>Delete the element at the specified index in the array.</summary>
		</member>
		<member name="M:UnityEditor.SerializedProperty.MoveArrayElement(System.Int32,System.Int32)">
			<summary>Move an array element from srcIndex to dstIndex.</summary>
		</member>
		<member name="M:UnityEditor.SerializedProperty.GetFixedBufferElementAtIndex(System.Int32)">
			<summary>Returns the element at the specified index in the fixed buffer.</summary>
		</member>
		<member name="T:UnityEditor.AudioCurveRendering">
			<summary>Antialiased curve rendering functionality used by audio tools in the editor.</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.GetMainAssetTypeAtPath(System.String)">
			<summary>Returns the type of the main asset object at assetPath.</summary>
		</member>
		<member name="M:UnityEditor.AudioCurveRendering.DrawFilledCurve(UnityEngine.Rect,UnityEditor.AudioCurveRendering.AudioCurveEvaluator,UnityEngine.Color)">
			<summary>Fills the area between the curve evaluated by the AudioCurveAndColorEvaluator provided and the bottom of the rectngle with smooth gradients along the edges.</summary>
		</member>
		<member name="T:UnityEditor.ShaderInfo">
			<summary></summary>
		</member>
		<member name="M:UnityEditor.AudioCurveRendering.DrawFilledCurve(UnityEngine.Rect,UnityEditor.AudioCurveRendering.AudioCurveAndColorEvaluator)">
			<summary>Fills the area between the curve evaluated by the AudioCurveAndColorEvaluator provided and the bottom of the rectngle with smooth gradients along the edges.</summary>
		</member>
		<member name="P:UnityEditor.SpeedTreeImporter.windQualities">
			<summary>Gets and sets an array of integers of the wind qualities on each LOD. Values will be clampped by bestWindQuality internally.</summary>
		</member>
		<member name="M:UnityEditor.AudioCurveRendering.DrawMinMaxFilledCurve(UnityEngine.Rect,UnityEditor.AudioCurveRendering.AudioMinMaxCurveAndColorEvaluator)">
			<summary>Fills the area between the two curves evaluated by the AudioMinMaxCurveAndColorEvaluator provided with smooth gradients along the edges.</summary>
		</member>
		<member name="P:UnityEditor.ShaderInfo.name">
			<summary>The name of the shader.</summary>
		</member>
		<member name="P:UnityEditor.TextureImporterSettings.spriteBorder">
			<summary>Border sizes of the generated sprites.</summary>
		</member>
		<member name="M:UnityEditor.AnimationUtility.SetAdditiveReferencePose(UnityEngine.AnimationClip,UnityEngine.AnimationClip,System.Single)">
			<summary>Set the additive reference pose from referenceClip at time for animation clip clip.</summary>
		</member>
		<member name="P:UnityEditor.TextureImporter.spritePackingTag">
			<summary>Selects the Sprite packing tag.</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.IsMainAssetAtPathLoaded(System.String)">
			<summary>Returns true if the main asset object at assetPath is loaded in memory.</summary>
		</member>
		<member name="P:UnityEditor.ShaderInfo.supported">
			<summary>True if the shader is supported on the currently selected platform.</summary>
		</member>
		<member name="M:UnityEditor.AnimationUtility.GetGenerateMotionCurves(UnityEngine.AnimationClip)">
			<summary>Returns whether the animation clip is set to generate root motion curves.</summary>
		</member>
		<member name="P:UnityEditor.ShaderInfo.hasErrors">
			<summary>True if the shader has compilation errors.</summary>
		</member>
		<member name="P:UnityEditor.TextureImporterSettings.spriteGenerateFallbackPhysicsShape">
			<summary>Generates a default physics shape for a Sprite if a physics shape has not been set by the user.</summary>
		</member>
		<member name="P:UnityEditor.TextureImporter.spritePixelsPerUnit">
			<summary>The number of pixels in the sprite that correspond to one unit in world space.</summary>
		</member>
		<member name="M:UnityEditor.AudioCurveRendering.DrawSymmetricFilledCurve(UnityEngine.Rect,UnityEditor.AudioCurveRendering.AudioCurveAndColorEvaluator)">
			<summary>Fills the area between the curve evaluated by the AudioCurveAndColorEvaluator provided and its vertical mirror image with smooth gradients along the edges. Useful for drawing amplitude plots of audio signals.</summary>
		</member>
		<member name="P:UnityEditor.TextureImporter.spritePixelsToUnits">
			<summary>Scale factor for mapping pixels in the graphic to units in world space.</summary>
		</member>
		<member name="M:UnityEditor.AnimationUtility.SetGenerateMotionCurves(UnityEngine.AnimationClip,System.Boolean)">
			<summary>Sets whether the animation clip generates root motion curves.</summary>
		</member>
		<member name="T:UnityEditor.ShaderMessage">
			<summary>Contains information about messages generated by Unity's Shader Compiler.</summary>
		</member>
		<member name="P:UnityEditor.TextureImporter.spritePivot">
			<summary>The point in the Sprite object's coordinate space where the graphic is located.</summary>
		</member>
		<member name="M:UnityEditor.SpeedTreeImporter.GenerateMaterials()">
			<summary>Generates all necessary materials under materialFolderPath. If Version Control is enabled please first check out the folder.</summary>
		</member>
		<member name="P:UnityEditor.TextureImporter.spriteBorder">
			<summary>Border sizes of the generated sprites.</summary>
		</member>
		<member name="P:UnityEditor.TextureImporter.textureType">
			<summary>Which type of texture are we dealing with here.</summary>
		</member>
		<member name="T:UnityEditor.AnimationUtility.CurveModifiedType">
			<summary>Describes the type of modification that caused OnCurveWasModified to fire.</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.LoadAllAssetRepresentationsAtPath(System.String)">
			<summary>Returns all sub Assets at assetPath.</summary>
		</member>
		<member name="P:UnityEditor.ShaderMessage.message">
			<summary>The message returned by the Unity Shader Compiler.</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.LoadAllAssetsAtPath(System.String)">
			<summary>Returns an array of all Assets at assetPath.</summary>
		</member>
		<member name="P:UnityEditor.ShaderMessage.messageDetails">
			<summary>An (optional) detailed message returned from the Unity Shader Compiler.</summary>
		</member>
		<member name="P:UnityEditor.TextureImporterSettings.rgbm">
			<summary>RGBM encoding mode for HDR textures in TextureImporter.</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.Refresh(UnityEditor.ImportAssetOptions)">
			<summary>Import any changed assets.</summary>
		</member>
		<member name="P:UnityEditor.ShaderMessage.file">
			<summary>The source file where the shader message was found.</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.Refresh()">
			<summary>Import any changed assets.</summary>
		</member>
		<member name="P:UnityEditor.TextureImporterSettings.grayscaleToAlpha">
			<summary>Generate alpha channel from intensity?</summary>
		</member>
		<member name="P:UnityEditor.ShaderMessage.line">
			<summary>The line of code where the shader message was found.</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.OpenAsset(System.Int32,System.Int32)">
			<summary>Opens the asset with associated application.</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.OpenAsset(System.Int32)">
			<summary>Opens the asset with associated application.</summary>
		</member>
		<member name="P:UnityEditor.TextureImporterSettings.cubemapConvolutionSteps">
			<summary>Defines how many different Phong exponents to store in mip maps. Higher value will give better transition between glossy and rough reflections, but will need higher texture resolution.</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.OpenAsset(UnityEngine.Object)">
			<summary>Opens the asset with associated application.</summary>
		</member>
		<member name="P:UnityEditor.ShaderMessage.platform">
			<summary>The specific platform where the Unity Shader Compiler discovered the message.</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.OpenAsset(UnityEngine.Object,System.Int32)">
			<summary>Opens the asset with associated application.</summary>
		</member>
		<member name="P:UnityEditor.TextureImporterSettings.cubemapConvolutionExponent">
			<summary>Defines how fast Phong exponent wears off in mip maps. Higher value will apply less blur to high resolution mip maps.</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.OpenAsset(UnityEngine.Object[])">
			<summary>Opens the asset with associated application.</summary>
		</member>
		<member name="P:UnityEditor.ShaderMessage.severity">
			<summary>Indicates the severity of the message returned from the Unity Shader Compiler.</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.AssetPathToGUID(System.String)">
			<summary>Get the GUID for the asset at path.</summary>
		</member>
		<member name="M:UnityEditor.ShaderMessage.Equals(UnityEditor.ShaderMessage)">
			<summary>Compares two ShaderMessage on an element-by-element basis.</summary>
		</member>
		<member name="M:UnityEditor.AudioCurveRendering.DrawCurve(UnityEngine.Rect,UnityEditor.AudioCurveRendering.AudioCurveEvaluator,UnityEngine.Color)">
			<summary>Renders a thin curve determined by the curve evaluation function. The solid color of the curve is set by the curveColor argument.</summary>
		</member>
		<member name="P:UnityEditor.TextureImporter.textureShape">
			<summary>Shape of imported texture.</summary>
		</member>
		<member name="T:UnityEditor.AnimationUtility.TangentMode">
			<summary>Tangent constraints on Keyframe.</summary>
		</member>
		<member name="M:UnityEditor.ShaderMessage.Equals(System.Object)">
			<summary>Compares two ShaderMessage on an element-by-element basis.</summary>
		</member>
		<member name="M:UnityEditor.TextureImporter.GetAllowsAlphaSplitting()">
			<summary>Getter for the flag that allows Alpha splitting on the imported texture when needed (for example ETC1 compression for textures with transparency).</summary>
		</member>
		<member name="M:UnityEditor.ShaderMessage.GetHashCode()">
			<summary>Generates a hash value based on the contents of the message.</summary>
		</member>
		<member name="M:UnityEditor.TextureImporter.SetAllowsAlphaSplitting(System.Boolean)">
			<summary>Setter for the flag that allows Alpha splitting on the imported texture when needed (for example ETC1 compression for textures with transparency).</summary>
		</member>
		<member name="T:UnityEditor.ShaderUtil">
			<summary>Utility functions to assist with working with shaders from the editor.</summary>
		</member>
		<member name="M:UnityEditor.SpeedTreeImporter.SearchAndRemapMaterials(System.String)">
			<summary>Search the project for matching materials and use them instead of the internal materials.</summary>
		</member>
		<member name="M:UnityEditor.TextureImporter.GetPlatformTextureSettings(System.String,System.Int32&,UnityEditor.TextureImporterFormat&,System.Int32&,System.Boolean&)">
			<summary>Get platform specific texture settings.</summary>
		</member>
		<member name="M:UnityEditor.TextureImporter.GetPlatformTextureSettings(System.String,System.Int32&,UnityEditor.TextureImporterFormat&,System.Int32&)">
			<summary>Get platform specific texture settings.</summary>
		</member>
		<member name="T:UnityEditor.SpeedTreeImporter.MaterialLocation">
			<summary>Material import location options.</summary>
		</member>
		<member name="P:UnityEditor.ShaderUtil.hardwareSupportsRectRenderTexture">
			<summary>Does the current hardware support render textues.</summary>
		</member>
		<member name="M:UnityEditor.TextureImporter.GetPlatformTextureSettings(System.String,System.Int32&,UnityEditor.TextureImporterFormat&)">
			<summary>Get platform specific texture settings.</summary>
		</member>
		<member name="M:UnityEditor.TextureImporter.GetPlatformTextureSettings(System.String)">
			<summary>Get platform specific texture settings.</summary>
		</member>
		<member name="P:UnityEditor.ShaderUtil.anythingCompiling">
			<summary>When true, the Editor is compiling some Shaders asynchronously at the point of query.</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.GUIDToAssetPath(System.String)">
			<summary>Translate a GUID to its current asset path.</summary>
		</member>
		<member name="P:UnityEditor.ShaderUtil.allowAsyncCompilation">
			<summary>When true, asynchronous Shader compilation is allowed at the current call site.</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.GetAssetDependencyHash(System.String)">
			<summary>Returns the hash of all the dependencies of an asset.</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.SaveAssets()">
			<summary>Writes all unsaved asset changes to disk.</summary>
		</member>
		<member name="M:UnityEditor.ShaderUtil.GetPropertyCount(UnityEngine.Shader)">
			<summary>Get the number of properties in Shader s.</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.GetCachedIcon(System.String)">
			<summary>Retrieves an icon for the asset at the given asset path.</summary>
		</member>
		<member name="M:UnityEditor.TextureImporter.GetDefaultPlatformTextureSettings()">
			<summary>Get the default platform specific texture settings.</summary>
		</member>
		<member name="M:UnityEditor.ShaderUtil.GetShaderMessageCount(UnityEngine.Shader)">
			<summary>Returns the number of errors and warnings generated by the Unity Shader Compiler for the given Shader.</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.SetLabels(UnityEngine.Object,System.String[])">
			<summary>Replaces that list of labels on an asset.</summary>
		</member>
		<member name="M:UnityEditor.TextureImporter.GetAutomaticFormat(System.String)">
			<summary>Returns the TextureImporterFormat that would be automatically chosen for this platform.</summary>
		</member>
		<member name="M:UnityEditor.ShaderUtil.GetShaderMessages(UnityEngine.Shader)">
			<summary>Returns each error and warning generated by the Unity Shader Compiler for the given Shader.</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.GetLabels(UnityEngine.Object)">
			<summary>Returns all labels attached to a given asset.</summary>
		</member>
		<member name="M:UnityEditor.TextureImporter.SetPlatformTextureSettings(System.String,System.Int32,UnityEditor.TextureImporterFormat,System.Int32,System.Boolean)">
			<summary>Set specific target platform settings.</summary>
		</member>
		<member name="M:UnityEditor.ShaderUtil.ClearShaderMessages(UnityEngine.Shader)">
			<summary>Clear compile time messages for the given shader.</summary>
		</member>
		<member name="M:UnityEditor.TextureImporter.SetPlatformTextureSettings(System.String,System.Int32,UnityEditor.TextureImporterFormat)">
			<summary>Set specific target platform settings.</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.ClearLabels(UnityEngine.Object)">
			<summary>Removes all labels attached to an asset.</summary>
		</member>
		<member name="M:UnityEditor.TextureImporter.SetPlatformTextureSettings(System.String,System.Int32,UnityEditor.TextureImporterFormat,System.Boolean)">
			<summary>Set specific target platform settings.</summary>
		</member>
		<member name="M:UnityEditor.TextureImporter.SetPlatformTextureSettings(UnityEditor.TextureImporterPlatformSettings)">
			<summary>Set specific target platform settings.</summary>
		</member>
		<member name="M:UnityEditor.TextureImporter.ClearPlatformTextureSettings(System.String)">
			<summary>Clear specific target platform settings.</summary>
		</member>
		<member name="M:UnityEditor.TextureImporterSettings.Equal(UnityEditor.TextureImporterSettings,UnityEditor.TextureImporterSettings)">
			<summary>Test texture importer settings for equality.</summary>
		</member>
		<member name="M:UnityEditor.TextureImporterSettings.CopyTo(UnityEditor.TextureImporterSettings)">
			<summary>Copy parameters into another TextureImporterSettings object.</summary>
		</member>
		<member name="M:UnityEditor.TextureImporter.DoesSourceTextureHaveAlpha()">
			<summary>Does textures source image have alpha channel.</summary>
		</member>
		<member name="M:UnityEditor.ShaderUtil.GetComputeShaderMessageCount(UnityEngine.ComputeShader)">
			<summary>Returns the number of errors and warnings generated by the Unity Shader Compiler for the given ComputeShader.</summary>
		</member>
		<member name="T:UnityEditor.AudioCurveRendering.AudioCurveEvaluator">
			<summary>Curve evaluation function used to evaluate the curve y-value and at the specified point.</summary>
		</member>
		<member name="M:UnityEditor.TextureImporter.DoesSourceTextureHaveColor()">
			<summary>Does textures source image have RGB channels.</summary>
		</member>
		<member name="M:UnityEditor.ShaderUtil.GetComputeShaderMessages(UnityEngine.ComputeShader)">
			<summary>Returns each error and warning generated by the Unity Shader Compiler for the given ComputeShader.</summary>
		</member>
		<member name="T:UnityEditor.AudioCurveRendering.AudioCurveAndColorEvaluator">
			<summary>Curve evaluation function that allows simultaneous evaluation of the curve y-value and a color of the curve at that point.</summary>
		</member>
		<member name="M:UnityEditor.ShaderUtil.GetPropertyName(UnityEngine.Shader,System.Int32)">
			<summary>Get the name of the shader propery at index propertyIdx of Shader s.</summary>
		</member>
		<member name="M:UnityEditor.TextureImporter.ReadTextureSettings(UnityEditor.TextureImporterSettings)">
			<summary>Read texture settings into TextureImporterSettings class.</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.GetAllAssetBundleNames()">
			<summary>Return all the AssetBundle names in the asset database.</summary>
		</member>
		<member name="M:UnityEditor.ShaderUtil.ShaderPropertyType UnityEditor.ShaderUtil.GetPropertyType(UnityEngine.Shader,System.Int32)">
			<summary>Get the ShaderProperyType of the shader propery at index propertyIdx of Shader s.</summary>
		</member>
		<member name="T:UnityEditor.AudioCurveRendering.AudioMinMaxCurveAndColorEvaluator">
			<summary>Curve evaluation function that allows simultaneous evaluation of the min- and max-curves. The returned minValue and maxValue values are expected to be in the range [-1; 1] and a value of 0 corresponds to the vertical center of the rectangle that is drawn into. Values outside of this range will be clamped. Additionally the color of the curve at this point is evaluated.</summary>
		</member>
		<member name="M:UnityEditor.TextureImporter.SetTextureSettings(UnityEditor.TextureImporterSettings)">
			<summary>Set texture importers settings from TextureImporterSettings class.</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.GetUnusedAssetBundleNames()">
			<summary>Return all the unused assetBundle names in the asset database.</summary>
		</member>
		<member name="M:UnityEditor.ShaderUtil.GetPropertyDescription(UnityEngine.Shader,System.Int32)">
			<summary>Get the description of the shader propery at index propertyIdx of Shader s.</summary>
		</member>
		<member name="M:UnityEditor.TextureImporter.ReadTextureImportInstructions(UnityEditor.BuildTarget,UnityEngine.TextureFormat&,UnityEngine.ColorSpace&,System.Int32&)">
			<summary>Reads the active texture output instructions of this TextureImporter.</summary>
		</member>
		<member name="M:UnityEditor.TextureImporterSettings.ApplyTextureType(UnityEditor.TextureImporterType,System.Boolean)">
			<summary>Configure parameters to import a texture for a purpose of type, as described here.</summary>
		</member>
		<member name="M:UnityEditor.TextureImporterSettings.ApplyTextureType(UnityEditor.TextureImporterType)">
			<summary>Configure parameters to import a texture for a purpose of type, as described here.</summary>
		</member>
		<member name="M:UnityEditor.ShaderUtil.GetRangeLimits(UnityEngine.Shader,System.Int32,System.Int32)">
			<summary>Get Limits for a range property at index propertyIdx of Shader s.</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.RemoveAssetBundleName(System.String,System.Boolean)">
			<summary>Remove the assetBundle name from the asset database. The forceRemove flag is used to indicate if you want to remove it even it's in use.</summary>
		</member>
		<member name="M:UnityEditor.ShaderUtil.GetTexDim(UnityEngine.Shader,System.Int32)">
			<summary>Gets texture dimension of a shader property.</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.RemoveUnusedAssetBundleNames()">
			<summary>Remove all the unused assetBundle names in the asset database.</summary>
		</member>
		<member name="T:UnityEditor.TextureImporterPlatformSettings">
			<summary>Stores platform specifics settings of a TextureImporter.</summary>
		</member>
		<member name="M:UnityEditor.ShaderUtil.IsShaderPropertyHidden(UnityEngine.Shader,System.Int32)">
			<summary>Is the shader propery at index propertyIdx of Shader s hidden?</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.GetAssetPathsFromAssetBundle(System.String)">
			<summary>Get the paths of the assets which have been marked with the given assetBundle name.</summary>
		</member>
		<member name="M:UnityEditor.ShaderUtil.IsShaderPropertyNonModifiableTexureProperty(UnityEngine.Shader,System.Int32)">
			<summary>Is the shader propery at index propertyIdx of Shader s a NonModifiableTextureProperty?</summary>
		</member>
		<member name="P:UnityEditor.TextureImporterPlatformSettings.name">
			<summary>Name of the build target.</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.GetAssetPathsFromAssetBundleAndAssetName(System.String,System.String)">
			<summary></summary>
		</member>
		<member name="M:UnityEditor.ShaderUtil.ClearCachedData(UnityEngine.Shader)">
			<summary>Clears all internally-cached data that was generated for the given shader, such as errors and compilation info.</summary>
		</member>
		<member name="P:UnityEditor.TextureImporterPlatformSettings.overridden">
			<summary>Set to true in order to override the Default platform parameters by those provided in the TextureImporterPlatformSettings structure.</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.GetImplicitAssetBundleName(System.String)">
			<summary>Returns the name of the AssetBundle that a given asset belongs to.</summary>
		</member>
		<member name="P:UnityEditor.TextureImporterPlatformSettings.maxTextureSize">
			<summary>Maximum texture size.</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.GetImplicitAssetBundleVariantName(System.String)">
			<summary>Returns the name of the AssetBundle Variant that a given asset belongs to.</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.GetAssetBundleDependencies(System.String,System.Boolean)">
			<summary>Given an assetBundleName, returns the list of AssetBundles that it depends on.</summary>
		</member>
		<member name="P:UnityEditor.TextureImporterPlatformSettings.resizeAlgorithm">
			<summary>For Texture to be scaled down choose resize algorithm. ( Applyed only when Texture dimension is bigger than Max Size ).</summary>
		</member>
		<member name="M:UnityEditor.ShaderUtil.UpdateShaderAsset(UnityEngine.Shader,System.String,System.Boolean)">
			<summary>Replaces the existing source code in the specified shader with the source code in the supplied string. The override provides a boolean that specifies whether the shader should be recompiled.</summary>
		</member>
		<member name="M:UnityEditor.ShaderUtil.UpdateShaderAsset(UnityEngine.Shader,System.String)">
			<summary>Replaces the existing source code in the specified shader with the source code in the supplied string. The override provides a boolean that specifies whether the shader should be recompiled.</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.GetDependencies(System.String)">
			<summary>Given a pathName, returns the list of all assets that it depends on.</summary>
		</member>
		<member name="P:UnityEditor.TextureImporterPlatformSettings.format">
			<summary>Format of imported texture.</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.GetDependencies(System.String,System.Boolean)">
			<summary>Given a pathName, returns the list of all assets that it depends on.</summary>
		</member>
		<member name="M:UnityEditor.ShaderUtil.RegisterShader(UnityEngine.Shader)">
			<summary>Register a user created shader.</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.GetDependencies(System.String[])">
			<summary>Given a pathName, returns the list of all assets that it depends on.</summary>
		</member>
		<member name="P:UnityEditor.TextureImporterPlatformSettings.textureCompression">
			<summary>Compression of imported texture.</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.GetDependencies(System.String[],System.Boolean)">
			<summary>Given a pathName, returns the list of all assets that it depends on.</summary>
		</member>
		<member name="P:UnityEditor.TextureImporterPlatformSettings.compressionQuality">
			<summary>Quality of texture compression in the range [0..100].</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.ExportPackage(System.String,System.String)">
			<summary>Exports the assets identified by assetPathNames to a unitypackage file in fileName.</summary>
		</member>
		<member name="M:UnityEditor.ShaderUtil.GetAllShaderInfo()">
			<summary>Returns an array of ShaderInfo of all available shaders. That includes built-in shaders.</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.ExportPackage(System.String,System.String,UnityEditor.ExportPackageOptions)">
			<summary>Exports the assets identified by assetPathNames to a unitypackage file in fileName.</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.ExportPackage(System.String[],System.String,UnityEditor.ExportPackageOptions)">
			<summary>Exports the assets identified by assetPathNames to a unitypackage file in fileName.</summary>
		</member>
		<member name="P:UnityEditor.TextureImporterPlatformSettings.crunchedCompression">
			<summary>Use crunch compression when available.</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.ExportPackage(System.String[],System.String)">
			<summary>Exports the assets identified by assetPathNames to a unitypackage file in fileName.</summary>
		</member>
		<member name="M:UnityEditor.ShaderUtil.SetAsyncCompilation(UnityEngine.Rendering.CommandBuffer,System.Boolean)">
			<summary>Adds shader compilation mode command in the CommandBuffer.</summary>
		</member>
		<member name="P:UnityEditor.TextureImporterPlatformSettings.allowsAlphaSplitting">
			<summary>Allows Alpha splitting on the imported texture when needed (for example ETC1 compression for textures with transparency).</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.ImportPackage(System.String,System.Boolean)">
			<summary>Imports package at packagePath into the current project.</summary>
		</member>
		<member name="M:UnityEditor.ShaderUtil.RestoreAsyncCompilation(UnityEngine.Rendering.CommandBuffer)">
			<summary>Restores the previous Shader compilation mode in this CommandBuffer scope.</summary>
		</member>
		<member name="P:UnityEditor.TextureImporterPlatformSettings.androidETC2FallbackOverride">
			<summary>Override for ETC2 decompression fallback on Android devices that don't support ETC2.</summary>
		</member>
		<member name="M:UnityEditor.ShaderUtil.IsPassCompiled(UnityEngine.Material,System.Int32)">
			<summary>Checks if the Shader variant for the given pass in the Material has already been compiled.</summary>
		</member>
		<member name="M:UnityEditor.ShaderUtil.CompilePass(UnityEngine.Material,System.Int32,System.Boolean)">
			<summary>Request the Editor to compile the Shader Variant needed for the specific pass of the given Material.</summary>
		</member>
		<member name="M:UnityEditor.TextureImporterPlatformSettings.CopyTo(UnityEditor.TextureImporterPlatformSettings)">
			<summary>Copy parameters into another TextureImporterPlatformSettings object.</summary>
		</member>
		<member name="M:UnityEditor.ShaderUtil.GetShaderData(UnityEngine.Shader)">
			<summary>Get the shader data for a specific shader.</summary>
		</member>
		<member name="M:UnityEditor.ShaderUtil.ShaderHasError(UnityEngine.Shader)">
			<summary>Returns true if the given Shader generated any errors. Ignores warnings.</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.IsOpenForEdit(UnityEngine.Object)">
			<summary>Query whether an asset file is open for edit in version control.</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.IsOpenForEdit(UnityEngine.Object,UnityEditor.StatusQueryOptions)">
			<summary>Query whether an asset file is open for edit in version control.</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.IsOpenForEdit(System.String)">
			<summary>Query whether an asset file is open for edit in version control.</summary>
		</member>
		<member name="M:UnityEditor.ShaderUtil.ClearShaderErrors(UnityEngine.Shader)">
			<summary>Clears compile time messages for the given shader.</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.IsOpenForEdit(System.String,UnityEditor.StatusQueryOptions)">
			<summary>Query whether an asset file is open for edit in version control.</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.IsOpenForEdit(UnityEngine.Object,System.String&)">
			<summary>Query whether an asset file is open for edit in version control.</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.IsOpenForEdit(UnityEngine.Object,System.String&,UnityEditor.StatusQueryOptions)">
			<summary>Query whether an asset file is open for edit in version control.</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.IsOpenForEdit(System.String,System.String&)">
			<summary>Query whether an asset file is open for edit in version control.</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.IsOpenForEdit(System.String,System.String&,UnityEditor.StatusQueryOptions)">
			<summary>Query whether an asset file is open for edit in version control.</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.IsMetaFileOpenForEdit(UnityEngine.Object)">
			<summary>Query whether an asset's metadata (.meta) file is open for edit in version control.</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.IsMetaFileOpenForEdit(UnityEngine.Object,UnityEditor.StatusQueryOptions)">
			<summary>Query whether an asset's metadata (.meta) file is open for edit in version control.</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.IsMetaFileOpenForEdit(UnityEngine.Object,System.String&)">
			<summary>Query whether an asset's metadata (.meta) file is open for edit in version control.</summary>
		</member>
		<member name="M:UnityEditor.AssetDatabase.IsMetaFileOpenForEdit(UnityEngine.Object,System.String&,UnityEditor.StatusQueryOptions)">
			<summary>Query whether an asset's metadata (.meta) file is open for edit in version control.</summary>
		</member>
		<member name="T:UnityEditor.AssetDatabase.ImportPackageCallback">
			<summary>Delegate to be called from AssetDatabase.ImportPackage callbacks. packageName is the name of the package that raised the callback.</summary>
		</member>
		<member name="T:UnityEditor.AssetDatabase.ImportPackageFailedCallback">
			<summary>Delegate to be called from AssetDatabase.ImportPackage callbacks. packageName is the name of the package that raised the callback. errorMessage is the reason for the failure.</summary>
		</member>
	</members>
</doc>
